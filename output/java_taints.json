[
    {
        "taints": [
            {
                "code": "ResultSet rs = ps.executeQuery()) {",
                "file": "sonarlint-user-testing_dmaap-datarouter:datarouter-prov/src/main/java/org/onap/dmaap/datarouter/provisioning/store/StatisticsStore.java"
            },
            {
                "code": "PreparedStatement ps = makePreparedStatement(feedid, conn);",
                "file": "sonarlint-user-testing_dmaap-datarouter:datarouter-prov/src/main/java/org/onap/dmaap/datarouter/provisioning/store/StatisticsStore.java"
            },
            {
                "code": "eventlogger.debug(\"SQL Query for Statistics resultset. \" + sql);",
                "file": "sonarlint-user-testing_dmaap-datarouter:datarouter-prov/src/main/java/org/onap/dmaap/datarouter/provisioning/store/StatisticsStore.java"
            },
            {
                "code": "PreparedStatement statement = conn.prepareStatement(sql);",
                "file": "sonarlint-user-testing_dmaap-datarouter:datarouter-prov/src/main/java/org/onap/dmaap/datarouter/provisioning/store/StatisticsStore.java"
            },
            {
                "code": "statisticsStore.getRecordsForSQL(feedId, outputType, responseStream, resp);",
                "file": "sonarlint-user-testing_dmaap-datarouter:datarouter-prov/src/main/java/org/onap/dmaap/datarouter/provisioning/StatisticsRequestHandler.java"
            },
            {
                "code": "public void handleRequest(HttpServletResponse resp, String feedId, String outputType, ServletOutputStream responseStream) {",
                "file": "sonarlint-user-testing_dmaap-datarouter:datarouter-prov/src/main/java/org/onap/dmaap/datarouter/provisioning/StatisticsRequestHandler.java"
            },
            {
                "code": "requestHandler.handleRequest(resp, feedId, outputType, responseStream);",
                "file": "sonarlint-user-testing_dmaap-datarouter:datarouter-prov/src/main/java/org/onap/dmaap/datarouter/provisioning/StatisticsServlet.java"
            },
            {
                "code": "String feedId = req.getParameter(FEEDID);",
                "file": "sonarlint-user-testing_dmaap-datarouter:datarouter-prov/src/main/java/org/onap/dmaap/datarouter/provisioning/StatisticsServlet.java"
            }
        ],
        "id": "AXioTlrc55qfMKQbdPZk"
    },
    {
        "taints": [
            {
                "code": "rs = pstmt.executeQuery();",
                "file": "apache-dolphinscheduler:dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/TaskRecordDao.java"
            },
            {
                "code": "pstmt = conn.prepareStatement(sql);",
                "file": "apache-dolphinscheduler:dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/TaskRecordDao.java"
            },
            {
                "code": "sql += getWhereString(filterMap);",
                "file": "apache-dolphinscheduler:dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/TaskRecordDao.java"
            },
            {
                "code": "public static int countTaskRecord(Map<String, String> filterMap, String table) {",
                "file": "apache-dolphinscheduler:dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/TaskRecordDao.java"
            },
            {
                "code": "public Map<String,Object> queryTaskRecordListPaging(boolean isHistory, String taskName, String startDate,",
                "file": "apache-dolphinscheduler:dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/impl/TaskRecordServiceImpl.java"
            },
            {
                "code": "Map<String, Object> result = taskRecordService.queryTaskRecordListPaging(false, taskName, startTime, taskDate, sourceTable, destTable, endTime, state, pageNo, pageSize);",
                "file": "apache-dolphinscheduler:dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/TaskRecordController.java"
            },
            {
                "code": "@Override",
                "file": "apache-dolphinscheduler:dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/impl/TaskRecordServiceImpl.java"
            }
        ],
        "id": "AXela_QEYTlMEX6v8NMq"
    },
    {
        "taints": [
            {
                "code": "rs = pstmt.executeQuery();",
                "file": "apache-dolphinscheduler:dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/TaskRecordDao.java"
            },
            {
                "code": "pstmt = conn.prepareStatement(selectSql);",
                "file": "apache-dolphinscheduler:dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/TaskRecordDao.java"
            },
            {
                "code": "private static List<TaskRecord> getQueryResult(String selectSql) {",
                "file": "apache-dolphinscheduler:dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/TaskRecordDao.java"
            },
            {
                "code": "recordList = getQueryResult(sql);",
                "file": "apache-dolphinscheduler:dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/TaskRecordDao.java"
            },
            {
                "code": "sql += String.format(\" order by STARTDATE desc limit %d,%d\", offset, pageSize);",
                "file": "apache-dolphinscheduler:dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/TaskRecordDao.java"
            },
            {
                "code": "public static List<TaskRecord> queryAllTaskRecord(Map<String, String> filterMap, String table) {",
                "file": "apache-dolphinscheduler:dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/TaskRecordDao.java"
            },
            {
                "code": "List<TaskRecord> recordList = TaskRecordDao.queryAllTaskRecord(map, table);",
                "file": "apache-dolphinscheduler:dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/impl/TaskRecordServiceImpl.java"
            },
            {
                "code": "public Map<String,Object> queryTaskRecordListPaging(boolean isHistory, String taskName, String startDate,",
                "file": "apache-dolphinscheduler:dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/impl/TaskRecordServiceImpl.java"
            },
            {
                "code": "Map<String, Object> result = taskRecordService.queryTaskRecordListPaging(false, taskName, startTime, taskDate, sourceTable, destTable, endTime, state, pageNo, pageSize);",
                "file": "apache-dolphinscheduler:dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/TaskRecordController.java"
            },
            {
                "code": "@Override",
                "file": "apache-dolphinscheduler:dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/impl/TaskRecordServiceImpl.java"
            },
            {
                "code": "@RequestParam(value = \"taskName\", required = false) String taskName,",
                "file": "apache-dolphinscheduler:dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/TaskRecordController.java"
            }
        ],
        "id": "AXela_QEYTlMEX6v8NMr"
    },
    {
        "taints": [
            {
                "code": "Query query = manager.createNativeQuery(sql.toString(), ChangeManagementDetail.class);",
                "file": "onap_optf-cmso:cmso-service/src/main/java/org/onap/optf/cmso/model/dao/ChangeManagementDetailDaoImpl.java"
            },
            {
                "code": "public List<ChangeManagementDetail> searchScheduleDetails(String where, int limit) {",
                "file": "onap_optf-cmso:cmso-service/src/main/java/org/onap/optf/cmso/model/dao/ChangeManagementDetailDaoImpl.java"
            },
            {
                "code": "List<ChangeManagementDetail> list = cmDetailsDao.searchScheduleDetails(where.toString(), maxRows);",
                "file": "onap_optf-cmso:cmso-service/src/main/java/org/onap/optf/cmso/service/rs/CmsoServiceImpl.java"
            },
            {
                "code": "@Override",
                "file": "onap_optf-cmso:cmso-service/src/main/java/org/onap/optf/cmso/model/dao/ChangeManagementDetailDaoImpl.java"
            },
            {
                "code": "MultivaluedMap<String, String> qp = uri.getQueryParameters();",
                "file": "onap_optf-cmso:cmso-service/src/main/java/org/onap/optf/cmso/service/rs/CmsoServiceImpl.java"
            }
        ],
        "id": "AXhzstlMQocKC9FruBeU"
    },
    {
        "taints": [
            {
                "code": "TypedQuery<Message> query = getEntityManager().createQuery(queryText, Message.class);",
                "file": "Silverpeas_Silverpeas-Components:mailinglist/mailinglist-library/src/main/java/org/silverpeas/components/mailinglist/service/model/dao/MessageDaoImpl.java"
            },
            {
                "code": "queryText += \" \" + orderBy.getOrderExpression();",
                "file": "Silverpeas_Silverpeas-Components:mailinglist/mailinglist-library/src/main/java/org/silverpeas/components/mailinglist/service/model/dao/MessageDaoImpl.java"
            },
            {
                "code": "public List<Message> listDisplayableMessagesOfMailingList(String componentId,",
                "file": "Silverpeas_Silverpeas-Components:mailinglist/mailinglist-library/src/main/java/org/silverpeas/components/mailinglist/service/model/dao/MessageDaoImpl.java"
            },
            {
                "code": "return messageDao\n.listDisplayableMessagesOfMailingList(mailingList.getComponentId(), month, year, pageNumber,\nthis.elementsPerPage, orderBy);",
                "file": "Silverpeas_Silverpeas-Components:mailinglist/mailinglist-library/src/main/java/org/silverpeas/components/mailinglist/service/model/MessageServiceImpl.java"
            },
            {
                "code": "public List<Message> listDisplayableMessages(final MailingList mailingList, final int month,",
                "file": "Silverpeas_Silverpeas-Components:mailinglist/mailinglist-library/src/main/java/org/silverpeas/components/mailinglist/service/model/MessageServiceImpl.java"
            },
            {
                "code": "List<Message> messages = MailingListServicesProvider.getMessageService()\n.listDisplayableMessages(list, month, year, page, orderBy);",
                "file": "Silverpeas_Silverpeas-Components:mailinglist/mailinglist-war/src/main/java/org/silverpeas/components/mailinglist/servlets/MailingListProcessor.java"
            },
            {
                "code": "this.propertyName = propertyName;",
                "file": "Silverpeas_Silverpeas-Components:mailinglist/mailinglist-library/src/main/java/org/silverpeas/components/mailinglist/service/util/OrderBy.java"
            },
            {
                "code": "String orderParam = request.getParameter(ORDER_BY_PARAM);",
                "file": "Silverpeas_Silverpeas-Components:mailinglist/mailinglist-war/src/main/java/org/silverpeas/components/mailinglist/servlets/MailingListProcessor.java"
            }
        ],
        "id": "AXdtwAgTrdTvhTxX65nk"
    },
    {
        "taints": [
            {
                "code": "TypedQuery<Message> query = getEntityManager().createQuery(\n\"from Message where componentId = :componentId and moderated = :moderated \" + orderBy.\ngetOrderExpression(), Message.class);",
                "file": "Silverpeas_Silverpeas-Components:mailinglist/mailinglist-library/src/main/java/org/silverpeas/components/mailinglist/service/model/dao/MessageDaoImpl.java"
            },
            {
                "code": "public List<Message> listUnmoderatedMessagesOfMailingList(String componentId,",
                "file": "Silverpeas_Silverpeas-Components:mailinglist/mailinglist-library/src/main/java/org/silverpeas/components/mailinglist/service/model/dao/MessageDaoImpl.java"
            },
            {
                "code": "return messageDao.listUnmoderatedMessagesOfMailingList(mailingList.getComponentId(), pageNumber,\nthis.elementsPerPage, orderBy);",
                "file": "Silverpeas_Silverpeas-Components:mailinglist/mailinglist-library/src/main/java/org/silverpeas/components/mailinglist/service/model/MessageServiceImpl.java"
            },
            {
                "code": "public List<Message> listUnmoderatedeMessages(final MailingList mailingList, final int pageNumber,",
                "file": "Silverpeas_Silverpeas-Components:mailinglist/mailinglist-library/src/main/java/org/silverpeas/components/mailinglist/service/model/MessageServiceImpl.java"
            },
            {
                "code": "List<Message> messages = MailingListServicesProvider.getMessageService()\n.listUnmoderatedeMessages(list, page, orderBy);",
                "file": "Silverpeas_Silverpeas-Components:mailinglist/mailinglist-war/src/main/java/org/silverpeas/components/mailinglist/servlets/ModerationProcessor.java"
            },
            {
                "code": "this.propertyName = propertyName;",
                "file": "Silverpeas_Silverpeas-Components:mailinglist/mailinglist-library/src/main/java/org/silverpeas/components/mailinglist/service/util/OrderBy.java"
            },
            {
                "code": "String orderParam = request.getParameter(ORDER_BY_PARAM);",
                "file": "Silverpeas_Silverpeas-Components:mailinglist/mailinglist-war/src/main/java/org/silverpeas/components/mailinglist/servlets/ModerationProcessor.java"
            }
        ],
        "id": "AXdtwAgTrdTvhTxX65nj"
    },
    {
        "taints": [
            {
                "code": "ResultSet rs = prepStmt.executeQuery()) {",
                "file": "Silverpeas_Silverpeas-Core:core-services/personalOrganizer/src/main/java/org/silverpeas/core/personalorganizer/service/JournalDAO.java"
            },
            {
                "code": "try (PreparedStatement prepStmt = con.prepareStatement(selectStatement.toString());",
                "file": "Silverpeas_Silverpeas-Core:core-services/personalOrganizer/src/main/java/org/silverpeas/core/personalorganizer/service/JournalDAO.java"
            },
            {
                "code": "try (PreparedStatement prepStmt = con.prepareStatement(selectStatement.toString());",
                "file": "Silverpeas_Silverpeas-Core:core-services/personalOrganizer/src/main/java/org/silverpeas/core/personalorganizer/service/JournalDAO.java"
            },
            {
                "code": "public Collection<JournalHeader> getPeriodJournalHeadersForUser(Connection con,",
                "file": "Silverpeas_Silverpeas-Core:core-services/personalOrganizer/src/main/java/org/silverpeas/core/personalorganizer/service/JournalDAO.java"
            },
            {
                "code": "return getJournalDAO()\n.getPeriodJournalHeadersForUser(con, begin, end, userId, categoryId, participation);",
                "file": "Silverpeas_Silverpeas-Core:core-services/personalOrganizer/src/main/java/org/silverpeas/core/personalorganizer/service/DefaultCalendarService.java"
            },
            {
                "code": "public Collection<JournalHeader> getPeriodSchedulablesForUser(String begin, String end,",
                "file": "Silverpeas_Silverpeas-Core:core-services/personalOrganizer/src/main/java/org/silverpeas/core/personalorganizer/service/DefaultCalendarService.java"
            },
            {
                "code": "return calendar.getPeriodSchedulablesForUser(DateUtil.date2SQLDate(\nstartDate, getLanguage()), DateUtil.date2SQLDate(endDate, getLanguage()), getUserId(),\nnull,\nnew ParticipationStatus(ParticipationStatus.ACCEPTED).getString());",
                "file": "Silverpeas_Silverpeas-Core:core-web/src/main/java/org/silverpeas/core/web/calendar/ical/ExportIcalManager.java"
            },
            {
                "code": "private Collection<JournalHeader> getSchedulableCalendar(String startDate, String endDate)",
                "file": "Silverpeas_Silverpeas-Core:core-web/src/main/java/org/silverpeas/core/web/calendar/ical/ExportIcalManager.java"
            },
            {
                "code": "Collection<JournalHeader> schedulables = getSchedulableCalendar(fromDate, toDate);",
                "file": "Silverpeas_Silverpeas-Core:core-web/src/main/java/org/silverpeas/core/web/calendar/ical/ExportIcalManager.java"
            },
            {
                "code": "private List<CalendarEvent> getCalendarEvents(String startDate, String endDate) throws",
                "file": "Silverpeas_Silverpeas-Core:core-web/src/main/java/org/silverpeas/core/web/calendar/ical/ExportIcalManager.java"
            },
            {
                "code": "List<CalendarEvent> events = getCalendarEvents(null, null);",
                "file": "Silverpeas_Silverpeas-Core:core-web/src/main/java/org/silverpeas/core/web/calendar/ical/ExportIcalManager.java"
            },
            {
                "code": "public String exportIcalAgendaForSynchro() throws AgendaException {",
                "file": "Silverpeas_Silverpeas-Core:core-web/src/main/java/org/silverpeas/core/web/calendar/ical/ExportIcalManager.java"
            },
            {
                "code": "String filePath = exportManager.exportIcalAgendaForSynchro();",
                "file": "Silverpeas_Silverpeas-Core:core-war/src/main/java/org/silverpeas/web/agenda/servlets/SubscribeAgenda.java"
            },
            {
                "code": "this.userId = userId;",
                "file": "Silverpeas_Silverpeas-Core:core-web/src/main/java/org/silverpeas/core/web/calendar/ical/ExportIcalManager.java"
            },
            {
                "code": "String userId = getUserId(req);",
                "file": "Silverpeas_Silverpeas-Core:core-war/src/main/java/org/silverpeas/web/agenda/servlets/SubscribeAgenda.java"
            },
            {
                "code": "return request.getParameter(\"userId\");",
                "file": "Silverpeas_Silverpeas-Core:core-war/src/main/java/org/silverpeas/web/agenda/servlets/SubscribeAgenda.java"
            }
        ],
        "id": "AXe3Vl12-GevndGi0FUH"
    },
    {
        "taints": [
            {
                "code": "ResultSet rs = stmt.executeQuery(\"SELECT * FROM Baskets WHERE basketid = \" + basketId);",
                "file": "com.nabla.project.servers.sample:thebodgeitstore:src/main/webapp/basket.jsp"
            },
            {
                "code": "basketId = cookie.getValue();",
                "file": "com.nabla.project.servers.sample:thebodgeitstore:src/main/webapp/basket.jsp"
            },
            {
                "code": "basketId = cookie.getValue();",
                "file": "com.nabla.project.servers.sample:thebodgeitstore:src/main/webapp/basket.jsp"
            },
            {
                "code": "Cookie[] cookies = request.getCookies();",
                "file": "com.nabla.project.servers.sample:thebodgeitstore:src/main/webapp/basket.jsp"
            }
        ],
        "id": "AXYaio22Mnu97TooIx8p"
    },
    {
        "taints": [
            {
                "code": "rs = stmt.executeQuery();",
                "file": "com.nabla.project.servers.sample:thebodgeitstore:src/main/webapp/basket.jsp"
            },
            {
                "code": "stmt = conn.prepareStatement(\"SELECT * FROM BasketContents WHERE basketid=\" + basketId + \" AND productid = \" + productId);",
                "file": "com.nabla.project.servers.sample:thebodgeitstore:src/main/webapp/basket.jsp"
            },
            {
                "code": "String productId = request.getParameter(\"productid\");",
                "file": "com.nabla.project.servers.sample:thebodgeitstore:src/main/webapp/basket.jsp"
            },
            {
                "code": "basketId = cookie.getValue();",
                "file": "com.nabla.project.servers.sample:thebodgeitstore:src/main/webapp/basket.jsp"
            },
            {
                "code": "basketId = cookie.getValue();",
                "file": "com.nabla.project.servers.sample:thebodgeitstore:src/main/webapp/basket.jsp"
            },
            {
                "code": "Cookie[] cookies = request.getCookies();",
                "file": "com.nabla.project.servers.sample:thebodgeitstore:src/main/webapp/basket.jsp"
            }
        ],
        "id": "AXYaio22Mnu97TooIx8s"
    },
    {
        "taints": [
            {
                "code": "stmt.execute();",
                "file": "com.nabla.project.servers.sample:thebodgeitstore:src/main/webapp/basket.jsp"
            },
            {
                "code": "stmt = conn.prepareStatement(\"UPDATE BasketContents SET quantity = \" + Integer.parseInt(quantity) +\n\" WHERE basketid=\" + basketId + \" AND productid = \" + productId);",
                "file": "com.nabla.project.servers.sample:thebodgeitstore:src/main/webapp/basket.jsp"
            },
            {
                "code": "String productId = request.getParameter(\"productid\");",
                "file": "com.nabla.project.servers.sample:thebodgeitstore:src/main/webapp/basket.jsp"
            },
            {
                "code": "basketId = cookie.getValue();",
                "file": "com.nabla.project.servers.sample:thebodgeitstore:src/main/webapp/basket.jsp"
            },
            {
                "code": "basketId = cookie.getValue();",
                "file": "com.nabla.project.servers.sample:thebodgeitstore:src/main/webapp/basket.jsp"
            },
            {
                "code": "Cookie[] cookies = request.getCookies();",
                "file": "com.nabla.project.servers.sample:thebodgeitstore:src/main/webapp/basket.jsp"
            }
        ],
        "id": "AXYaio22Mnu97TooIx8q"
    },
    {
        "taints": [
            {
                "code": "rs = stmt.executeQuery();",
                "file": "com.nabla.project.servers.sample:thebodgeitstore:src/main/webapp/basket.jsp"
            },
            {
                "code": "stmt = conn.prepareStatement(\"SELECT * FROM Products where productid=\" + productId);",
                "file": "com.nabla.project.servers.sample:thebodgeitstore:src/main/webapp/basket.jsp"
            },
            {
                "code": "String productId = request.getParameter(\"productid\");",
                "file": "com.nabla.project.servers.sample:thebodgeitstore:src/main/webapp/basket.jsp"
            }
        ],
        "id": "AXYaio22Mnu97TooIx8o"
    },
    {
        "taints": [
            {
                "code": "stmt.execute();",
                "file": "com.nabla.project.servers.sample:thebodgeitstore:src/main/webapp/basket.jsp"
            },
            {
                "code": "stmt = conn.prepareStatement(\"INSERT INTO BasketContents (basketid, productid, quantity, pricetopay) VALUES (\" +\nbasketId + \", \" + productId + \", \" + Integer.parseInt(quantity) + \", \" + price + \")\");",
                "file": "com.nabla.project.servers.sample:thebodgeitstore:src/main/webapp/basket.jsp"
            },
            {
                "code": "String productId = request.getParameter(\"productid\");",
                "file": "com.nabla.project.servers.sample:thebodgeitstore:src/main/webapp/basket.jsp"
            },
            {
                "code": "basketId = cookie.getValue();",
                "file": "com.nabla.project.servers.sample:thebodgeitstore:src/main/webapp/basket.jsp"
            },
            {
                "code": "basketId = cookie.getValue();",
                "file": "com.nabla.project.servers.sample:thebodgeitstore:src/main/webapp/basket.jsp"
            },
            {
                "code": "Cookie[] cookies = request.getCookies();",
                "file": "com.nabla.project.servers.sample:thebodgeitstore:src/main/webapp/basket.jsp"
            }
        ],
        "id": "AXYaio22Mnu97TooIx8t"
    },
    {
        "taints": [
            {
                "code": "rs = stmt.executeQuery();",
                "file": "com.nabla.project.servers.sample:thebodgeitstore:src/main/webapp/basket.jsp"
            },
            {
                "code": "stmt = conn.prepareStatement(\"SELECT * FROM BasketContents, Products where basketid=\" + basketId +\n\" AND BasketContents.productid = Products.productid\");",
                "file": "com.nabla.project.servers.sample:thebodgeitstore:src/main/webapp/basket.jsp"
            },
            {
                "code": "basketId = cookie.getValue();",
                "file": "com.nabla.project.servers.sample:thebodgeitstore:src/main/webapp/basket.jsp"
            },
            {
                "code": "basketId = cookie.getValue();",
                "file": "com.nabla.project.servers.sample:thebodgeitstore:src/main/webapp/basket.jsp"
            },
            {
                "code": "Cookie[] cookies = request.getCookies();",
                "file": "com.nabla.project.servers.sample:thebodgeitstore:src/main/webapp/basket.jsp"
            }
        ],
        "id": "AXYaio22Mnu97TooIx8r"
    },
    {
        "taints": [
            {
                "code": "rs = stmt.executeQuery(\"SELECT * FROM Users WHERE (name = '\" + username + \"' AND password = '\" + password + \"')\");",
                "file": "com.nabla.project.servers.sample:thebodgeitstore:src/main/webapp/login.jsp"
            },
            {
                "code": "String username = (String) request.getParameter(\"username\");",
                "file": "com.nabla.project.servers.sample:thebodgeitstore:src/main/webapp/login.jsp"
            }
        ],
        "id": "AXYaio0ZMnu97TooIx8f"
    },
    {
        "taints": [
            {
                "code": "stmt.execute(\"UPDATE BasketContents SET basketid = \" + cBasketId + \" WHERE basketid = \" + basketId);",
                "file": "com.nabla.project.servers.sample:thebodgeitstore:src/main/webapp/login.jsp"
            },
            {
                "code": "basketId = cookie.getValue();",
                "file": "com.nabla.project.servers.sample:thebodgeitstore:src/main/webapp/login.jsp"
            },
            {
                "code": "basketId = cookie.getValue();",
                "file": "com.nabla.project.servers.sample:thebodgeitstore:src/main/webapp/login.jsp"
            },
            {
                "code": "Cookie[] cookies = request.getCookies();",
                "file": "com.nabla.project.servers.sample:thebodgeitstore:src/main/webapp/login.jsp"
            }
        ],
        "id": "AXYaio0ZMnu97TooIx8g"
    },
    {
        "taints": [
            {
                "code": "stmt.execute(\"UPDATE Users SET currentbasketid = \" + basketId + \" WHERE userid = \" + userid);",
                "file": "com.nabla.project.servers.sample:thebodgeitstore:src/main/webapp/login.jsp"
            },
            {
                "code": "basketId = cookie.getValue();",
                "file": "com.nabla.project.servers.sample:thebodgeitstore:src/main/webapp/login.jsp"
            },
            {
                "code": "basketId = cookie.getValue();",
                "file": "com.nabla.project.servers.sample:thebodgeitstore:src/main/webapp/login.jsp"
            },
            {
                "code": "Cookie[] cookies = request.getCookies();",
                "file": "com.nabla.project.servers.sample:thebodgeitstore:src/main/webapp/login.jsp"
            }
        ],
        "id": "AXYaio0ZMnu97TooIx8h"
    },
    {
        "taints": [
            {
                "code": "stmt.executeQuery(\"INSERT INTO Users (name, type, password) VALUES ('\" + username + \"', 'USER', '\" + password1 + \"')\");",
                "file": "com.nabla.project.servers.sample:thebodgeitstore:src/main/webapp/register.jsp"
            },
            {
                "code": "String password1 = (String) request.getParameter(\"password1\");",
                "file": "com.nabla.project.servers.sample:thebodgeitstore:src/main/webapp/register.jsp"
            },
            {
                "code": "String username = (String) request.getParameter(\"username\");",
                "file": "com.nabla.project.servers.sample:thebodgeitstore:src/main/webapp/register.jsp"
            }
        ],
        "id": "AXYaio2CMnu97TooIx8j"
    },
    {
        "taints": [
            {
                "code": "rs = stmt.executeQuery(\"SELECT * FROM Users WHERE (name = '\" + username + \"' AND password = '\" + password1 + \"')\");",
                "file": "com.nabla.project.servers.sample:thebodgeitstore:src/main/webapp/register.jsp"
            },
            {
                "code": "String password1 = (String) request.getParameter(\"password1\");",
                "file": "com.nabla.project.servers.sample:thebodgeitstore:src/main/webapp/register.jsp"
            },
            {
                "code": "String username = (String) request.getParameter(\"username\");",
                "file": "com.nabla.project.servers.sample:thebodgeitstore:src/main/webapp/register.jsp"
            }
        ],
        "id": "AXYaio2CMnu97TooIx8k"
    },
    {
        "taints": [
            {
                "code": "stmt.execute(\"UPDATE Users SET currentbasketid = \" + basketId + \" WHERE userid = \" + userid);",
                "file": "com.nabla.project.servers.sample:thebodgeitstore:src/main/webapp/register.jsp"
            },
            {
                "code": "basketId = cookie.getValue();",
                "file": "com.nabla.project.servers.sample:thebodgeitstore:src/main/webapp/register.jsp"
            },
            {
                "code": "basketId = cookie.getValue();",
                "file": "com.nabla.project.servers.sample:thebodgeitstore:src/main/webapp/register.jsp"
            },
            {
                "code": "Cookie[] cookies = request.getCookies();",
                "file": "com.nabla.project.servers.sample:thebodgeitstore:src/main/webapp/register.jsp"
            }
        ],
        "id": "AXYaio2CMnu97TooIx8m"
    },
    {
        "taints": [
            {
                "code": "stmt.execute(\"UPDATE Baskets SET userid = \" + userid + \" WHERE basketid = \" + basketId);",
                "file": "com.nabla.project.servers.sample:thebodgeitstore:src/main/webapp/register.jsp"
            },
            {
                "code": "basketId = cookie.getValue();",
                "file": "com.nabla.project.servers.sample:thebodgeitstore:src/main/webapp/register.jsp"
            },
            {
                "code": "basketId = cookie.getValue();",
                "file": "com.nabla.project.servers.sample:thebodgeitstore:src/main/webapp/register.jsp"
            },
            {
                "code": "Cookie[] cookies = request.getCookies();",
                "file": "com.nabla.project.servers.sample:thebodgeitstore:src/main/webapp/register.jsp"
            }
        ],
        "id": "AXYaio2CMnu97TooIx8l"
    },
    {
        "taints": [
            {
                "code": "ResultSet rs = preparedStatement.executeQuery();",
                "file": "snood_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            },
            {
                "code": "PreparedStatement preparedStatement = connection.prepareStatement(\"select id, hostname, ip, mac, status, description from servers  where status <> 'out of order' order by \" + column)) {",
                "file": "snood_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            },
            {
                "code": "PreparedStatement preparedStatement = connection.prepareStatement(\"select id, hostname, ip, mac, status, description from servers  where status <> 'out of order' order by \" + column)) {",
                "file": "snood_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            },
            {
                "code": "public List<Server> sort(@RequestParam String column) throws Exception {",
                "file": "snood_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            }
        ],
        "id": "AXjaUovrdfEtubEi4BQJ"
    },
    {
        "taints": [
            {
                "code": "statement.executeUpdate(query);",
                "file": "snood_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "snood_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "snood_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String query) {",
                "file": "snood_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            }
        ],
        "id": "AXjaUouLdfEtubEi4BPM"
    },
    {
        "taints": [
            {
                "code": "statement.executeUpdate(query);",
                "file": "snood_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "snood_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "snood_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String query) {",
                "file": "snood_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            }
        ],
        "id": "AXjaUouldfEtubEi4BPe"
    },
    {
        "taints": [
            {
                "code": "ResultSet resultSet = statement.executeQuery();",
                "file": "snood_webgoat:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            },
            {
                "code": "PreparedStatement statement = connection.prepareStatement(\"select password from challenge_users where userid = '\" + username_login + \"' and password = '\" + password_login + \"'\");",
                "file": "snood_webgoat:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            },
            {
                "code": "PreparedStatement statement = connection.prepareStatement(\"select password from challenge_users where userid = '\" + username_login + \"' and password = '\" + password_login + \"'\");",
                "file": "snood_webgoat:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            },
            {
                "code": "public AttackResult login(@RequestParam String username_login, @RequestParam String password_login) throws Exception {",
                "file": "snood_webgoat:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            }
        ],
        "id": "AXjaUotHdfEtubEi4BOg"
    },
    {
        "taints": [
            {
                "code": "ResultSet resultSet = statement.executeQuery(checkUserQuery);",
                "file": "snood_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"
            },
            {
                "code": "String checkUserQuery = \"select userid from sql_challenge_users where userid = '\" + username_reg + \"'\";",
                "file": "snood_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"
            },
            {
                "code": "public AttackResult registerNewUser(@RequestParam String username_reg, @RequestParam String email_reg, @RequestParam String password_reg) throws Exception {",
                "file": "snood_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"
            }
        ],
        "id": "AXjaUou_dfEtubEi4BPz"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "snood_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "snood_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "snood_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String query) {",
                "file": "snood_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            }
        ],
        "id": "AXjaUotidfEtubEi4BOo"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = query.executeQuery();",
                "file": "snood_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "PreparedStatement query = connection.prepareStatement(queryString, ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);",
                "file": "snood_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "String queryString = \"SELECT * From user_data WHERE Login_Count = ? and userid= \" + accountName;",
                "file": "snood_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String login_count, String accountName) {",
                "file": "snood_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "return injectableQuery(login_count, userid);",
                "file": "snood_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String userid, @RequestParam String login_count, HttpServletRequest request) throws IOException {",
                "file": "snood_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            }
        ],
        "id": "AXjaUotrdfEtubEi4BO0"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "snood_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "String query = \"SELECT * FROM access_log WHERE action LIKE '%\" + action + \"%'\";",
                "file": "snood_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "protected AttackResult injectableQueryAvailability(String action) {",
                "file": "snood_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "return injectableQueryAvailability(action_string);",
                "file": "snood_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String action_string) {",
                "file": "snood_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            }
        ],
        "id": "AXjaUot_dfEtubEi4BPI"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "snood_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "query = \"SELECT * FROM user_data WHERE first_name = 'John' and last_name = '\" + accountName + \"'\";",
                "file": "snood_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String accountName) {",
                "file": "snood_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "return injectableQuery(account + \" \" + operator + \" \" + injection);",
                "file": "snood_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String account, @RequestParam String operator, @RequestParam String injection) {",
                "file": "snood_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            }
        ],
        "id": "AXjaUoutdfEtubEi4BPh"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "snood_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "String query = \"SELECT * FROM employees WHERE last_name = '\" + name + \"' AND auth_tan = '\" + auth_tan + \"'\";",
                "file": "snood_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "protected AttackResult injectableQueryConfidentiality(String name, String auth_tan) {",
                "file": "snood_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "return injectableQueryConfidentiality(name, auth_tan);",
                "file": "snood_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String name, @RequestParam String auth_tan) {",
                "file": "snood_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            }
        ],
        "id": "AXjaUot1dfEtubEi4BPA"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "snood_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "String query = \"SELECT * FROM employees WHERE last_name = '\" + name + \"' AND auth_tan = '\" + auth_tan + \"'\";",
                "file": "snood_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "protected AttackResult injectableQueryIntegrity(String name, String auth_tan) {",
                "file": "snood_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "return injectableQueryIntegrity(name, auth_tan);",
                "file": "snood_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String name, @RequestParam String auth_tan) {",
                "file": "snood_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            }
        ],
        "id": "AXjaUoucdfEtubEi4BPb"
    },
    {
        "taints": [
            {
                "code": "ResultSet rs = preparedStatement.executeQuery();",
                "file": "testdvwa_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            },
            {
                "code": "PreparedStatement preparedStatement = connection.prepareStatement(\"select id, hostname, ip, mac, status, description from servers  where status <> 'out of order' order by \" + column)) {",
                "file": "testdvwa_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            },
            {
                "code": "PreparedStatement preparedStatement = connection.prepareStatement(\"select id, hostname, ip, mac, status, description from servers  where status <> 'out of order' order by \" + column)) {",
                "file": "testdvwa_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            },
            {
                "code": "public List<Server> sort(@RequestParam String column) throws Exception {",
                "file": "testdvwa_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            }
        ],
        "id": "AXixtjXEs0Qr2xQ-Paz6"
    },
    {
        "taints": [
            {
                "code": "statement.executeUpdate(query);",
                "file": "testdvwa_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "testdvwa_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "testdvwa_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String query) {",
                "file": "testdvwa_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            }
        ],
        "id": "AXixtjVQs0Qr2xQ-Pay9"
    },
    {
        "taints": [
            {
                "code": "statement.executeUpdate(query);",
                "file": "testdvwa_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "testdvwa_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "testdvwa_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String query) {",
                "file": "testdvwa_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            }
        ],
        "id": "AXixtjVws0Qr2xQ-PazP"
    },
    {
        "taints": [
            {
                "code": "ResultSet resultSet = statement.executeQuery();",
                "file": "testdvwa_webgoat:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            },
            {
                "code": "PreparedStatement statement = connection.prepareStatement(\"select password from challenge_users where userid = '\" + username_login + \"' and password = '\" + password_login + \"'\");",
                "file": "testdvwa_webgoat:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            },
            {
                "code": "PreparedStatement statement = connection.prepareStatement(\"select password from challenge_users where userid = '\" + username_login + \"' and password = '\" + password_login + \"'\");",
                "file": "testdvwa_webgoat:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            },
            {
                "code": "public AttackResult login(@RequestParam String username_login, @RequestParam String password_login) throws Exception {",
                "file": "testdvwa_webgoat:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            }
        ],
        "id": "AXixtjT0s0Qr2xQ-PayR"
    },
    {
        "taints": [
            {
                "code": "ResultSet resultSet = statement.executeQuery(checkUserQuery);",
                "file": "testdvwa_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"
            },
            {
                "code": "String checkUserQuery = \"select userid from sql_challenge_users where userid = '\" + username_reg + \"'\";",
                "file": "testdvwa_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"
            },
            {
                "code": "public AttackResult registerNewUser(@RequestParam String username_reg, @RequestParam String email_reg, @RequestParam String password_reg) throws Exception {",
                "file": "testdvwa_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"
            }
        ],
        "id": "AXixtjWPs0Qr2xQ-Pazk"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "testdvwa_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "testdvwa_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "testdvwa_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String query) {",
                "file": "testdvwa_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            }
        ],
        "id": "AXixtjUUs0Qr2xQ-PayZ"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = query.executeQuery();",
                "file": "testdvwa_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "PreparedStatement query = connection.prepareStatement(queryString, ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);",
                "file": "testdvwa_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "String queryString = \"SELECT * From user_data WHERE Login_Count = ? and userid= \" + accountName;",
                "file": "testdvwa_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String login_count, String accountName) {",
                "file": "testdvwa_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "return injectableQuery(login_count, userid);",
                "file": "testdvwa_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String userid, @RequestParam String login_count, HttpServletRequest request) throws IOException {",
                "file": "testdvwa_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            }
        ],
        "id": "AXixtjUes0Qr2xQ-Payl"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "testdvwa_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "String query = \"SELECT * FROM access_log WHERE action LIKE '%\" + action + \"%'\";",
                "file": "testdvwa_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "protected AttackResult injectableQueryAvailability(String action) {",
                "file": "testdvwa_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "return injectableQueryAvailability(action_string);",
                "file": "testdvwa_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String action_string) {",
                "file": "testdvwa_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            }
        ],
        "id": "AXixtjVCs0Qr2xQ-Pay5"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "testdvwa_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "query = \"SELECT * FROM user_data WHERE first_name = 'John' and last_name = '\" + accountName + \"'\";",
                "file": "testdvwa_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String accountName) {",
                "file": "testdvwa_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "return injectableQuery(account + \" \" + operator + \" \" + injection);",
                "file": "testdvwa_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String account, @RequestParam String operator, @RequestParam String injection) {",
                "file": "testdvwa_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            }
        ],
        "id": "AXixtjV6s0Qr2xQ-PazS"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "testdvwa_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "String query = \"SELECT * FROM employees WHERE last_name = '\" + name + \"' AND auth_tan = '\" + auth_tan + \"'\";",
                "file": "testdvwa_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "protected AttackResult injectableQueryConfidentiality(String name, String auth_tan) {",
                "file": "testdvwa_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "return injectableQueryConfidentiality(name, auth_tan);",
                "file": "testdvwa_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String name, @RequestParam String auth_tan) {",
                "file": "testdvwa_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            }
        ],
        "id": "AXixtjU1s0Qr2xQ-Payx"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "testdvwa_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "String query = \"SELECT * FROM employees WHERE last_name = '\" + name + \"' AND auth_tan = '\" + auth_tan + \"'\";",
                "file": "testdvwa_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "protected AttackResult injectableQueryIntegrity(String name, String auth_tan) {",
                "file": "testdvwa_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "return injectableQueryIntegrity(name, auth_tan);",
                "file": "testdvwa_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String name, @RequestParam String auth_tan) {",
                "file": "testdvwa_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            }
        ],
        "id": "AXixtjVls0Qr2xQ-PazM"
    },
    {
        "taints": [
            {
                "code": "return JDBC_TEMPLATE.query(sql, new BookMapper(), (search.getBookName() + \"%\"), search.getBookYearOfPublicationMin(), search.getBookYearOfPublicationMax(), (search.getBookPublisher() + \"%\"), (search.getAuthorFirstName() + \"%\"), (search.getAuthorLastName() + \"%\"), search.getAuthorYearOfBirthMin(), search.getAuthorYearOfBirthMax(), (sex + \"%\"));",
                "file": "Pavel-Kuropatin_GodelTestTask:src/main/java/com/kuropatin/library/repositories/SearchRepositoryImpl.java"
            },
            {
                "code": "String sql = \"SELECT * FROM books \" +\n\"WHERE LOWER(book_name) LIKE LOWER(?) \" +\n\"AND year_of_publication BETWEEN ? AND ? \" +\n\"AND LOWER(publisher) LIKE LOWER(?) \" +\n\"AND id IN (\" +\n\"SELECT book_author.book_id \" +\n\"FROM authors, book_author \" +\n\"WHERE book_author.author_id = authors.id \" +\n\"AND LOWER(authors.first_name) LIKE LOWER(?) \" +\n\"AND LOWER(authors.last_name) LIKE LOWER(?) \" +\n\"AND CAST(SUBSTRING(authors.birth_date, 7) as int) BETWEEN ? AND ? \" +\n\"AND authors.sex LIKE ? \" +\n\") ORDER BY \" + search.getOrderBy() + \" \" + sortDirection;",
                "file": "Pavel-Kuropatin_GodelTestTask:src/main/java/com/kuropatin/library/repositories/SearchRepositoryImpl.java"
            },
            {
                "code": "public List<Book> findBooks(Search search, String sex, String sortDirection) {",
                "file": "Pavel-Kuropatin_GodelTestTask:src/main/java/com/kuropatin/library/repositories/SearchRepositoryImpl.java"
            },
            {
                "code": "public String getViewSearch(@ModelAttribute(MODEL_ATTRIBUTE_SEARCH) Search search, Model model, BindingResult bindingResult) {",
                "file": "Pavel-Kuropatin_GodelTestTask:src/main/java/com/kuropatin/library/controllers/SearchController.java"
            }
        ],
        "id": "AXg7Ja1Z0xmFcSOOoiTm"
    },
    {
        "taints": [
            {
                "code": "statement.executeQuery(query);",
                "file": "alexsandrors91_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "alexsandrors91_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "alexsandrors91_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5.java"
            },
            {
                "code": "public AttackResult completed(String query) {",
                "file": "alexsandrors91_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5.java"
            },
            {
                "code": "@PostMapping(\"/SqlInjection/attack5\")",
                "file": "alexsandrors91_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5.java"
            }
        ],
        "id": "AXi7s1jTVlHJ4MbNeRq-"
    },
    {
        "taints": [
            {
                "code": "ResultSet rs = preparedStatement.executeQuery();",
                "file": "alexsandrors91_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            },
            {
                "code": "PreparedStatement preparedStatement = connection.prepareStatement(\"select id, hostname, ip, mac, status, description from servers  where status <> 'out of order' order by \" + column)) {",
                "file": "alexsandrors91_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            },
            {
                "code": "PreparedStatement preparedStatement = connection.prepareStatement(\"select id, hostname, ip, mac, status, description from servers  where status <> 'out of order' order by \" + column)) {",
                "file": "alexsandrors91_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            },
            {
                "code": "public List<Server> sort(@RequestParam String column) throws Exception {",
                "file": "alexsandrors91_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            }
        ],
        "id": "AXi7s1j1VlHJ4MbNeRr9"
    },
    {
        "taints": [
            {
                "code": "statement.executeUpdate(query);",
                "file": "alexsandrors91_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "alexsandrors91_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "alexsandrors91_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String query) {",
                "file": "alexsandrors91_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            }
        ],
        "id": "AXi7s1jQVlHJ4MbNeRq8"
    },
    {
        "taints": [
            {
                "code": "statement.executeUpdate(query);",
                "file": "alexsandrors91_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "alexsandrors91_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "alexsandrors91_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String query) {",
                "file": "alexsandrors91_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            }
        ],
        "id": "AXi7s1jaVlHJ4MbNeRrP"
    },
    {
        "taints": [
            {
                "code": "ResultSet resultSet = statement.executeQuery();",
                "file": "alexsandrors91_WebGoat:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            },
            {
                "code": "PreparedStatement statement = connection.prepareStatement(\"select password from challenge_users where userid = '\" + username_login + \"' and password = '\" + password_login + \"'\");",
                "file": "alexsandrors91_WebGoat:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            },
            {
                "code": "PreparedStatement statement = connection.prepareStatement(\"select password from challenge_users where userid = '\" + username_login + \"' and password = '\" + password_login + \"'\");",
                "file": "alexsandrors91_WebGoat:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            },
            {
                "code": "public AttackResult login(@RequestParam String username_login, @RequestParam String password_login) throws Exception {",
                "file": "alexsandrors91_WebGoat:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            }
        ],
        "id": "AXi7s1i2VlHJ4MbNeRqQ"
    },
    {
        "taints": [
            {
                "code": "ResultSet resultSet = statement.executeQuery(checkUserQuery);",
                "file": "alexsandrors91_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"
            },
            {
                "code": "String checkUserQuery = \"select userid from sql_challenge_users where userid = '\" + username_reg + \"'\";",
                "file": "alexsandrors91_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"
            },
            {
                "code": "public AttackResult registerNewUser(@RequestParam String username_reg, @RequestParam String email_reg, @RequestParam String password_reg) throws Exception {",
                "file": "alexsandrors91_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"
            }
        ],
        "id": "AXi7s1jkVlHJ4MbNeRrn"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "alexsandrors91_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "alexsandrors91_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "alexsandrors91_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String query) {",
                "file": "alexsandrors91_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            }
        ],
        "id": "AXi7s1i-VlHJ4MbNeRqY"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = query.executeQuery();",
                "file": "alexsandrors91_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "PreparedStatement query = connection.prepareStatement(queryString, ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);",
                "file": "alexsandrors91_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "String queryString = \"SELECT * From user_data WHERE Login_Count = ? and userid= \" + accountName;",
                "file": "alexsandrors91_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String login_count, String accountName) {",
                "file": "alexsandrors91_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "return injectableQuery(login_count, userid);",
                "file": "alexsandrors91_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String userid, @RequestParam String login_count, HttpServletRequest request) throws IOException {",
                "file": "alexsandrors91_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            }
        ],
        "id": "AXi7s1jCVlHJ4MbNeRqk"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "alexsandrors91_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "String query = \"SELECT * FROM access_log WHERE action LIKE '%\" + action + \"%'\";",
                "file": "alexsandrors91_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "protected AttackResult injectableQueryAvailability(String action) {",
                "file": "alexsandrors91_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "return injectableQueryAvailability(action_string);",
                "file": "alexsandrors91_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String action_string) {",
                "file": "alexsandrors91_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            }
        ],
        "id": "AXi7s1jLVlHJ4MbNeRq4"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "alexsandrors91_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "query = \"SELECT * FROM user_data WHERE first_name = 'John' and last_name = '\" + accountName + \"'\";",
                "file": "alexsandrors91_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String accountName) {",
                "file": "alexsandrors91_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "return injectableQuery(account + \" \" + operator + \" \" + injection);",
                "file": "alexsandrors91_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String account, @RequestParam String operator, @RequestParam String injection) {",
                "file": "alexsandrors91_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            }
        ],
        "id": "AXi7s1jdVlHJ4MbNeRrS"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "alexsandrors91_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "String query = \"SELECT * FROM employees WHERE last_name = '\" + name + \"' AND auth_tan = '\" + auth_tan + \"'\";",
                "file": "alexsandrors91_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "protected AttackResult injectableQueryConfidentiality(String name, String auth_tan) {",
                "file": "alexsandrors91_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "return injectableQueryConfidentiality(name, auth_tan);",
                "file": "alexsandrors91_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String name, @RequestParam String auth_tan) {",
                "file": "alexsandrors91_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            }
        ],
        "id": "AXi7s1jGVlHJ4MbNeRqw"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "alexsandrors91_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "String query = \"SELECT * FROM employees WHERE last_name = '\" + name + \"' AND auth_tan = '\" + auth_tan + \"'\";",
                "file": "alexsandrors91_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "protected AttackResult injectableQueryIntegrity(String name, String auth_tan) {",
                "file": "alexsandrors91_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "return injectableQueryIntegrity(name, auth_tan);",
                "file": "alexsandrors91_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String name, @RequestParam String auth_tan) {",
                "file": "alexsandrors91_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            }
        ],
        "id": "AXi7s1jWVlHJ4MbNeRrM"
    },
    {
        "taints": [
            {
                "code": "rs=stmt.executeQuery(\"select * from users where email='\"+email+\"'\");",
                "file": "skoussa2_JavaVulnerableLab9:src/main/java/org/cysecurity/cspf/jvl/controller/EmailCheck.java"
            },
            {
                "code": "String email=request.getParameter(\"email\").trim();",
                "file": "skoussa2_JavaVulnerableLab9:src/main/java/org/cysecurity/cspf/jvl/controller/EmailCheck.java"
            },
            {
                "code": "String email=request.getParameter(\"email\").trim();",
                "file": "skoussa2_JavaVulnerableLab9:src/main/java/org/cysecurity/cspf/jvl/controller/EmailCheck.java"
            }
        ],
        "id": "AXitV6OqyYTjqph7_Cio"
    },
    {
        "taints": [
            {
                "code": "rs=stmt.executeQuery(\"select * from users where username='\"+user+\"' and password='\"+pass+\"'\");",
                "file": "skoussa2_JavaVulnerableLab9:src/main/java/org/cysecurity/cspf/jvl/controller/LoginValidator.java"
            },
            {
                "code": "String pass=request.getParameter(\"password\").trim();",
                "file": "skoussa2_JavaVulnerableLab9:src/main/java/org/cysecurity/cspf/jvl/controller/LoginValidator.java"
            },
            {
                "code": "String user=request.getParameter(\"username\").trim();",
                "file": "skoussa2_JavaVulnerableLab9:src/main/java/org/cysecurity/cspf/jvl/controller/LoginValidator.java"
            },
            {
                "code": "String user=request.getParameter(\"username\").trim();",
                "file": "skoussa2_JavaVulnerableLab9:src/main/java/org/cysecurity/cspf/jvl/controller/LoginValidator.java"
            }
        ],
        "id": "AXitV6NgyYTjqph7_ChU"
    },
    {
        "taints": [
            {
                "code": "stmt.executeUpdate(\"INSERT into users(username, password, email, About,avatar,privilege,secretquestion,secret) values ('\"+user+\"','\"+pass+\"','\"+email+\"','\"+about+\"','default.jpg','user',1,'\"+secret+\"')\");",
                "file": "skoussa2_JavaVulnerableLab9:src/main/java/org/cysecurity/cspf/jvl/controller/Register.java"
            },
            {
                "code": "String about=request.getParameter(\"About\");",
                "file": "skoussa2_JavaVulnerableLab9:src/main/java/org/cysecurity/cspf/jvl/controller/Register.java"
            },
            {
                "code": "String email=request.getParameter(\"email\");",
                "file": "skoussa2_JavaVulnerableLab9:src/main/java/org/cysecurity/cspf/jvl/controller/Register.java"
            },
            {
                "code": "String pass=request.getParameter(\"password\");",
                "file": "skoussa2_JavaVulnerableLab9:src/main/java/org/cysecurity/cspf/jvl/controller/Register.java"
            },
            {
                "code": "String user=request.getParameter(\"username\");",
                "file": "skoussa2_JavaVulnerableLab9:src/main/java/org/cysecurity/cspf/jvl/controller/Register.java"
            }
        ],
        "id": "AXitV6OXyYTjqph7_CiE"
    },
    {
        "taints": [
            {
                "code": "stmt.executeUpdate(\"INSERT into UserMessages(recipient, sender, subject, msg) values ('\"+user+\"','admin','Hi','Hi<br/> This is admin of this page. <br/> Welcome to Our Forum')\");",
                "file": "skoussa2_JavaVulnerableLab9:src/main/java/org/cysecurity/cspf/jvl/controller/Register.java"
            },
            {
                "code": "String user=request.getParameter(\"username\");",
                "file": "skoussa2_JavaVulnerableLab9:src/main/java/org/cysecurity/cspf/jvl/controller/Register.java"
            }
        ],
        "id": "AXitV6OXyYTjqph7_CiD"
    },
    {
        "taints": [
            {
                "code": "rs=stmt.executeQuery(\"select * from users where username='\"+user+\"'\");",
                "file": "skoussa2_JavaVulnerableLab9:src/main/java/org/cysecurity/cspf/jvl/controller/UsernameCheck.java"
            },
            {
                "code": "String user=request.getParameter(\"username\").trim();",
                "file": "skoussa2_JavaVulnerableLab9:src/main/java/org/cysecurity/cspf/jvl/controller/UsernameCheck.java"
            },
            {
                "code": "String user=request.getParameter(\"username\").trim();",
                "file": "skoussa2_JavaVulnerableLab9:src/main/java/org/cysecurity/cspf/jvl/controller/UsernameCheck.java"
            }
        ],
        "id": "AXitV6NzyYTjqph7_Chk"
    },
    {
        "taints": [
            {
                "code": "rs=stmt.executeQuery(\"select * from users where username='\"+request.getParameter(\"username\").trim()+\"' and secret='\"+request.getParameter(\"secret\")+\"'\");",
                "file": "skoussa2_JavaVulnerableLab9:src/main/webapp/ForgotPassword.jsp"
            },
            {
                "code": "rs=stmt.executeQuery(\"select * from users where username='\"+request.getParameter(\"username\").trim()+\"' and secret='\"+request.getParameter(\"secret\")+\"'\");",
                "file": "skoussa2_JavaVulnerableLab9:src/main/webapp/ForgotPassword.jsp"
            }
        ],
        "id": "AXitV6LhyYTjqph7_CgQ"
    },
    {
        "taints": [
            {
                "code": "rs=stmt.executeQuery(\"select * from users where username='\"+user+\"' and password='\"+pass+\"' and privilege='admin'\");",
                "file": "skoussa2_JavaVulnerableLab9:src/main/webapp/admin/adminlogin.jsp"
            },
            {
                "code": "String user=request.getParameter(\"username\");",
                "file": "skoussa2_JavaVulnerableLab9:src/main/webapp/admin/adminlogin.jsp"
            }
        ],
        "id": "AXitV6ILyYTjqph7_Cft"
    },
    {
        "taints": [
            {
                "code": "stmt.executeUpdate(\"Delete from users where username='\"+user+\"'\");",
                "file": "skoussa2_JavaVulnerableLab9:src/main/webapp/admin/manageusers.jsp"
            },
            {
                "code": "String user=request.getParameter(\"user\");",
                "file": "skoussa2_JavaVulnerableLab9:src/main/webapp/admin/manageusers.jsp"
            }
        ],
        "id": "AXitV6ICyYTjqph7_Cfo"
    },
    {
        "taints": [
            {
                "code": "rs=stmt.executeQuery(\"select * from UserMessages where msgid=\"+request.getParameter(\"msgid\"));",
                "file": "skoussa2_JavaVulnerableLab9:src/main/webapp/vulnerability/DisplayMessage.jsp"
            }
        ],
        "id": "AXitV6LVyYTjqph7_CgN"
    },
    {
        "taints": [
            {
                "code": "stmt.executeUpdate(\"INSERT into posts(content,title,user) values ('\"+content+\"','\"+title+\"','\"+user+\"')\");",
                "file": "skoussa2_JavaVulnerableLab9:src/main/webapp/vulnerability/forum.jsp"
            },
            {
                "code": "String title=request.getParameter(\"title\");",
                "file": "skoussa2_JavaVulnerableLab9:src/main/webapp/vulnerability/forum.jsp"
            },
            {
                "code": "String content=request.getParameter(\"content\");",
                "file": "skoussa2_JavaVulnerableLab9:src/main/webapp/vulnerability/forum.jsp"
            }
        ],
        "id": "AXitV6LByYTjqph7_CgL"
    },
    {
        "taints": [
            {
                "code": "rs=stmt.executeQuery(\"select * from posts where postid=\"+postid);",
                "file": "skoussa2_JavaVulnerableLab9:src/main/webapp/vulnerability/forumposts.jsp"
            },
            {
                "code": "String postid=request.getParameter(\"postid\");",
                "file": "skoussa2_JavaVulnerableLab9:src/main/webapp/vulnerability/forumposts.jsp"
            }
        ],
        "id": "AXitV6LJyYTjqph7_CgM"
    },
    {
        "taints": [
            {
                "code": "stmt.executeUpdate(\"Update users set email='\"+email+\"' where id=\"+id);",
                "file": "skoussa2_JavaVulnerableLab9:src/main/webapp/vulnerability/idor/change-email.jsp"
            },
            {
                "code": "String email=request.getParameter(\"email\");",
                "file": "skoussa2_JavaVulnerableLab9:src/main/webapp/vulnerability/idor/change-email.jsp"
            }
        ],
        "id": "AXitV6KByYTjqph7_CgD"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "AzurePipeline:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionLesson6a.java"
            },
            {
                "code": "query = \"SELECT * FROM user_data WHERE last_name = '\" + accountName + \"'\";",
                "file": "AzurePipeline:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionLesson6a.java"
            },
            {
                "code": "public AttackResult injectableQuery(String accountName) {",
                "file": "AzurePipeline:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionLesson6a.java"
            },
            {
                "code": "return injectableQuery(userid_6a);",
                "file": "AzurePipeline:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionLesson6a.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String userid_6a) {",
                "file": "AzurePipeline:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionLesson6a.java"
            }
        ],
        "id": "AXK4FCEzBcMjRcj1_4pV"
    },
    {
        "taints": [
            {
                "code": "ResultSet rs = preparedStatement.executeQuery();",
                "file": "AzurePipeline:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            },
            {
                "code": "PreparedStatement preparedStatement = connection.prepareStatement(\"select id, hostname, ip, mac, status, description from servers  where status <> 'out of order' order by \" + column)) {",
                "file": "AzurePipeline:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            },
            {
                "code": "PreparedStatement preparedStatement = connection.prepareStatement(\"select id, hostname, ip, mac, status, description from servers  where status <> 'out of order' order by \" + column)) {",
                "file": "AzurePipeline:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            },
            {
                "code": "public List<Server> sort(@RequestParam String column) throws Exception {",
                "file": "AzurePipeline:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            }
        ],
        "id": "AXK4FCFeBcMjRcj1_4pg"
    },
    {
        "taints": [
            {
                "code": "statement.executeUpdate(query);",
                "file": "AzurePipeline:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "AzurePipeline:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "AzurePipeline:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String query) {",
                "file": "AzurePipeline:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            }
        ],
        "id": "AXK4FCDFBcMjRcj1_4oW"
    },
    {
        "taints": [
            {
                "code": "statement.executeUpdate(query);",
                "file": "AzurePipeline:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "AzurePipeline:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "AzurePipeline:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String query) {",
                "file": "AzurePipeline:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            }
        ],
        "id": "AXK4FCDtBcMjRcj1_4or"
    },
    {
        "taints": [
            {
                "code": "ResultSet resultSet = statement.executeQuery();",
                "file": "AzurePipeline:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            },
            {
                "code": "PreparedStatement statement = connection.prepareStatement(\"select password from challenge_users where userid = '\" + username_login + \"' and password = '\" + password_login + \"'\");",
                "file": "AzurePipeline:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            },
            {
                "code": "PreparedStatement statement = connection.prepareStatement(\"select password from challenge_users where userid = '\" + username_login + \"' and password = '\" + password_login + \"'\");",
                "file": "AzurePipeline:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            },
            {
                "code": "public AttackResult login(@RequestParam String username_login, @RequestParam String password_login) throws Exception {",
                "file": "AzurePipeline:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            }
        ],
        "id": "AXK4FCBgBcMjRcj1_4nj"
    },
    {
        "taints": [
            {
                "code": "ResultSet resultSet = statement.executeQuery(checkUserQuery);",
                "file": "AzurePipeline:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"
            },
            {
                "code": "String checkUserQuery = \"select userid from sql_challenge_users where userid = '\" + username_reg + \"'\";",
                "file": "AzurePipeline:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"
            },
            {
                "code": "public AttackResult registerNewUser(@RequestParam String username_reg, @RequestParam String email_reg, @RequestParam String password_reg) throws Exception {",
                "file": "AzurePipeline:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"
            }
        ],
        "id": "AXK4FCEVBcMjRcj1_4pF"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "AzurePipeline:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "AzurePipeline:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "AzurePipeline:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String query) {",
                "file": "AzurePipeline:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            }
        ],
        "id": "AXK4FCCFBcMjRcj1_4ns"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = query.executeQuery();",
                "file": "AzurePipeline:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "PreparedStatement query = connection.prepareStatement(queryString, ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);",
                "file": "AzurePipeline:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "String queryString = \"SELECT * From user_data WHERE Login_Count = ? and userid= \" + accountName;",
                "file": "AzurePipeline:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String login_count, String accountName) {",
                "file": "AzurePipeline:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "return injectableQuery(login_count, userid);",
                "file": "AzurePipeline:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String userid, @RequestParam String login_count, HttpServletRequest request) throws IOException {",
                "file": "AzurePipeline:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            }
        ],
        "id": "AXK4FCCTBcMjRcj1_4n6"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "AzurePipeline:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "String query = \"SELECT * FROM access_log WHERE action LIKE '%\" + action + \"%'\";",
                "file": "AzurePipeline:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "protected AttackResult injectableQueryAvailability(String action) {",
                "file": "AzurePipeline:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "return injectableQueryAvailability(action_string);",
                "file": "AzurePipeline:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String action_string) {",
                "file": "AzurePipeline:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            }
        ],
        "id": "AXK4FCCzBcMjRcj1_4oR"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "AzurePipeline:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "query = \"SELECT * FROM user_data WHERE first_name = 'John' and last_name = '\" + accountName + \"'\";",
                "file": "AzurePipeline:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String accountName) {",
                "file": "AzurePipeline:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "return injectableQuery(account + \" \" + operator + \" \" + injection);",
                "file": "AzurePipeline:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String account, @RequestParam String operator, @RequestParam String injection) {",
                "file": "AzurePipeline:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            }
        ],
        "id": "AXK4FCD6BcMjRcj1_4ow"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "AzurePipeline:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "String query = \"SELECT * FROM employees WHERE last_name = '\" + name + \"' AND auth_tan = '\" + auth_tan + \"'\";",
                "file": "AzurePipeline:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "protected AttackResult injectableQueryConfidentiality(String name, String auth_tan) {",
                "file": "AzurePipeline:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "return injectableQueryConfidentiality(name, auth_tan);",
                "file": "AzurePipeline:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String name, @RequestParam String auth_tan) {",
                "file": "AzurePipeline:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            }
        ],
        "id": "AXK4FCClBcMjRcj1_4oH"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "AzurePipeline:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "String query = \"SELECT * FROM employees WHERE last_name = '\" + name + \"' AND auth_tan = '\" + auth_tan + \"'\";",
                "file": "AzurePipeline:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "protected AttackResult injectableQueryIntegrity(String name, String auth_tan) {",
                "file": "AzurePipeline:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "return injectableQueryIntegrity(name, auth_tan);",
                "file": "AzurePipeline:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String name, @RequestParam String auth_tan) {",
                "file": "AzurePipeline:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            }
        ],
        "id": "AXK4FCDgBcMjRcj1_4on"
    },
    {
        "taints": [
            {
                "code": "ResultSet rs = ps.executeQuery()) {",
                "file": "damien-urruty-sonarsource_dmaap-datarouter:datarouter-prov/src/main/java/org/onap/dmaap/datarouter/provisioning/store/StatisticsStore.java"
            },
            {
                "code": "PreparedStatement ps = makePreparedStatement(feedids, conn);",
                "file": "damien-urruty-sonarsource_dmaap-datarouter:datarouter-prov/src/main/java/org/onap/dmaap/datarouter/provisioning/store/StatisticsStore.java"
            },
            {
                "code": "sql =  \"SELECT * FROM LOG_RECORDS WHERE id in(\" + feedids + \")\";",
                "file": "damien-urruty-sonarsource_dmaap-datarouter:datarouter-prov/src/main/java/org/onap/dmaap/datarouter/provisioning/store/StatisticsStore.java"
            },
            {
                "code": "public void getRecordsForSQL(String feedids, String outputType, ServletOutputStream out,",
                "file": "damien-urruty-sonarsource_dmaap-datarouter:datarouter-prov/src/main/java/org/onap/dmaap/datarouter/provisioning/store/StatisticsStore.java"
            },
            {
                "code": "public void handleRequest(HttpServletResponse resp, Map<String, String> map, String feedId, String groupId, String outputType, ServletOutputStream responseStream) {",
                "file": "damien-urruty-sonarsource_dmaap-datarouter:datarouter-prov/src/main/java/org/onap/dmaap/datarouter/provisioning/StatisticsRequestHandler.java"
            },
            {
                "code": "requestHandler.handleRequest(resp, map, feedId, groupId, outputType, responseStream);",
                "file": "damien-urruty-sonarsource_dmaap-datarouter:datarouter-prov/src/main/java/org/onap/dmaap/datarouter/provisioning/StatisticsServlet.java"
            },
            {
                "code": "String feedId = req.getParameter(FEEDID);",
                "file": "damien-urruty-sonarsource_dmaap-datarouter:datarouter-prov/src/main/java/org/onap/dmaap/datarouter/provisioning/StatisticsServlet.java"
            }
        ],
        "id": "AXin9x6HGsXm4rY5MYtl"
    },
    {
        "taints": [
            {
                "code": "",
                "file": "damien-urruty-sonarsource_dmaap-datarouter:datarouter-prov/src/main/java/org/onap/dmaap/datarouter/provisioning/StatisticsServlet.java"
            },
            {
                "code": "",
                "file": "damien-urruty-sonarsource_dmaap-datarouter:datarouter-prov/src/main/java/org/onap/dmaap/datarouter/provisioning/StatisticsServlet.java"
            },
            {
                "code": "",
                "file": "damien-urruty-sonarsource_dmaap-datarouter:datarouter-prov/src/main/java/org/onap/dmaap/datarouter/provisioning/StatisticsServlet.java"
            },
            {
                "code": "",
                "file": "damien-urruty-sonarsource_dmaap-datarouter:datarouter-prov/src/main/java/org/onap/dmaap/datarouter/provisioning/StatisticsServlet.java"
            },
            {
                "code": "",
                "file": "damien-urruty-sonarsource_dmaap-datarouter:datarouter-prov/src/main/java/org/onap/dmaap/datarouter/provisioning/StatisticsServlet.java"
            },
            {
                "code": "",
                "file": "damien-urruty-sonarsource_dmaap-datarouter:datarouter-prov/src/main/java/org/onap/dmaap/datarouter/provisioning/StatisticsServlet.java"
            },
            {
                "code": "public void doPut(HttpServletRequest req, HttpServletResponse resp) {",
                "file": "damien-urruty-sonarsource_dmaap-datarouter:datarouter-prov/src/main/java/org/onap/dmaap/datarouter/provisioning/StatisticsServlet.java"
            }
        ],
        "id": "AXhFuBc8aQoFvmAtN3t_"
    },
    {
        "taints": [
            {
                "code": "",
                "file": "damien-urruty-sonarsource_dmaap-datarouter:datarouter-prov/src/main/java/org/onap/dmaap/datarouter/provisioning/StatisticsServlet.java"
            },
            {
                "code": "",
                "file": "damien-urruty-sonarsource_dmaap-datarouter:datarouter-prov/src/main/java/org/onap/dmaap/datarouter/provisioning/StatisticsServlet.java"
            },
            {
                "code": "",
                "file": "damien-urruty-sonarsource_dmaap-datarouter:datarouter-prov/src/main/java/org/onap/dmaap/datarouter/provisioning/StatisticsServlet.java"
            },
            {
                "code": "",
                "file": "damien-urruty-sonarsource_dmaap-datarouter:datarouter-prov/src/main/java/org/onap/dmaap/datarouter/provisioning/StatisticsServlet.java"
            },
            {
                "code": "",
                "file": "damien-urruty-sonarsource_dmaap-datarouter:datarouter-prov/src/main/java/org/onap/dmaap/datarouter/provisioning/StatisticsServlet.java"
            },
            {
                "code": "",
                "file": "damien-urruty-sonarsource_dmaap-datarouter:datarouter-prov/src/main/java/org/onap/dmaap/datarouter/provisioning/StatisticsServlet.java"
            },
            {
                "code": "return map;",
                "file": "damien-urruty-sonarsource_dmaap-datarouter:datarouter-prov/src/main/java/org/onap/dmaap/datarouter/provisioning/StatisticsServlet.java"
            },
            {
                "code": "map.put(REASON_SQL, \"\");",
                "file": "damien-urruty-sonarsource_dmaap-datarouter:datarouter-prov/src/main/java/org/onap/dmaap/datarouter/provisioning/StatisticsServlet.java"
            }
        ],
        "id": "AXhESIK9LOTnPA1LHuyH"
    },
    {
        "taints": [
            {
                "code": "ResultSet resultSet = statement.executeQuery();",
                "file": "bilalk88_webgoat:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            },
            {
                "code": "PreparedStatement statement = connection.prepareStatement(\"select password from challenge_users where userid = '\" + username_login + \"' and password = '\" + password_login + \"'\");",
                "file": "bilalk88_webgoat:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            },
            {
                "code": "PreparedStatement statement = connection.prepareStatement(\"select password from challenge_users where userid = '\" + username_login + \"' and password = '\" + password_login + \"'\");",
                "file": "bilalk88_webgoat:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            },
            {
                "code": "public AttackResult login(@RequestParam String username_login, @RequestParam String password_login) throws Exception {",
                "file": "bilalk88_webgoat:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            }
        ],
        "id": "AXilp5L3-0-05NCJLWXr"
    },
    {
        "taints": [
            {
                "code": "ResultSet resultSet = statement.executeQuery(checkUserQuery);",
                "file": "bilalk88_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"
            },
            {
                "code": "String checkUserQuery = \"select userid from sql_challenge_users where userid = '\" + username_reg + \"'\";",
                "file": "bilalk88_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"
            },
            {
                "code": "public AttackResult registerNewUser(@RequestParam String username_reg, @RequestParam String email_reg, @RequestParam String password_reg) throws Exception {",
                "file": "bilalk88_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"
            }
        ],
        "id": "AXilp5Ns-0-05NCJLWY-"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "bilalk88_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "String query = \"SELECT * FROM access_log WHERE action LIKE '%\" + action + \"%'\";",
                "file": "bilalk88_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "protected AttackResult injectableQueryAvailability(String action) {",
                "file": "bilalk88_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "return injectableQueryAvailability(action_string);",
                "file": "bilalk88_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String action_string) {",
                "file": "bilalk88_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            }
        ],
        "id": "AXilp5Mt-0-05NCJLWYT"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "bilalk88_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "bilalk88_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "bilalk88_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String query) {",
                "file": "bilalk88_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            }
        ],
        "id": "AXilp5MS-0-05NCJLWXz"
    },
    {
        "taints": [
            {
                "code": "statement.executeUpdate(query);",
                "file": "bilalk88_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "bilalk88_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "bilalk88_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String query) {",
                "file": "bilalk88_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            }
        ],
        "id": "AXilp5M4-0-05NCJLWYX"
    },
    {
        "taints": [
            {
                "code": "statement.executeUpdate(query);",
                "file": "bilalk88_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "bilalk88_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "bilalk88_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String query) {",
                "file": "bilalk88_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            }
        ],
        "id": "AXilp5NS-0-05NCJLWYp"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "bilalk88_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "query = \"SELECT * FROM user_data WHERE first_name = 'John' and last_name = '\" + accountName + \"'\";",
                "file": "bilalk88_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String accountName) {",
                "file": "bilalk88_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "return injectableQuery(account + \" \" + operator + \" \" + injection);",
                "file": "bilalk88_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String account, @RequestParam String operator, @RequestParam String injection) {",
                "file": "bilalk88_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            }
        ],
        "id": "AXilp5Nb-0-05NCJLWYs"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = query.executeQuery();",
                "file": "bilalk88_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "PreparedStatement query = connection.prepareStatement(queryString, ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);",
                "file": "bilalk88_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "String queryString = \"SELECT * From user_data WHERE Login_Count = ? and userid= \" + accountName;",
                "file": "bilalk88_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String login_count, String accountName) {",
                "file": "bilalk88_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "return injectableQuery(login_count, userid);",
                "file": "bilalk88_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String userid, @RequestParam String login_count, HttpServletRequest request) throws IOException {",
                "file": "bilalk88_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            }
        ],
        "id": "AXilp5Mb-0-05NCJLWX_"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "bilalk88_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "String query = \"SELECT * FROM employees WHERE last_name = '\" + name + \"' AND auth_tan = '\" + auth_tan + \"'\";",
                "file": "bilalk88_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "protected AttackResult injectableQueryConfidentiality(String name, String auth_tan) {",
                "file": "bilalk88_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "return injectableQueryConfidentiality(name, auth_tan);",
                "file": "bilalk88_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String name, @RequestParam String auth_tan) {",
                "file": "bilalk88_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            }
        ],
        "id": "AXilp5Mk-0-05NCJLWYL"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "bilalk88_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "String query = \"SELECT * FROM employees WHERE last_name = '\" + name + \"' AND auth_tan = '\" + auth_tan + \"'\";",
                "file": "bilalk88_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "protected AttackResult injectableQueryIntegrity(String name, String auth_tan) {",
                "file": "bilalk88_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "return injectableQueryIntegrity(name, auth_tan);",
                "file": "bilalk88_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String name, @RequestParam String auth_tan) {",
                "file": "bilalk88_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            }
        ],
        "id": "AXilp5NK-0-05NCJLWYm"
    },
    {
        "taints": [
            {
                "code": "ResultSet rs = preparedStatement.executeQuery();",
                "file": "bilalk88_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            },
            {
                "code": "PreparedStatement preparedStatement = connection.prepareStatement(\"select id, hostname, ip, mac, status, description from servers  where status <> 'out of order' order by \" + column)) {",
                "file": "bilalk88_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            },
            {
                "code": "PreparedStatement preparedStatement = connection.prepareStatement(\"select id, hostname, ip, mac, status, description from servers  where status <> 'out of order' order by \" + column)) {",
                "file": "bilalk88_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            },
            {
                "code": "public List<Server> sort(@RequestParam String column) throws Exception {",
                "file": "bilalk88_webgoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            }
        ],
        "id": "AXilp5OY-0-05NCJLWZU"
    },
    {
        "taints": [
            {
                "code": "ResultSet resultSet =statement.executeQuery(\"SELECT COUNT(*)FROM PEOPLE WHERE USER_ID = '\"+ user +\"' AND PASSWORD='\" + password + \"'\"); /* BAD - user input should always be sanitized */",
                "file": "RadioactiveBurrito_AltoroJ:src/com/ibm/security/appscan/altoromutual/util/DBUtil.java"
            },
            {
                "code": "public static boolean isValidUser(String user, String password) throws SQLException{",
                "file": "RadioactiveBurrito_AltoroJ:src/com/ibm/security/appscan/altoromutual/util/DBUtil.java"
            },
            {
                "code": "if (!DBUtil.isValidUser(username, password)){",
                "file": "RadioactiveBurrito_AltoroJ:src/com/ibm/security/appscan/altoromutual/servlet/LoginServlet.java"
            },
            {
                "code": "username = request.getParameter(\"uid\");",
                "file": "RadioactiveBurrito_AltoroJ:src/com/ibm/security/appscan/altoromutual/servlet/LoginServlet.java"
            },
            {
                "code": "String password = request.getParameter(\"passw\");",
                "file": "RadioactiveBurrito_AltoroJ:src/com/ibm/security/appscan/altoromutual/servlet/LoginServlet.java"
            }
        ],
        "id": "AXijrSrVU5VZKz4svkV_"
    },
    {
        "taints": [
            {
                "code": "ResultSet resultSet =statement.executeQuery(\"SELECT FIRST_NAME,LAST_NAME,ROLE FROM PEOPLE WHERE USER_ID = '\"+ username +\"' \"); /* BAD - user input should always be sanitized */",
                "file": "RadioactiveBurrito_AltoroJ:src/com/ibm/security/appscan/altoromutual/util/DBUtil.java"
            },
            {
                "code": "public static User getUserInfo(String username) throws SQLException{",
                "file": "RadioactiveBurrito_AltoroJ:src/com/ibm/security/appscan/altoromutual/util/DBUtil.java"
            },
            {
                "code": "User user = DBUtil.getUserInfo(username);",
                "file": "RadioactiveBurrito_AltoroJ:src/com/ibm/security/appscan/altoromutual/util/ServletUtil.java"
            },
            {
                "code": "public static Cookie establishSession(String username, HttpSession session){",
                "file": "RadioactiveBurrito_AltoroJ:src/com/ibm/security/appscan/altoromutual/util/ServletUtil.java"
            },
            {
                "code": "Cookie accountCookie = ServletUtil.establishSession(username,session);",
                "file": "RadioactiveBurrito_AltoroJ:src/com/ibm/security/appscan/altoromutual/servlet/LoginServlet.java"
            },
            {
                "code": "username = request.getParameter(\"uid\");",
                "file": "RadioactiveBurrito_AltoroJ:src/com/ibm/security/appscan/altoromutual/servlet/LoginServlet.java"
            }
        ],
        "id": "AXijrSrVU5VZKz4svkV9"
    },
    {
        "taints": [
            {
                "code": "ResultSet resultSet =statement.executeQuery(\"SELECT ACCOUNT_ID, ACCOUNT_NAME, BALANCE FROM ACCOUNTS WHERE USERID = '\"+ username +\"' \"); /* BAD - user input should always be sanitized */",
                "file": "RadioactiveBurrito_AltoroJ:src/com/ibm/security/appscan/altoromutual/util/DBUtil.java"
            },
            {
                "code": "public static Account[] getAccounts(String username) throws SQLException{",
                "file": "RadioactiveBurrito_AltoroJ:src/com/ibm/security/appscan/altoromutual/util/DBUtil.java"
            },
            {
                "code": "return DBUtil.getAccounts(username);",
                "file": "RadioactiveBurrito_AltoroJ:src/com/ibm/security/appscan/altoromutual/model/User.java"
            },
            {
                "code": "public Account[] getAccounts(){",
                "file": "RadioactiveBurrito_AltoroJ:src/com/ibm/security/appscan/altoromutual/model/User.java"
            },
            {
                "code": "Account[] accounts = user.getAccounts();",
                "file": "RadioactiveBurrito_AltoroJ:src/com/ibm/security/appscan/altoromutual/util/ServletUtil.java"
            },
            {
                "code": "public static Cookie establishSession(String username, HttpSession session){",
                "file": "RadioactiveBurrito_AltoroJ:src/com/ibm/security/appscan/altoromutual/util/ServletUtil.java"
            },
            {
                "code": "Cookie accountCookie = ServletUtil.establishSession(username,session);",
                "file": "RadioactiveBurrito_AltoroJ:src/com/ibm/security/appscan/altoromutual/servlet/LoginServlet.java"
            },
            {
                "code": "this.username = username;",
                "file": "RadioactiveBurrito_AltoroJ:src/com/ibm/security/appscan/altoromutual/model/User.java"
            },
            {
                "code": "username = request.getParameter(\"uid\");",
                "file": "RadioactiveBurrito_AltoroJ:src/com/ibm/security/appscan/altoromutual/servlet/LoginServlet.java"
            }
        ],
        "id": "AXijrSrVU5VZKz4svkWB"
    },
    {
        "taints": [
            {
                "code": "statement.execute(\"INSERT INTO ACCOUNTS (USERID,ACCOUNT_NAME,BALANCE) VALUES ('\"+username+\"','\"+acctType+\"', 0)\");",
                "file": "RadioactiveBurrito_AltoroJ:src/com/ibm/security/appscan/altoromutual/util/DBUtil.java"
            },
            {
                "code": "public static String addAccount(String username, String acctType) {",
                "file": "RadioactiveBurrito_AltoroJ:src/com/ibm/security/appscan/altoromutual/util/DBUtil.java"
            },
            {
                "code": "String error = DBUtil.addAccount(username, acctType);",
                "file": "RadioactiveBurrito_AltoroJ:src/com/ibm/security/appscan/altoromutual/servlet/AdminServlet.java"
            },
            {
                "code": "String username = request.getParameter(\"username\");",
                "file": "RadioactiveBurrito_AltoroJ:src/com/ibm/security/appscan/altoromutual/servlet/AdminServlet.java"
            }
        ],
        "id": "AXijrSrVU5VZKz4svkWD"
    },
    {
        "taints": [
            {
                "code": "statement.execute(\"INSERT INTO PEOPLE (USER_ID,PASSWORD,FIRST_NAME,LAST_NAME,ROLE) VALUES ('\"+username+\"','\"+password+\"', '\"+firstname+\"', '\"+lastname+\"','user')\");",
                "file": "RadioactiveBurrito_AltoroJ:src/com/ibm/security/appscan/altoromutual/util/DBUtil.java"
            },
            {
                "code": "public static String addUser(String username, String password, String firstname, String lastname) {",
                "file": "RadioactiveBurrito_AltoroJ:src/com/ibm/security/appscan/altoromutual/util/DBUtil.java"
            },
            {
                "code": "String error = DBUtil.addUser(username, password1, firstname, lastname);",
                "file": "RadioactiveBurrito_AltoroJ:src/com/ibm/security/appscan/altoromutual/servlet/AdminServlet.java"
            },
            {
                "code": "String firstname = request.getParameter(\"firstname\");",
                "file": "RadioactiveBurrito_AltoroJ:src/com/ibm/security/appscan/altoromutual/servlet/AdminServlet.java"
            },
            {
                "code": "String password1 = request.getParameter(\"password1\");",
                "file": "RadioactiveBurrito_AltoroJ:src/com/ibm/security/appscan/altoromutual/servlet/AdminServlet.java"
            },
            {
                "code": "String username = request.getParameter(\"username\");",
                "file": "RadioactiveBurrito_AltoroJ:src/com/ibm/security/appscan/altoromutual/servlet/AdminServlet.java"
            }
        ],
        "id": "AXijrSrVU5VZKz4svkV-"
    },
    {
        "taints": [
            {
                "code": "statement.execute(\"UPDATE PEOPLE SET PASSWORD = '\"+ password +\"' WHERE USER_ID = '\"+username+\"'\");",
                "file": "RadioactiveBurrito_AltoroJ:src/com/ibm/security/appscan/altoromutual/util/DBUtil.java"
            },
            {
                "code": "public static String changePassword(String username, String password) {",
                "file": "RadioactiveBurrito_AltoroJ:src/com/ibm/security/appscan/altoromutual/util/DBUtil.java"
            },
            {
                "code": "String error = DBUtil.changePassword(username, password1);",
                "file": "RadioactiveBurrito_AltoroJ:src/com/ibm/security/appscan/altoromutual/servlet/AdminServlet.java"
            },
            {
                "code": "String username = request.getParameter(\"username\");",
                "file": "RadioactiveBurrito_AltoroJ:src/com/ibm/security/appscan/altoromutual/servlet/AdminServlet.java"
            },
            {
                "code": "String password1 = request.getParameter(\"password1\");",
                "file": "RadioactiveBurrito_AltoroJ:src/com/ibm/security/appscan/altoromutual/servlet/AdminServlet.java"
            }
        ],
        "id": "AXijrSrVU5VZKz4svkWA"
    },
    {
        "taints": [
            {
                "code": "statement.execute(\"INSERT INTO FEEDBACK (NAME,EMAIL,SUBJECT,COMMENTS) VALUES ('\"+name+\"', '\"+email+\"', '\"+subject+\"', '\"+comments+\"')\", Statement.RETURN_GENERATED_KEYS);",
                "file": "RadioactiveBurrito_AltoroJ:src/com/ibm/security/appscan/altoromutual/util/DBUtil.java"
            },
            {
                "code": "public static long storeFeedback(String name, String email, String subject, String comments) {",
                "file": "RadioactiveBurrito_AltoroJ:src/com/ibm/security/appscan/altoromutual/util/DBUtil.java"
            },
            {
                "code": "long id = DBUtil.storeFeedback(name, email, subject, comments);",
                "file": "RadioactiveBurrito_AltoroJ:src/com/ibm/security/appscan/altoromutual/util/OperationsUtil.java"
            },
            {
                "code": "public static String sendFeedback(String name, String email,",
                "file": "RadioactiveBurrito_AltoroJ:src/com/ibm/security/appscan/altoromutual/util/OperationsUtil.java"
            },
            {
                "code": "String feedbackId = OperationsUtil.sendFeedback(name, email, subject, comments);",
                "file": "RadioactiveBurrito_AltoroJ:src/com/ibm/security/appscan/altoromutual/servlet/FeedbackServlet.java"
            },
            {
                "code": "String name = request.getParameter(\"name\");",
                "file": "RadioactiveBurrito_AltoroJ:src/com/ibm/security/appscan/altoromutual/servlet/FeedbackServlet.java"
            }
        ],
        "id": "AXijrSrVU5VZKz4svkWC"
    },
    {
        "taints": [
            {
                "code": "stmt.executeUpdate(sql);",
                "file": "WinkPascal_Lingo-Trainer-API:src/main/java/nl/hu/lingo/Game/Persistence/TryPostgressDao.java"
            },
            {
                "code": "String sql = \"INSERT INTO try(word, roundid, datetime) VALUES ('\"+word+\"', \"+roundId+\", current_timestamp)\";",
                "file": "WinkPascal_Lingo-Trainer-API:src/main/java/nl/hu/lingo/Game/Persistence/TryPostgressDao.java"
            },
            {
                "code": "public void save(int roundId, String word){",
                "file": "WinkPascal_Lingo-Trainer-API:src/main/java/nl/hu/lingo/Game/Persistence/TryPostgressDao.java"
            },
            {
                "code": "tryDao.save(RoundId, word);",
                "file": "WinkPascal_Lingo-Trainer-API:src/main/java/nl/hu/lingo/Game/Domain/TryLingo.java"
            },
            {
                "code": "public void save(int RoundId){",
                "file": "WinkPascal_Lingo-Trainer-API:src/main/java/nl/hu/lingo/Game/Domain/TryLingo.java"
            },
            {
                "code": "currentTry.save(this.id);",
                "file": "WinkPascal_Lingo-Trainer-API:src/main/java/nl/hu/lingo/Game/Domain/RoundLingo.java"
            },
            {
                "code": "public Map<String, String> IsCorrect(Try currentTry) {",
                "file": "WinkPascal_Lingo-Trainer-API:src/main/java/nl/hu/lingo/Game/Domain/RoundLingo.java"
            },
            {
                "code": "feedback = currentRound.IsCorrect(currentTry);",
                "file": "WinkPascal_Lingo-Trainer-API:src/main/java/nl/hu/lingo/Game/Domain/GameLingo.java"
            },
            {
                "code": "return game.nextMove(currentTry);",
                "file": "WinkPascal_Lingo-Trainer-API:src/main/java/nl/hu/lingo/Game/Domain/GameFacadeLingo.java"
            },
            {
                "code": "return (new GameService(gameFacade)).nextMove(Integer.parseInt(gameId), word);",
                "file": "WinkPascal_Lingo-Trainer-API:src/main/java/nl/hu/lingo/Game/Controller/GameController.java"
            }
        ],
        "id": "AXhcFNE6aAnXFglb3e4u"
    },
    {
        "taints": [
            {
                "code": "ResultSet rs = stmt.executeQuery(query);",
                "file": "WinkPascal_Lingo-Trainer-API:src/main/java/nl/hu/lingo/Game/Persistence/GamePostgressDaoImpl.java"
            },
            {
                "code": "String query = \"select count(r.id) as score from game g join round r on g.id = r.gameid \" +\n\"where g.username = '\"+username+\"'  \" +\n\"GROUP BY g.Id \" +\n\"ORDER BY count(r.id) DESC \" +\n\"LIMIT 1\";",
                "file": "WinkPascal_Lingo-Trainer-API:src/main/java/nl/hu/lingo/Game/Persistence/GamePostgressDaoImpl.java"
            },
            {
                "code": "public int getHighscore(String username) {",
                "file": "WinkPascal_Lingo-Trainer-API:src/main/java/nl/hu/lingo/Game/Persistence/GamePostgressDaoImpl.java"
            },
            {
                "code": "return gameDao.getHighscore(username);",
                "file": "WinkPascal_Lingo-Trainer-API:src/main/java/nl/hu/lingo/Game/Domain/Game.java"
            },
            {
                "code": "static int getHighscore(String username, GameDao gameDao) {",
                "file": "WinkPascal_Lingo-Trainer-API:src/main/java/nl/hu/lingo/Game/Domain/Game.java"
            },
            {
                "code": "return Game.getHighscore(username, gameDao);",
                "file": "WinkPascal_Lingo-Trainer-API:src/main/java/nl/hu/lingo/Game/Domain/GameFacadeLingo.java"
            },
            {
                "code": "public int getHighscore(String username){",
                "file": "WinkPascal_Lingo-Trainer-API:src/main/java/nl/hu/lingo/Game/Domain/GameFacadeLingo.java"
            },
            {
                "code": "return gameFacade.getHighscore(username);",
                "file": "WinkPascal_Lingo-Trainer-API:src/main/java/nl/hu/lingo/Game/Service/GameService.java"
            },
            {
                "code": "return (new GameService(gameFacade)).getHighscore(username);",
                "file": "WinkPascal_Lingo-Trainer-API:src/main/java/nl/hu/lingo/Game/Controller/GameController.java"
            },
            {
                "code": "public int getHighscore(@PathVariable(\"username\") String username) {",
                "file": "WinkPascal_Lingo-Trainer-API:src/main/java/nl/hu/lingo/Game/Controller/GameController.java"
            }
        ],
        "id": "AXhcFNFUaAnXFglb3e5C"
    },
    {
        "taints": [
            {
                "code": "statement.executeQuery(query);",
                "file": "quinza1996_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "quinza1996_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "quinza1996_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5.java"
            },
            {
                "code": "public AttackResult completed(String query) {",
                "file": "quinza1996_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5.java"
            },
            {
                "code": "@PostMapping(\"/SqlInjection/attack5\")",
                "file": "quinza1996_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5.java"
            }
        ],
        "id": "AXh6Kqfie0tA8FeSGf2g"
    },
    {
        "taints": [
            {
                "code": "ResultSet rs = preparedStatement.executeQuery();",
                "file": "quinza1996_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            },
            {
                "code": "PreparedStatement preparedStatement = connection.prepareStatement(\"select id, hostname, ip, mac, status, description from servers  where status <> 'out of order' order by \" + column)) {",
                "file": "quinza1996_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            },
            {
                "code": "PreparedStatement preparedStatement = connection.prepareStatement(\"select id, hostname, ip, mac, status, description from servers  where status <> 'out of order' order by \" + column)) {",
                "file": "quinza1996_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            },
            {
                "code": "public List<Server> sort(@RequestParam String column) throws Exception {",
                "file": "quinza1996_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            }
        ],
        "id": "AXh6Kqf_e0tA8FeSGf3f"
    },
    {
        "taints": [
            {
                "code": "statement.executeUpdate(query);",
                "file": "quinza1996_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "quinza1996_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "quinza1996_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String query) {",
                "file": "quinza1996_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            }
        ],
        "id": "AXh6Kqfge0tA8FeSGf2e"
    },
    {
        "taints": [
            {
                "code": "statement.executeUpdate(query);",
                "file": "quinza1996_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "quinza1996_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "quinza1996_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String query) {",
                "file": "quinza1996_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            }
        ],
        "id": "AXh6Kqfne0tA8FeSGf2x"
    },
    {
        "taints": [
            {
                "code": "ResultSet resultSet = statement.executeQuery();",
                "file": "quinza1996_WebGoat:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            },
            {
                "code": "PreparedStatement statement = connection.prepareStatement(\"select password from challenge_users where userid = '\" + username_login + \"' and password = '\" + password_login + \"'\");",
                "file": "quinza1996_WebGoat:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            },
            {
                "code": "PreparedStatement statement = connection.prepareStatement(\"select password from challenge_users where userid = '\" + username_login + \"' and password = '\" + password_login + \"'\");",
                "file": "quinza1996_WebGoat:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            },
            {
                "code": "public AttackResult login(@RequestParam String username_login, @RequestParam String password_login) throws Exception {",
                "file": "quinza1996_WebGoat:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            }
        ],
        "id": "AXh6KqfJe0tA8FeSGf1y"
    },
    {
        "taints": [
            {
                "code": "ResultSet resultSet = statement.executeQuery(checkUserQuery);",
                "file": "quinza1996_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"
            },
            {
                "code": "String checkUserQuery = \"select userid from sql_challenge_users where userid = '\" + username_reg + \"'\";",
                "file": "quinza1996_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"
            },
            {
                "code": "public AttackResult registerNewUser(@RequestParam String username_reg, @RequestParam String email_reg, @RequestParam String password_reg) throws Exception {",
                "file": "quinza1996_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"
            }
        ],
        "id": "AXh6Kqfxe0tA8FeSGf3J"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "quinza1996_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "quinza1996_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "quinza1996_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String query) {",
                "file": "quinza1996_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            }
        ],
        "id": "AXh6KqfQe0tA8FeSGf16"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = query.executeQuery();",
                "file": "quinza1996_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "PreparedStatement query = connection.prepareStatement(queryString, ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);",
                "file": "quinza1996_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "String queryString = \"SELECT * From user_data WHERE Login_Count = ? and userid= \" + accountName;",
                "file": "quinza1996_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String login_count, String accountName) {",
                "file": "quinza1996_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "return injectableQuery(login_count, userid);",
                "file": "quinza1996_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String userid, @RequestParam String login_count, HttpServletRequest request) throws IOException {",
                "file": "quinza1996_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            }
        ],
        "id": "AXh6KqfVe0tA8FeSGf2G"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "quinza1996_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "String query = \"SELECT * FROM access_log WHERE action LIKE '%\" + action + \"%'\";",
                "file": "quinza1996_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "protected AttackResult injectableQueryAvailability(String action) {",
                "file": "quinza1996_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "return injectableQueryAvailability(action_string);",
                "file": "quinza1996_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String action_string) {",
                "file": "quinza1996_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            }
        ],
        "id": "AXh6Kqfce0tA8FeSGf2a"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "quinza1996_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "query = \"SELECT * FROM user_data WHERE first_name = 'John' and last_name = '\" + accountName + \"'\";",
                "file": "quinza1996_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String accountName) {",
                "file": "quinza1996_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "return injectableQuery(account + \" \" + operator + \" \" + injection);",
                "file": "quinza1996_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String account, @RequestParam String operator, @RequestParam String injection) {",
                "file": "quinza1996_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            }
        ],
        "id": "AXh6Kqfqe0tA8FeSGf20"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "quinza1996_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "String query = \"SELECT * FROM employees WHERE last_name = '\" + name + \"' AND auth_tan = '\" + auth_tan + \"'\";",
                "file": "quinza1996_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "protected AttackResult injectableQueryConfidentiality(String name, String auth_tan) {",
                "file": "quinza1996_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "return injectableQueryConfidentiality(name, auth_tan);",
                "file": "quinza1996_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String name, @RequestParam String auth_tan) {",
                "file": "quinza1996_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            }
        ],
        "id": "AXh6KqfYe0tA8FeSGf2S"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "quinza1996_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "String query = \"SELECT * FROM employees WHERE last_name = '\" + name + \"' AND auth_tan = '\" + auth_tan + \"'\";",
                "file": "quinza1996_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "protected AttackResult injectableQueryIntegrity(String name, String auth_tan) {",
                "file": "quinza1996_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "return injectableQueryIntegrity(name, auth_tan);",
                "file": "quinza1996_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String name, @RequestParam String auth_tan) {",
                "file": "quinza1996_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            }
        ],
        "id": "AXh6Kqfle0tA8FeSGf2u"
    },
    {
        "taints": [
            {
                "code": "ResultSet resultSet = statement.executeQuery();",
                "file": "RobertoDehesa_WebGoat:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            },
            {
                "code": "PreparedStatement statement = connection.prepareStatement(\"select password from challenge_users where userid = '\" + username_login + \"' and password = '\" + password_login + \"'\");",
                "file": "RobertoDehesa_WebGoat:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            },
            {
                "code": "PreparedStatement statement = connection.prepareStatement(\"select password from challenge_users where userid = '\" + username_login + \"' and password = '\" + password_login + \"'\");",
                "file": "RobertoDehesa_WebGoat:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            },
            {
                "code": "public AttackResult login(@RequestParam String username_login, @RequestParam String password_login) throws Exception {",
                "file": "RobertoDehesa_WebGoat:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            }
        ],
        "id": "AXh4VNSUqvkleYUVrIvK"
    },
    {
        "taints": [
            {
                "code": "ResultSet resultSet = statement.executeQuery(checkUserQuery);",
                "file": "RobertoDehesa_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"
            },
            {
                "code": "String checkUserQuery = \"select userid from sql_challenge_users where userid = '\" + username_reg + \"'\";",
                "file": "RobertoDehesa_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"
            },
            {
                "code": "public AttackResult registerNewUser(@RequestParam String username_reg, @RequestParam String email_reg, @RequestParam String password_reg) throws Exception {",
                "file": "RobertoDehesa_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"
            }
        ],
        "id": "AXh4VNS7qvkleYUVrIwh"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "RobertoDehesa_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "String query = \"SELECT * FROM access_log WHERE action LIKE '%\" + action + \"%'\";",
                "file": "RobertoDehesa_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "protected AttackResult injectableQueryAvailability(String action) {",
                "file": "RobertoDehesa_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "return injectableQueryAvailability(action_string);",
                "file": "RobertoDehesa_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String action_string) {",
                "file": "RobertoDehesa_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            }
        ],
        "id": "AXh4VNSlqvkleYUVrIvy"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "RobertoDehesa_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "RobertoDehesa_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "RobertoDehesa_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String query) {",
                "file": "RobertoDehesa_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            }
        ],
        "id": "AXh4VNScqvkleYUVrIvS"
    },
    {
        "taints": [
            {
                "code": "statement.executeUpdate(query);",
                "file": "RobertoDehesa_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "RobertoDehesa_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "RobertoDehesa_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String query) {",
                "file": "RobertoDehesa_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            }
        ],
        "id": "AXh4VNSpqvkleYUVrIv2"
    },
    {
        "taints": [
            {
                "code": "statement.executeUpdate(query);",
                "file": "RobertoDehesa_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "RobertoDehesa_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "RobertoDehesa_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String query) {",
                "file": "RobertoDehesa_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            }
        ],
        "id": "AXh4VNSyqvkleYUVrIwJ"
    },
    {
        "taints": [
            {
                "code": "statement.executeQuery(query);",
                "file": "RobertoDehesa_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "RobertoDehesa_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "RobertoDehesa_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5.java"
            },
            {
                "code": "public AttackResult completed(String query) {",
                "file": "RobertoDehesa_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5.java"
            },
            {
                "code": "@PostMapping(\"/SqlInjection/attack5\")",
                "file": "RobertoDehesa_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5.java"
            }
        ],
        "id": "AXh4VNSsqvkleYUVrIv4"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "RobertoDehesa_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "query = \"SELECT * FROM user_data WHERE first_name = 'John' and last_name = '\" + accountName + \"'\";",
                "file": "RobertoDehesa_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String accountName) {",
                "file": "RobertoDehesa_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "return injectableQuery(account + \" \" + operator + \" \" + injection);",
                "file": "RobertoDehesa_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String account, @RequestParam String operator, @RequestParam String injection) {",
                "file": "RobertoDehesa_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            }
        ],
        "id": "AXh4VNS1qvkleYUVrIwM"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = query.executeQuery();",
                "file": "RobertoDehesa_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "PreparedStatement query = connection.prepareStatement(queryString, ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);",
                "file": "RobertoDehesa_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "String queryString = \"SELECT * From user_data WHERE Login_Count = ? and userid= \" + accountName;",
                "file": "RobertoDehesa_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String login_count, String accountName) {",
                "file": "RobertoDehesa_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "return injectableQuery(login_count, userid);",
                "file": "RobertoDehesa_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String userid, @RequestParam String login_count, HttpServletRequest request) throws IOException {",
                "file": "RobertoDehesa_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            }
        ],
        "id": "AXh4VNSeqvkleYUVrIve"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "RobertoDehesa_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "String query = \"SELECT * FROM employees WHERE last_name = '\" + name + \"' AND auth_tan = '\" + auth_tan + \"'\";",
                "file": "RobertoDehesa_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "protected AttackResult injectableQueryConfidentiality(String name, String auth_tan) {",
                "file": "RobertoDehesa_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "return injectableQueryConfidentiality(name, auth_tan);",
                "file": "RobertoDehesa_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String name, @RequestParam String auth_tan) {",
                "file": "RobertoDehesa_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            }
        ],
        "id": "AXh4VNShqvkleYUVrIvq"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "RobertoDehesa_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "String query = \"SELECT * FROM employees WHERE last_name = '\" + name + \"' AND auth_tan = '\" + auth_tan + \"'\";",
                "file": "RobertoDehesa_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "protected AttackResult injectableQueryIntegrity(String name, String auth_tan) {",
                "file": "RobertoDehesa_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "return injectableQueryIntegrity(name, auth_tan);",
                "file": "RobertoDehesa_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String name, @RequestParam String auth_tan) {",
                "file": "RobertoDehesa_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            }
        ],
        "id": "AXh4VNSvqvkleYUVrIwG"
    },
    {
        "taints": [
            {
                "code": "ResultSet rs = preparedStatement.executeQuery();",
                "file": "RobertoDehesa_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            },
            {
                "code": "PreparedStatement preparedStatement = connection.prepareStatement(\"select id, hostname, ip, mac, status, description from servers  where status <> 'out of order' order by \" + column)) {",
                "file": "RobertoDehesa_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            },
            {
                "code": "PreparedStatement preparedStatement = connection.prepareStatement(\"select id, hostname, ip, mac, status, description from servers  where status <> 'out of order' order by \" + column)) {",
                "file": "RobertoDehesa_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            },
            {
                "code": "public List<Server> sort(@RequestParam String column) throws Exception {",
                "file": "RobertoDehesa_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            }
        ],
        "id": "AXh4VNTIqvkleYUVrIw3"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery();",
                "file": "rmartinsanta_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "try (Connection connection = dataSource.getConnection(); PreparedStatement statement = connection.prepareStatement(query)) {",
                "file": "rmartinsanta_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "String query = \"SELECT * FROM employees WHERE last_name = '\" + name + \"' AND auth_tan = '\" + authTan + \"'\";",
                "file": "rmartinsanta_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "protected AttackResult injectableQueryIntegrity(String name, String authTan) {",
                "file": "rmartinsanta_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "return injectableQueryIntegrity(name, auth_tan);",
                "file": "rmartinsanta_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String name, @RequestParam String auth_tan) {",
                "file": "rmartinsanta_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            }
        ],
        "id": "AXiAodcoghu_tM7IDdnW"
    },
    {
        "taints": [
            {
                "code": "ResultSet rs = preparedStatement.executeQuery();",
                "file": "rmartinsanta_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            },
            {
                "code": "PreparedStatement preparedStatement = connection.prepareStatement(\"select id, hostname, ip, mac, status, description from servers  where status <> 'out of order' order by \" + column)) {",
                "file": "rmartinsanta_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            },
            {
                "code": "PreparedStatement preparedStatement = connection.prepareStatement(\"select id, hostname, ip, mac, status, description from servers  where status <> 'out of order' order by \" + column)) {",
                "file": "rmartinsanta_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            },
            {
                "code": "public List<Server> sort(@RequestParam String column) throws Exception {",
                "file": "rmartinsanta_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            }
        ],
        "id": "AXiAnsT941hJ2HBRVBZA"
    },
    {
        "taints": [
            {
                "code": "statement.executeUpdate(query);",
                "file": "rmartinsanta_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "rmartinsanta_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "rmartinsanta_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String query) {",
                "file": "rmartinsanta_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            }
        ],
        "id": "AXiAnsTc41hJ2HBRVBYK"
    },
    {
        "taints": [
            {
                "code": "statement.executeUpdate(query);",
                "file": "rmartinsanta_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "rmartinsanta_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "rmartinsanta_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String query) {",
                "file": "rmartinsanta_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            }
        ],
        "id": "AXiAnsTk41hJ2HBRVBYS"
    },
    {
        "taints": [
            {
                "code": "ResultSet resultSet = statement.executeQuery();",
                "file": "rmartinsanta_WebGoat:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            },
            {
                "code": "PreparedStatement statement = connection.prepareStatement(\"select password from challenge_users where userid = '\" + username_login + \"' and password = '\" + password_login + \"'\");",
                "file": "rmartinsanta_WebGoat:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            },
            {
                "code": "PreparedStatement statement = connection.prepareStatement(\"select password from challenge_users where userid = '\" + username_login + \"' and password = '\" + password_login + \"'\");",
                "file": "rmartinsanta_WebGoat:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            },
            {
                "code": "public AttackResult login(@RequestParam String username_login, @RequestParam String password_login) throws Exception {",
                "file": "rmartinsanta_WebGoat:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            }
        ],
        "id": "AXiAnsTE41hJ2HBRVBXe"
    },
    {
        "taints": [
            {
                "code": "ResultSet resultSet = statement.executeQuery(checkUserQuery);",
                "file": "rmartinsanta_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"
            },
            {
                "code": "String checkUserQuery = \"select userid from sql_challenge_users where userid = '\" + username_reg + \"'\";",
                "file": "rmartinsanta_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"
            },
            {
                "code": "public AttackResult registerNewUser(@RequestParam String username_reg, @RequestParam String email_reg, @RequestParam String password_reg) throws Exception {",
                "file": "rmartinsanta_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"
            }
        ],
        "id": "AXiAnsTt41hJ2HBRVBYq"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "rmartinsanta_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "rmartinsanta_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "rmartinsanta_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String query) {",
                "file": "rmartinsanta_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            }
        ],
        "id": "AXiAnsTL41hJ2HBRVBXm"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = query.executeQuery();",
                "file": "rmartinsanta_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "PreparedStatement query = connection.prepareStatement(queryString, ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);",
                "file": "rmartinsanta_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "String queryString = \"SELECT * From user_data WHERE Login_Count = ? and userid= \" + accountName;",
                "file": "rmartinsanta_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String login_count, String accountName) {",
                "file": "rmartinsanta_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "return injectableQuery(login_count, userid);",
                "file": "rmartinsanta_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String userid, @RequestParam String login_count, HttpServletRequest request) throws IOException {",
                "file": "rmartinsanta_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            }
        ],
        "id": "AXiAnsTP41hJ2HBRVBXy"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "rmartinsanta_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "String query = \"SELECT * FROM access_log WHERE action LIKE '%\" + action + \"%'\";",
                "file": "rmartinsanta_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "protected AttackResult injectableQueryAvailability(String action) {",
                "file": "rmartinsanta_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "return injectableQueryAvailability(action_string);",
                "file": "rmartinsanta_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String action_string) {",
                "file": "rmartinsanta_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            }
        ],
        "id": "AXiAnsTY41hJ2HBRVBYG"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "rmartinsanta_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "query = \"SELECT * FROM user_data WHERE first_name = 'John' and last_name = '\" + accountName + \"'\";",
                "file": "rmartinsanta_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String accountName) {",
                "file": "rmartinsanta_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "return injectableQuery(account + \" \" + operator + \" \" + injection);",
                "file": "rmartinsanta_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String account, @RequestParam String operator, @RequestParam String injection) {",
                "file": "rmartinsanta_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            }
        ],
        "id": "AXiAnsTn41hJ2HBRVBYV"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "rmartinsanta_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "String query = \"SELECT * FROM employees WHERE last_name = '\" + name + \"' AND auth_tan = '\" + auth_tan + \"'\";",
                "file": "rmartinsanta_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "protected AttackResult injectableQueryConfidentiality(String name, String auth_tan) {",
                "file": "rmartinsanta_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "return injectableQueryConfidentiality(name, auth_tan);",
                "file": "rmartinsanta_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String name, @RequestParam String auth_tan) {",
                "file": "rmartinsanta_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            }
        ],
        "id": "AXiAnsTT41hJ2HBRVBX-"
    },
    {
        "taints": [
            {
                "code": "rs=stmt.executeQuery(\"select * from users where email='\"+email+\"'\");",
                "file": "44-JavaVulnerableLab-master-with-cache-and-all-preparser-libs:src/main/java/org/cysecurity/cspf/jvl/controller/EmailCheck.java"
            },
            {
                "code": "String email=request.getParameter(\"email\").trim();",
                "file": "44-JavaVulnerableLab-master-with-cache-and-all-preparser-libs:src/main/java/org/cysecurity/cspf/jvl/controller/EmailCheck.java"
            },
            {
                "code": "String email=request.getParameter(\"email\").trim();",
                "file": "44-JavaVulnerableLab-master-with-cache-and-all-preparser-libs:src/main/java/org/cysecurity/cspf/jvl/controller/EmailCheck.java"
            }
        ],
        "id": "AXiEVo6kuqae-LhUXpkU"
    },
    {
        "taints": [
            {
                "code": "rs=stmt.executeQuery(\"select * from users where username='\"+user+\"' and password='\"+pass+\"'\");",
                "file": "44-JavaVulnerableLab-master-with-cache-and-all-preparser-libs:src/main/java/org/cysecurity/cspf/jvl/controller/LoginValidator.java"
            },
            {
                "code": "String pass=request.getParameter(\"password\").trim();",
                "file": "44-JavaVulnerableLab-master-with-cache-and-all-preparser-libs:src/main/java/org/cysecurity/cspf/jvl/controller/LoginValidator.java"
            },
            {
                "code": "String user=request.getParameter(\"username\").trim();",
                "file": "44-JavaVulnerableLab-master-with-cache-and-all-preparser-libs:src/main/java/org/cysecurity/cspf/jvl/controller/LoginValidator.java"
            },
            {
                "code": "String user=request.getParameter(\"username\").trim();",
                "file": "44-JavaVulnerableLab-master-with-cache-and-all-preparser-libs:src/main/java/org/cysecurity/cspf/jvl/controller/LoginValidator.java"
            }
        ],
        "id": "AXiEVo6suqae-LhUXpkh"
    },
    {
        "taints": [
            {
                "code": "stmt.executeUpdate(\"INSERT into users(username, password, email, About,avatar,privilege,secretquestion,secret) values ('\"+user+\"','\"+pass+\"','\"+email+\"','\"+about+\"','default.jpg','user',1,'\"+secret+\"')\");",
                "file": "44-JavaVulnerableLab-master-with-cache-and-all-preparser-libs:src/main/java/org/cysecurity/cspf/jvl/controller/Register.java"
            },
            {
                "code": "String about=request.getParameter(\"About\");",
                "file": "44-JavaVulnerableLab-master-with-cache-and-all-preparser-libs:src/main/java/org/cysecurity/cspf/jvl/controller/Register.java"
            },
            {
                "code": "String email=request.getParameter(\"email\");",
                "file": "44-JavaVulnerableLab-master-with-cache-and-all-preparser-libs:src/main/java/org/cysecurity/cspf/jvl/controller/Register.java"
            },
            {
                "code": "String pass=request.getParameter(\"password\");",
                "file": "44-JavaVulnerableLab-master-with-cache-and-all-preparser-libs:src/main/java/org/cysecurity/cspf/jvl/controller/Register.java"
            },
            {
                "code": "String user=request.getParameter(\"username\");",
                "file": "44-JavaVulnerableLab-master-with-cache-and-all-preparser-libs:src/main/java/org/cysecurity/cspf/jvl/controller/Register.java"
            }
        ],
        "id": "AXiEVo7Ouqae-LhUXplE"
    },
    {
        "taints": [
            {
                "code": "stmt.executeUpdate(\"INSERT into UserMessages(recipient, sender, subject, msg) values ('\"+user+\"','admin','Hi','Hi<br/> This is admin of this page. <br/> Welcome to Our Forum')\");",
                "file": "44-JavaVulnerableLab-master-with-cache-and-all-preparser-libs:src/main/java/org/cysecurity/cspf/jvl/controller/Register.java"
            },
            {
                "code": "String user=request.getParameter(\"username\");",
                "file": "44-JavaVulnerableLab-master-with-cache-and-all-preparser-libs:src/main/java/org/cysecurity/cspf/jvl/controller/Register.java"
            }
        ],
        "id": "AXiEVo7Ouqae-LhUXplF"
    },
    {
        "taints": [
            {
                "code": "rs=stmt.executeQuery(\"select * from users where username='\"+user+\"'\");",
                "file": "44-JavaVulnerableLab-master-with-cache-and-all-preparser-libs:src/main/java/org/cysecurity/cspf/jvl/controller/UsernameCheck.java"
            },
            {
                "code": "String user=request.getParameter(\"username\").trim();",
                "file": "44-JavaVulnerableLab-master-with-cache-and-all-preparser-libs:src/main/java/org/cysecurity/cspf/jvl/controller/UsernameCheck.java"
            },
            {
                "code": "String user=request.getParameter(\"username\").trim();",
                "file": "44-JavaVulnerableLab-master-with-cache-and-all-preparser-libs:src/main/java/org/cysecurity/cspf/jvl/controller/UsernameCheck.java"
            }
        ],
        "id": "AXiEVo69uqae-LhUXpkv"
    },
    {
        "taints": [
            {
                "code": "rs=stmt.executeQuery(\"select * from users where username='\"+request.getParameter(\"username\").trim()+\"' and secret='\"+request.getParameter(\"secret\")+\"'\");",
                "file": "44-JavaVulnerableLab-master-with-cache-and-all-preparser-libs:target/JavaVulnerableLab/ForgotPassword.jsp"
            },
            {
                "code": "rs=stmt.executeQuery(\"select * from users where username='\"+request.getParameter(\"username\").trim()+\"' and secret='\"+request.getParameter(\"secret\")+\"'\");",
                "file": "44-JavaVulnerableLab-master-with-cache-and-all-preparser-libs:target/JavaVulnerableLab/ForgotPassword.jsp"
            }
        ],
        "id": "AXiEVpEwuqae-LhUXpnY"
    },
    {
        "taints": [
            {
                "code": "rs=stmt.executeQuery(\"select * from users where username='\"+user+\"' and password='\"+pass+\"' and privilege='admin'\");",
                "file": "44-JavaVulnerableLab-master-with-cache-and-all-preparser-libs:target/JavaVulnerableLab/admin/adminlogin.jsp"
            },
            {
                "code": "String user=request.getParameter(\"username\");",
                "file": "44-JavaVulnerableLab-master-with-cache-and-all-preparser-libs:target/JavaVulnerableLab/admin/adminlogin.jsp"
            }
        ],
        "id": "AXiEVpDUuqae-LhUXpnB"
    },
    {
        "taints": [
            {
                "code": "stmt.executeUpdate(\"Delete from users where username='\"+user+\"'\");",
                "file": "44-JavaVulnerableLab-master-with-cache-and-all-preparser-libs:target/JavaVulnerableLab/admin/manageusers.jsp"
            },
            {
                "code": "String user=request.getParameter(\"user\");",
                "file": "44-JavaVulnerableLab-master-with-cache-and-all-preparser-libs:target/JavaVulnerableLab/admin/manageusers.jsp"
            }
        ],
        "id": "AXiEVpD0uqae-LhUXpnJ"
    },
    {
        "taints": [
            {
                "code": "rs=stmt.executeQuery(\"select * from UserMessages where msgid=\"+request.getParameter(\"msgid\"));",
                "file": "44-JavaVulnerableLab-master-with-cache-and-all-preparser-libs:target/JavaVulnerableLab/vulnerability/DisplayMessage.jsp"
            }
        ],
        "id": "AXiEVpCauqae-LhUXpmv"
    },
    {
        "taints": [
            {
                "code": "stmt.executeUpdate(\"INSERT into posts(content,title,user) values ('\"+content+\"','\"+title+\"','\"+user+\"')\");",
                "file": "44-JavaVulnerableLab-master-with-cache-and-all-preparser-libs:target/JavaVulnerableLab/vulnerability/forum.jsp"
            },
            {
                "code": "String title=request.getParameter(\"title\");",
                "file": "44-JavaVulnerableLab-master-with-cache-and-all-preparser-libs:target/JavaVulnerableLab/vulnerability/forum.jsp"
            },
            {
                "code": "String content=request.getParameter(\"content\");",
                "file": "44-JavaVulnerableLab-master-with-cache-and-all-preparser-libs:target/JavaVulnerableLab/vulnerability/forum.jsp"
            }
        ],
        "id": "AXiEVpBxuqae-LhUXpmm"
    },
    {
        "taints": [
            {
                "code": "rs=stmt.executeQuery(\"select * from posts where postid=\"+postid);",
                "file": "44-JavaVulnerableLab-master-with-cache-and-all-preparser-libs:target/JavaVulnerableLab/vulnerability/forumposts.jsp"
            },
            {
                "code": "String postid=request.getParameter(\"postid\");",
                "file": "44-JavaVulnerableLab-master-with-cache-and-all-preparser-libs:target/JavaVulnerableLab/vulnerability/forumposts.jsp"
            }
        ],
        "id": "AXiEVpCBuqae-LhUXpmr"
    },
    {
        "taints": [
            {
                "code": "stmt.executeUpdate(\"Update users set email='\"+email+\"' where id=\"+id);",
                "file": "44-JavaVulnerableLab-master-with-cache-and-all-preparser-libs:target/JavaVulnerableLab/vulnerability/idor/change-email.jsp"
            },
            {
                "code": "String email=request.getParameter(\"email\");",
                "file": "44-JavaVulnerableLab-master-with-cache-and-all-preparser-libs:target/JavaVulnerableLab/vulnerability/idor/change-email.jsp"
            }
        ],
        "id": "AXiEVpBbuqae-LhUXpmk"
    },
    {
        "taints": [
            {
                "code": "rs=stmt.executeQuery(\"select * from users where email='\"+email+\"'\");",
                "file": "44-JavaVulnerableLab-master-with-all-resolved-libs:src/main/java/org/cysecurity/cspf/jvl/controller/EmailCheck.java"
            },
            {
                "code": "String email=request.getParameter(\"email\").trim();",
                "file": "44-JavaVulnerableLab-master-with-all-resolved-libs:src/main/java/org/cysecurity/cspf/jvl/controller/EmailCheck.java"
            },
            {
                "code": "String email=request.getParameter(\"email\").trim();",
                "file": "44-JavaVulnerableLab-master-with-all-resolved-libs:src/main/java/org/cysecurity/cspf/jvl/controller/EmailCheck.java"
            }
        ],
        "id": "AXiEVZjSghu_tM7IUT-m"
    },
    {
        "taints": [
            {
                "code": "rs=stmt.executeQuery(\"select * from users where username='\"+user+\"' and password='\"+pass+\"'\");",
                "file": "44-JavaVulnerableLab-master-with-all-resolved-libs:src/main/java/org/cysecurity/cspf/jvl/controller/LoginValidator.java"
            },
            {
                "code": "String pass=request.getParameter(\"password\").trim();",
                "file": "44-JavaVulnerableLab-master-with-all-resolved-libs:src/main/java/org/cysecurity/cspf/jvl/controller/LoginValidator.java"
            },
            {
                "code": "String user=request.getParameter(\"username\").trim();",
                "file": "44-JavaVulnerableLab-master-with-all-resolved-libs:src/main/java/org/cysecurity/cspf/jvl/controller/LoginValidator.java"
            },
            {
                "code": "String user=request.getParameter(\"username\").trim();",
                "file": "44-JavaVulnerableLab-master-with-all-resolved-libs:src/main/java/org/cysecurity/cspf/jvl/controller/LoginValidator.java"
            }
        ],
        "id": "AXiEVZjUghu_tM7IUT-z"
    },
    {
        "taints": [
            {
                "code": "stmt.executeUpdate(\"INSERT into users(username, password, email, About,avatar,privilege,secretquestion,secret) values ('\"+user+\"','\"+pass+\"','\"+email+\"','\"+about+\"','default.jpg','user',1,'\"+secret+\"')\");",
                "file": "44-JavaVulnerableLab-master-with-all-resolved-libs:src/main/java/org/cysecurity/cspf/jvl/controller/Register.java"
            },
            {
                "code": "String about=request.getParameter(\"About\");",
                "file": "44-JavaVulnerableLab-master-with-all-resolved-libs:src/main/java/org/cysecurity/cspf/jvl/controller/Register.java"
            },
            {
                "code": "String email=request.getParameter(\"email\");",
                "file": "44-JavaVulnerableLab-master-with-all-resolved-libs:src/main/java/org/cysecurity/cspf/jvl/controller/Register.java"
            },
            {
                "code": "String pass=request.getParameter(\"password\");",
                "file": "44-JavaVulnerableLab-master-with-all-resolved-libs:src/main/java/org/cysecurity/cspf/jvl/controller/Register.java"
            },
            {
                "code": "String user=request.getParameter(\"username\");",
                "file": "44-JavaVulnerableLab-master-with-all-resolved-libs:src/main/java/org/cysecurity/cspf/jvl/controller/Register.java"
            }
        ],
        "id": "AXiEVZjeghu_tM7IUT_X"
    },
    {
        "taints": [
            {
                "code": "stmt.executeUpdate(\"INSERT into UserMessages(recipient, sender, subject, msg) values ('\"+user+\"','admin','Hi','Hi<br/> This is admin of this page. <br/> Welcome to Our Forum')\");",
                "file": "44-JavaVulnerableLab-master-with-all-resolved-libs:src/main/java/org/cysecurity/cspf/jvl/controller/Register.java"
            },
            {
                "code": "String user=request.getParameter(\"username\");",
                "file": "44-JavaVulnerableLab-master-with-all-resolved-libs:src/main/java/org/cysecurity/cspf/jvl/controller/Register.java"
            }
        ],
        "id": "AXiEVZjeghu_tM7IUT_W"
    },
    {
        "taints": [
            {
                "code": "rs=stmt.executeQuery(\"select * from users where username='\"+user+\"'\");",
                "file": "44-JavaVulnerableLab-master-with-all-resolved-libs:src/main/java/org/cysecurity/cspf/jvl/controller/UsernameCheck.java"
            },
            {
                "code": "String user=request.getParameter(\"username\").trim();",
                "file": "44-JavaVulnerableLab-master-with-all-resolved-libs:src/main/java/org/cysecurity/cspf/jvl/controller/UsernameCheck.java"
            },
            {
                "code": "String user=request.getParameter(\"username\").trim();",
                "file": "44-JavaVulnerableLab-master-with-all-resolved-libs:src/main/java/org/cysecurity/cspf/jvl/controller/UsernameCheck.java"
            }
        ],
        "id": "AXiEVZjaghu_tM7IUT_B"
    },
    {
        "taints": [
            {
                "code": "rs=stmt.executeQuery(\"select * from users where username='\"+request.getParameter(\"username\").trim()+\"' and secret='\"+request.getParameter(\"secret\")+\"'\");",
                "file": "44-JavaVulnerableLab-master-with-all-resolved-libs:target/JavaVulnerableLab/ForgotPassword.jsp"
            },
            {
                "code": "rs=stmt.executeQuery(\"select * from users where username='\"+request.getParameter(\"username\").trim()+\"' and secret='\"+request.getParameter(\"secret\")+\"'\");",
                "file": "44-JavaVulnerableLab-master-with-all-resolved-libs:target/JavaVulnerableLab/ForgotPassword.jsp"
            }
        ],
        "id": "AXiEVZmUghu_tM7IUUBq"
    },
    {
        "taints": [
            {
                "code": "rs=stmt.executeQuery(\"select * from users where username='\"+user+\"' and password='\"+pass+\"' and privilege='admin'\");",
                "file": "44-JavaVulnerableLab-master-with-all-resolved-libs:target/JavaVulnerableLab/admin/adminlogin.jsp"
            },
            {
                "code": "String user=request.getParameter(\"username\");",
                "file": "44-JavaVulnerableLab-master-with-all-resolved-libs:target/JavaVulnerableLab/admin/adminlogin.jsp"
            }
        ],
        "id": "AXiEVZl3ghu_tM7IUUBT"
    },
    {
        "taints": [
            {
                "code": "stmt.executeUpdate(\"Delete from users where username='\"+user+\"'\");",
                "file": "44-JavaVulnerableLab-master-with-all-resolved-libs:target/JavaVulnerableLab/admin/manageusers.jsp"
            },
            {
                "code": "String user=request.getParameter(\"user\");",
                "file": "44-JavaVulnerableLab-master-with-all-resolved-libs:target/JavaVulnerableLab/admin/manageusers.jsp"
            }
        ],
        "id": "AXiEVZmBghu_tM7IUUBb"
    },
    {
        "taints": [
            {
                "code": "rs=stmt.executeQuery(\"select * from UserMessages where msgid=\"+request.getParameter(\"msgid\"));",
                "file": "44-JavaVulnerableLab-master-with-all-resolved-libs:target/JavaVulnerableLab/vulnerability/DisplayMessage.jsp"
            }
        ],
        "id": "AXiEVZlnghu_tM7IUUBB"
    },
    {
        "taints": [
            {
                "code": "stmt.executeUpdate(\"INSERT into posts(content,title,user) values ('\"+content+\"','\"+title+\"','\"+user+\"')\");",
                "file": "44-JavaVulnerableLab-master-with-all-resolved-libs:target/JavaVulnerableLab/vulnerability/forum.jsp"
            },
            {
                "code": "String title=request.getParameter(\"title\");",
                "file": "44-JavaVulnerableLab-master-with-all-resolved-libs:target/JavaVulnerableLab/vulnerability/forum.jsp"
            },
            {
                "code": "String content=request.getParameter(\"content\");",
                "file": "44-JavaVulnerableLab-master-with-all-resolved-libs:target/JavaVulnerableLab/vulnerability/forum.jsp"
            }
        ],
        "id": "AXiEVZlcghu_tM7IUUA4"
    },
    {
        "taints": [
            {
                "code": "rs=stmt.executeQuery(\"select * from posts where postid=\"+postid);",
                "file": "44-JavaVulnerableLab-master-with-all-resolved-libs:target/JavaVulnerableLab/vulnerability/forumposts.jsp"
            },
            {
                "code": "String postid=request.getParameter(\"postid\");",
                "file": "44-JavaVulnerableLab-master-with-all-resolved-libs:target/JavaVulnerableLab/vulnerability/forumposts.jsp"
            }
        ],
        "id": "AXiEVZlgghu_tM7IUUA9"
    },
    {
        "taints": [
            {
                "code": "stmt.executeUpdate(\"Update users set email='\"+email+\"' where id=\"+id);",
                "file": "44-JavaVulnerableLab-master-with-all-resolved-libs:target/JavaVulnerableLab/vulnerability/idor/change-email.jsp"
            },
            {
                "code": "String email=request.getParameter(\"email\");",
                "file": "44-JavaVulnerableLab-master-with-all-resolved-libs:target/JavaVulnerableLab/vulnerability/idor/change-email.jsp"
            }
        ],
        "id": "AXiEVZlVghu_tM7IUUA2"
    },
    {
        "taints": [
            {
                "code": "Query q = session.createQuery(\"from Client c where c.email=\\\"\"+\n(p_s_email)+\"\\\" and c.motDePasse=\\\"\"+p_s_mdp+\"\\\"\");",
                "file": "20-projet-semaine-bloquee-master-with-cache-and-all-preparser-libs:src/main/java/miage/bd/SeConnecter.java"
            },
            {
                "code": "public static boolean verifierConnexion(String p_s_email, String p_s_mdp)",
                "file": "20-projet-semaine-bloquee-master-with-cache-and-all-preparser-libs:src/main/java/miage/bd/SeConnecter.java"
            },
            {
                "code": "p_b_result = SeConnecter.verifierConnexion(p_s_email, p_s_mdp);",
                "file": "20-projet-semaine-bloquee-master-with-cache-and-all-preparser-libs:src/main/java/miage/ctrl/CtrlConnexion.java"
            },
            {
                "code": "String p_s_email = (String)request.getParameter(\"txtEmail\");",
                "file": "20-projet-semaine-bloquee-master-with-cache-and-all-preparser-libs:src/main/java/miage/ctrl/CtrlConnexion.java"
            }
        ],
        "id": "AXiEElhNPm8MNCGkr4gH"
    },
    {
        "taints": [
            {
                "code": "Query q = session.createQuery(\"from Preparateur p where p.emailPrepa=\\\"\"+\n(p_s_email)+\"\\\" and p.motDePassePrepa=\\\"\"+p_s_mdp+\"\\\"\");",
                "file": "20-projet-semaine-bloquee-master-with-cache-and-all-preparser-libs:src/main/java/miage/bd/SeConnecter.java"
            },
            {
                "code": "public static boolean verifierConnexionPrepa(String p_s_email, String p_s_mdp)",
                "file": "20-projet-semaine-bloquee-master-with-cache-and-all-preparser-libs:src/main/java/miage/bd/SeConnecter.java"
            },
            {
                "code": "p_b_result = SeConnecter.verifierConnexionPrepa(p_s_email, p_s_mdp);",
                "file": "20-projet-semaine-bloquee-master-with-cache-and-all-preparser-libs:src/main/java/miage/ctrl/CtrlConnexionPrepa.java"
            },
            {
                "code": "String p_s_email = (String)request.getParameter(\"txtEmail\");",
                "file": "20-projet-semaine-bloquee-master-with-cache-and-all-preparser-libs:src/main/java/miage/ctrl/CtrlConnexionPrepa.java"
            }
        ],
        "id": "AXiEElhNPm8MNCGkr4gE"
    },
    {
        "taints": [
            {
                "code": "Query q = session.createQuery(\"from Client c where c.email='\"+\n(p_s_email)+\"' and c.motDePasse='\"+p_s_mdp+\"'\");",
                "file": "20-projet-semaine-bloquee-master-with-cache-and-all-preparser-libs:src/main/java/miage/bd/SeConnecter.java"
            },
            {
                "code": "public static Client recupClient(String p_s_email, String p_s_mdp)",
                "file": "20-projet-semaine-bloquee-master-with-cache-and-all-preparser-libs:src/main/java/miage/bd/SeConnecter.java"
            },
            {
                "code": "Client p_c_client=SeConnecter.recupClient(p_s_email, p_s_mdp);",
                "file": "20-projet-semaine-bloquee-master-with-cache-and-all-preparser-libs:src/main/java/miage/ctrl/CtrlConnexion.java"
            },
            {
                "code": "String p_s_email = (String)request.getParameter(\"txtEmail\");",
                "file": "20-projet-semaine-bloquee-master-with-cache-and-all-preparser-libs:src/main/java/miage/ctrl/CtrlConnexion.java"
            }
        ],
        "id": "AXiEElhNPm8MNCGkr4gF"
    },
    {
        "taints": [
            {
                "code": "Query q = session.createQuery(\"from Preparateur p where p.emailPrepa='\"+\n(p_s_email)+\"' and p.motDePassePrepa='\"+p_s_mdp+\"'\");",
                "file": "20-projet-semaine-bloquee-master-with-cache-and-all-preparser-libs:src/main/java/miage/bd/SeConnecter.java"
            },
            {
                "code": "public static Preparateur recupPreparateur(String p_s_email, String p_s_mdp)",
                "file": "20-projet-semaine-bloquee-master-with-cache-and-all-preparser-libs:src/main/java/miage/bd/SeConnecter.java"
            },
            {
                "code": "Preparateur p_o_preparateur=SeConnecter.recupPreparateur(p_s_email, p_s_mdp);",
                "file": "20-projet-semaine-bloquee-master-with-cache-and-all-preparser-libs:src/main/java/miage/ctrl/CtrlConnexionPrepa.java"
            },
            {
                "code": "String p_s_email = (String)request.getParameter(\"txtEmail\");",
                "file": "20-projet-semaine-bloquee-master-with-cache-and-all-preparser-libs:src/main/java/miage/ctrl/CtrlConnexionPrepa.java"
            }
        ],
        "id": "AXiEElhNPm8MNCGkr4gG"
    },
    {
        "taints": [
            {
                "code": "Query q = session.createQuery(\"from Client c where c.email=\\\"\"+\n(p_s_email)+\"\\\" and c.motDePasse=\\\"\"+p_s_mdp+\"\\\"\");",
                "file": "20-projet-semaine-bloquee-master-with-all-resolved-libs:src/main/java/miage/bd/SeConnecter.java"
            },
            {
                "code": "public static boolean verifierConnexion(String p_s_email, String p_s_mdp)",
                "file": "20-projet-semaine-bloquee-master-with-all-resolved-libs:src/main/java/miage/bd/SeConnecter.java"
            },
            {
                "code": "p_b_result = SeConnecter.verifierConnexion(p_s_email, p_s_mdp);",
                "file": "20-projet-semaine-bloquee-master-with-all-resolved-libs:src/main/java/miage/ctrl/CtrlConnexion.java"
            },
            {
                "code": "String p_s_email = (String)request.getParameter(\"txtEmail\");",
                "file": "20-projet-semaine-bloquee-master-with-all-resolved-libs:src/main/java/miage/ctrl/CtrlConnexion.java"
            }
        ],
        "id": "AXiEEcGCU--29SJ9Pp9D"
    },
    {
        "taints": [
            {
                "code": "Query q = session.createQuery(\"from Preparateur p where p.emailPrepa=\\\"\"+\n(p_s_email)+\"\\\" and p.motDePassePrepa=\\\"\"+p_s_mdp+\"\\\"\");",
                "file": "20-projet-semaine-bloquee-master-with-all-resolved-libs:src/main/java/miage/bd/SeConnecter.java"
            },
            {
                "code": "public static boolean verifierConnexionPrepa(String p_s_email, String p_s_mdp)",
                "file": "20-projet-semaine-bloquee-master-with-all-resolved-libs:src/main/java/miage/bd/SeConnecter.java"
            },
            {
                "code": "p_b_result = SeConnecter.verifierConnexionPrepa(p_s_email, p_s_mdp);",
                "file": "20-projet-semaine-bloquee-master-with-all-resolved-libs:src/main/java/miage/ctrl/CtrlConnexionPrepa.java"
            },
            {
                "code": "String p_s_email = (String)request.getParameter(\"txtEmail\");",
                "file": "20-projet-semaine-bloquee-master-with-all-resolved-libs:src/main/java/miage/ctrl/CtrlConnexionPrepa.java"
            }
        ],
        "id": "AXiEEcGCU--29SJ9Pp9F"
    },
    {
        "taints": [
            {
                "code": "Query q = session.createQuery(\"from Client c where c.email='\"+\n(p_s_email)+\"' and c.motDePasse='\"+p_s_mdp+\"'\");",
                "file": "20-projet-semaine-bloquee-master-with-all-resolved-libs:src/main/java/miage/bd/SeConnecter.java"
            },
            {
                "code": "public static Client recupClient(String p_s_email, String p_s_mdp)",
                "file": "20-projet-semaine-bloquee-master-with-all-resolved-libs:src/main/java/miage/bd/SeConnecter.java"
            },
            {
                "code": "Client p_c_client=SeConnecter.recupClient(p_s_email, p_s_mdp);",
                "file": "20-projet-semaine-bloquee-master-with-all-resolved-libs:src/main/java/miage/ctrl/CtrlConnexion.java"
            },
            {
                "code": "String p_s_email = (String)request.getParameter(\"txtEmail\");",
                "file": "20-projet-semaine-bloquee-master-with-all-resolved-libs:src/main/java/miage/ctrl/CtrlConnexion.java"
            }
        ],
        "id": "AXiEEcGCU--29SJ9Pp9C"
    },
    {
        "taints": [
            {
                "code": "Query q = session.createQuery(\"from Preparateur p where p.emailPrepa='\"+\n(p_s_email)+\"' and p.motDePassePrepa='\"+p_s_mdp+\"'\");",
                "file": "20-projet-semaine-bloquee-master-with-all-resolved-libs:src/main/java/miage/bd/SeConnecter.java"
            },
            {
                "code": "public static Preparateur recupPreparateur(String p_s_email, String p_s_mdp)",
                "file": "20-projet-semaine-bloquee-master-with-all-resolved-libs:src/main/java/miage/bd/SeConnecter.java"
            },
            {
                "code": "Preparateur p_o_preparateur=SeConnecter.recupPreparateur(p_s_email, p_s_mdp);",
                "file": "20-projet-semaine-bloquee-master-with-all-resolved-libs:src/main/java/miage/ctrl/CtrlConnexionPrepa.java"
            },
            {
                "code": "String p_s_email = (String)request.getParameter(\"txtEmail\");",
                "file": "20-projet-semaine-bloquee-master-with-all-resolved-libs:src/main/java/miage/ctrl/CtrlConnexionPrepa.java"
            }
        ],
        "id": "AXiEEcGCU--29SJ9Pp9E"
    },
    {
        "taints": [
            {
                "code": "ResultSet resultSet = statement.executeQuery();",
                "file": "46-WebGoat-develop-master-with-cache-and-all-preparser-libs:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            },
            {
                "code": "PreparedStatement statement = connection.prepareStatement(\"select password from challenge_users where userid = '\" + username_login + \"' and password = '\" + password_login + \"'\");",
                "file": "46-WebGoat-develop-master-with-cache-and-all-preparser-libs:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            },
            {
                "code": "PreparedStatement statement = connection.prepareStatement(\"select password from challenge_users where userid = '\" + username_login + \"' and password = '\" + password_login + \"'\");",
                "file": "46-WebGoat-develop-master-with-cache-and-all-preparser-libs:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            },
            {
                "code": "public AttackResult login(@RequestParam String username_login, @RequestParam String password_login) throws Exception {",
                "file": "46-WebGoat-develop-master-with-cache-and-all-preparser-libs:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            }
        ],
        "id": "AXiD_vFxOpt7T-_A4TnN"
    },
    {
        "taints": [
            {
                "code": "ResultSet resultSet = statement.executeQuery(checkUserQuery);",
                "file": "46-WebGoat-develop-master-with-cache-and-all-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"
            },
            {
                "code": "String checkUserQuery = \"select userid from sql_challenge_users where userid = '\" + username_reg + \"'\";",
                "file": "46-WebGoat-develop-master-with-cache-and-all-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"
            },
            {
                "code": "public AttackResult registerNewUser(@RequestParam String username_reg, @RequestParam String email_reg, @RequestParam String password_reg) throws Exception {",
                "file": "46-WebGoat-develop-master-with-cache-and-all-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"
            }
        ],
        "id": "AXiD_u_aOpt7T-_A4Tb9"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "46-WebGoat-develop-master-with-cache-and-all-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "String query = \"SELECT * FROM access_log WHERE action LIKE '%\" + action + \"%'\";",
                "file": "46-WebGoat-develop-master-with-cache-and-all-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "protected AttackResult injectableQueryAvailability(String action) {",
                "file": "46-WebGoat-develop-master-with-cache-and-all-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "return injectableQueryAvailability(action_string);",
                "file": "46-WebGoat-develop-master-with-cache-and-all-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String action_string) {",
                "file": "46-WebGoat-develop-master-with-cache-and-all-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            }
        ],
        "id": "AXiD_u_iOpt7T-_A4TcT"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "46-WebGoat-develop-master-with-cache-and-all-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "46-WebGoat-develop-master-with-cache-and-all-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "46-WebGoat-develop-master-with-cache-and-all-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String query) {",
                "file": "46-WebGoat-develop-master-with-cache-and-all-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            }
        ],
        "id": "AXiD_u_0Opt7T-_A4Tc7"
    },
    {
        "taints": [
            {
                "code": "statement.executeUpdate(query);",
                "file": "46-WebGoat-develop-master-with-cache-and-all-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "46-WebGoat-develop-master-with-cache-and-all-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "46-WebGoat-develop-master-with-cache-and-all-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String query) {",
                "file": "46-WebGoat-develop-master-with-cache-and-all-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            }
        ],
        "id": "AXiD_u_wOpt7T-_A4Tc3"
    },
    {
        "taints": [
            {
                "code": "statement.executeUpdate(query);",
                "file": "46-WebGoat-develop-master-with-cache-and-all-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "46-WebGoat-develop-master-with-cache-and-all-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "46-WebGoat-develop-master-with-cache-and-all-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String query) {",
                "file": "46-WebGoat-develop-master-with-cache-and-all-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            }
        ],
        "id": "AXiD_u_lOpt7T-_A4TcW"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "46-WebGoat-develop-master-with-cache-and-all-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "query = \"SELECT * FROM user_data WHERE first_name = 'John' and last_name = '\" + accountName + \"'\";",
                "file": "46-WebGoat-develop-master-with-cache-and-all-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String accountName) {",
                "file": "46-WebGoat-develop-master-with-cache-and-all-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "return injectableQuery(account + \" \" + operator + \" \" + injection);",
                "file": "46-WebGoat-develop-master-with-cache-and-all-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String account, @RequestParam String operator, @RequestParam String injection) {",
                "file": "46-WebGoat-develop-master-with-cache-and-all-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            }
        ],
        "id": "AXiD_u_tOpt7T-_A4Tcz"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = query.executeQuery();",
                "file": "46-WebGoat-develop-master-with-cache-and-all-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "PreparedStatement query = connection.prepareStatement(queryString, ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);",
                "file": "46-WebGoat-develop-master-with-cache-and-all-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "String queryString = \"SELECT * From user_data WHERE Login_Count = ? and userid= \" + accountName;",
                "file": "46-WebGoat-develop-master-with-cache-and-all-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String login_count, String accountName) {",
                "file": "46-WebGoat-develop-master-with-cache-and-all-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "return injectableQuery(login_count, userid);",
                "file": "46-WebGoat-develop-master-with-cache-and-all-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String userid, @RequestParam String login_count, HttpServletRequest request) throws IOException {",
                "file": "46-WebGoat-develop-master-with-cache-and-all-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            }
        ],
        "id": "AXiD_u_3Opt7T-_A4TdH"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "46-WebGoat-develop-master-with-cache-and-all-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "String query = \"SELECT * FROM employees WHERE last_name = '\" + name + \"' AND auth_tan = '\" + auth_tan + \"'\";",
                "file": "46-WebGoat-develop-master-with-cache-and-all-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "protected AttackResult injectableQueryConfidentiality(String name, String auth_tan) {",
                "file": "46-WebGoat-develop-master-with-cache-and-all-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "return injectableQueryConfidentiality(name, auth_tan);",
                "file": "46-WebGoat-develop-master-with-cache-and-all-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String name, @RequestParam String auth_tan) {",
                "file": "46-WebGoat-develop-master-with-cache-and-all-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            }
        ],
        "id": "AXiD_u_oOpt7T-_A4Tci"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "46-WebGoat-develop-master-with-cache-and-all-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "String query = \"SELECT * FROM employees WHERE last_name = '\" + name + \"' AND auth_tan = '\" + auth_tan + \"'\";",
                "file": "46-WebGoat-develop-master-with-cache-and-all-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "protected AttackResult injectableQueryIntegrity(String name, String auth_tan) {",
                "file": "46-WebGoat-develop-master-with-cache-and-all-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "return injectableQueryIntegrity(name, auth_tan);",
                "file": "46-WebGoat-develop-master-with-cache-and-all-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String name, @RequestParam String auth_tan) {",
                "file": "46-WebGoat-develop-master-with-cache-and-all-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            }
        ],
        "id": "AXiD_u_qOpt7T-_A4Tcw"
    },
    {
        "taints": [
            {
                "code": "ResultSet rs = preparedStatement.executeQuery();",
                "file": "46-WebGoat-develop-master-with-cache-and-all-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            },
            {
                "code": "PreparedStatement preparedStatement = connection.prepareStatement(\"select id, hostname, ip, mac, status, description from servers  where status <> 'out of order' order by \" + column)) {",
                "file": "46-WebGoat-develop-master-with-cache-and-all-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            },
            {
                "code": "PreparedStatement preparedStatement = connection.prepareStatement(\"select id, hostname, ip, mac, status, description from servers  where status <> 'out of order' order by \" + column)) {",
                "file": "46-WebGoat-develop-master-with-cache-and-all-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            },
            {
                "code": "public List<Server> sort(@RequestParam String column) throws Exception {",
                "file": "46-WebGoat-develop-master-with-cache-and-all-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            }
        ],
        "id": "AXiD_u_MOpt7T-_A4TbS"
    },
    {
        "taints": [
            {
                "code": "ResultSet resultSet = statement.executeQuery();",
                "file": "46-WebGoat-develop-master-with-all-resolved-libs:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            },
            {
                "code": "PreparedStatement statement = connection.prepareStatement(\"select password from challenge_users where userid = '\" + username_login + \"' and password = '\" + password_login + \"'\");",
                "file": "46-WebGoat-develop-master-with-all-resolved-libs:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            },
            {
                "code": "PreparedStatement statement = connection.prepareStatement(\"select password from challenge_users where userid = '\" + username_login + \"' and password = '\" + password_login + \"'\");",
                "file": "46-WebGoat-develop-master-with-all-resolved-libs:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            },
            {
                "code": "public AttackResult login(@RequestParam String username_login, @RequestParam String password_login) throws Exception {",
                "file": "46-WebGoat-develop-master-with-all-resolved-libs:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            }
        ],
        "id": "AXiD_GkykeCJKpTwNSLG"
    },
    {
        "taints": [
            {
                "code": "ResultSet resultSet = statement.executeQuery(checkUserQuery);",
                "file": "46-WebGoat-develop-master-with-all-resolved-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"
            },
            {
                "code": "String checkUserQuery = \"select userid from sql_challenge_users where userid = '\" + username_reg + \"'\";",
                "file": "46-WebGoat-develop-master-with-all-resolved-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"
            },
            {
                "code": "public AttackResult registerNewUser(@RequestParam String username_reg, @RequestParam String email_reg, @RequestParam String password_reg) throws Exception {",
                "file": "46-WebGoat-develop-master-with-all-resolved-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"
            }
        ],
        "id": "AXiD_GTIkeCJKpTwNR_2"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "46-WebGoat-develop-master-with-all-resolved-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "String query = \"SELECT * FROM access_log WHERE action LIKE '%\" + action + \"%'\";",
                "file": "46-WebGoat-develop-master-with-all-resolved-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "protected AttackResult injectableQueryAvailability(String action) {",
                "file": "46-WebGoat-develop-master-with-all-resolved-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "return injectableQueryAvailability(action_string);",
                "file": "46-WebGoat-develop-master-with-all-resolved-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String action_string) {",
                "file": "46-WebGoat-develop-master-with-all-resolved-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            }
        ],
        "id": "AXiD_GThkeCJKpTwNSAM"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "46-WebGoat-develop-master-with-all-resolved-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "46-WebGoat-develop-master-with-all-resolved-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "46-WebGoat-develop-master-with-all-resolved-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String query) {",
                "file": "46-WebGoat-develop-master-with-all-resolved-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            }
        ],
        "id": "AXiD_GUckeCJKpTwNSA0"
    },
    {
        "taints": [
            {
                "code": "statement.executeUpdate(query);",
                "file": "46-WebGoat-develop-master-with-all-resolved-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "46-WebGoat-develop-master-with-all-resolved-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "46-WebGoat-develop-master-with-all-resolved-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String query) {",
                "file": "46-WebGoat-develop-master-with-all-resolved-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            }
        ],
        "id": "AXiD_GUNkeCJKpTwNSAw"
    },
    {
        "taints": [
            {
                "code": "statement.executeUpdate(query);",
                "file": "46-WebGoat-develop-master-with-all-resolved-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "46-WebGoat-develop-master-with-all-resolved-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "46-WebGoat-develop-master-with-all-resolved-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String query) {",
                "file": "46-WebGoat-develop-master-with-all-resolved-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            }
        ],
        "id": "AXiD_GTskeCJKpTwNSAP"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "46-WebGoat-develop-master-with-all-resolved-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "query = \"SELECT * FROM user_data WHERE first_name = 'John' and last_name = '\" + accountName + \"'\";",
                "file": "46-WebGoat-develop-master-with-all-resolved-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String accountName) {",
                "file": "46-WebGoat-develop-master-with-all-resolved-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "return injectableQuery(account + \" \" + operator + \" \" + injection);",
                "file": "46-WebGoat-develop-master-with-all-resolved-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String account, @RequestParam String operator, @RequestParam String injection) {",
                "file": "46-WebGoat-develop-master-with-all-resolved-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            }
        ],
        "id": "AXiD_GUFkeCJKpTwNSAs"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = query.executeQuery();",
                "file": "46-WebGoat-develop-master-with-all-resolved-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "PreparedStatement query = connection.prepareStatement(queryString, ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);",
                "file": "46-WebGoat-develop-master-with-all-resolved-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "String queryString = \"SELECT * From user_data WHERE Login_Count = ? and userid= \" + accountName;",
                "file": "46-WebGoat-develop-master-with-all-resolved-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String login_count, String accountName) {",
                "file": "46-WebGoat-develop-master-with-all-resolved-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "return injectableQuery(login_count, userid);",
                "file": "46-WebGoat-develop-master-with-all-resolved-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String userid, @RequestParam String login_count, HttpServletRequest request) throws IOException {",
                "file": "46-WebGoat-develop-master-with-all-resolved-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            }
        ],
        "id": "AXiD_GUkkeCJKpTwNSBA"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "46-WebGoat-develop-master-with-all-resolved-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "String query = \"SELECT * FROM employees WHERE last_name = '\" + name + \"' AND auth_tan = '\" + auth_tan + \"'\";",
                "file": "46-WebGoat-develop-master-with-all-resolved-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "protected AttackResult injectableQueryConfidentiality(String name, String auth_tan) {",
                "file": "46-WebGoat-develop-master-with-all-resolved-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "return injectableQueryConfidentiality(name, auth_tan);",
                "file": "46-WebGoat-develop-master-with-all-resolved-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String name, @RequestParam String auth_tan) {",
                "file": "46-WebGoat-develop-master-with-all-resolved-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            }
        ],
        "id": "AXiD_GT0keCJKpTwNSAb"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "46-WebGoat-develop-master-with-all-resolved-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "String query = \"SELECT * FROM employees WHERE last_name = '\" + name + \"' AND auth_tan = '\" + auth_tan + \"'\";",
                "file": "46-WebGoat-develop-master-with-all-resolved-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "protected AttackResult injectableQueryIntegrity(String name, String auth_tan) {",
                "file": "46-WebGoat-develop-master-with-all-resolved-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "return injectableQueryIntegrity(name, auth_tan);",
                "file": "46-WebGoat-develop-master-with-all-resolved-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String name, @RequestParam String auth_tan) {",
                "file": "46-WebGoat-develop-master-with-all-resolved-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            }
        ],
        "id": "AXiD_GT9keCJKpTwNSAp"
    },
    {
        "taints": [
            {
                "code": "ResultSet rs = preparedStatement.executeQuery();",
                "file": "46-WebGoat-develop-master-with-all-resolved-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            },
            {
                "code": "PreparedStatement preparedStatement = connection.prepareStatement(\"select id, hostname, ip, mac, status, description from servers  where status <> 'out of order' order by \" + column)) {",
                "file": "46-WebGoat-develop-master-with-all-resolved-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            },
            {
                "code": "PreparedStatement preparedStatement = connection.prepareStatement(\"select id, hostname, ip, mac, status, description from servers  where status <> 'out of order' order by \" + column)) {",
                "file": "46-WebGoat-develop-master-with-all-resolved-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            },
            {
                "code": "public List<Server> sort(@RequestParam String column) throws Exception {",
                "file": "46-WebGoat-develop-master-with-all-resolved-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            }
        ],
        "id": "AXiD_GSckeCJKpTwNR_L"
    },
    {
        "taints": [
            {
                "code": "ResultSet resultSet =statement.executeQuery(\"SELECT COUNT(*)FROM PEOPLE WHERE USER_ID = '\"+ user +\"' AND PASSWORD='\" + password + \"'\"); /* BAD - user input should always be sanitized */",
                "file": "fokaefs_AltoroJ:src/com/ibm/security/appscan/altoromutual/util/DBUtil.java"
            },
            {
                "code": "public static boolean isValidUser(String user, String password) throws SQLException{",
                "file": "fokaefs_AltoroJ:src/com/ibm/security/appscan/altoromutual/util/DBUtil.java"
            },
            {
                "code": "if (!DBUtil.isValidUser(username, password)){",
                "file": "fokaefs_AltoroJ:src/com/ibm/security/appscan/altoromutual/servlet/LoginServlet.java"
            },
            {
                "code": "username = request.getParameter(\"uid\");",
                "file": "fokaefs_AltoroJ:src/com/ibm/security/appscan/altoromutual/servlet/LoginServlet.java"
            },
            {
                "code": "String password = request.getParameter(\"passw\");",
                "file": "fokaefs_AltoroJ:src/com/ibm/security/appscan/altoromutual/servlet/LoginServlet.java"
            }
        ],
        "id": "AXiDi1j-nLTSYV4ZwCcC"
    },
    {
        "taints": [
            {
                "code": "ResultSet resultSet =statement.executeQuery(\"SELECT FIRST_NAME,LAST_NAME,ROLE FROM PEOPLE WHERE USER_ID = '\"+ username +\"' \"); /* BAD - user input should always be sanitized */",
                "file": "fokaefs_AltoroJ:src/com/ibm/security/appscan/altoromutual/util/DBUtil.java"
            },
            {
                "code": "public static User getUserInfo(String username) throws SQLException{",
                "file": "fokaefs_AltoroJ:src/com/ibm/security/appscan/altoromutual/util/DBUtil.java"
            },
            {
                "code": "User user = DBUtil.getUserInfo(username);",
                "file": "fokaefs_AltoroJ:src/com/ibm/security/appscan/altoromutual/util/ServletUtil.java"
            },
            {
                "code": "public static Cookie establishSession(String username, HttpSession session){",
                "file": "fokaefs_AltoroJ:src/com/ibm/security/appscan/altoromutual/util/ServletUtil.java"
            },
            {
                "code": "Cookie accountCookie = ServletUtil.establishSession(username,session);",
                "file": "fokaefs_AltoroJ:src/com/ibm/security/appscan/altoromutual/servlet/LoginServlet.java"
            },
            {
                "code": "username = request.getParameter(\"uid\");",
                "file": "fokaefs_AltoroJ:src/com/ibm/security/appscan/altoromutual/servlet/LoginServlet.java"
            }
        ],
        "id": "AXiDi1j-nLTSYV4ZwCcE"
    },
    {
        "taints": [
            {
                "code": "ResultSet resultSet =statement.executeQuery(\"SELECT ACCOUNT_ID, ACCOUNT_NAME, BALANCE FROM ACCOUNTS WHERE USERID = '\"+ username +\"' \"); /* BAD - user input should always be sanitized */",
                "file": "fokaefs_AltoroJ:src/com/ibm/security/appscan/altoromutual/util/DBUtil.java"
            },
            {
                "code": "public static Account[] getAccounts(String username) throws SQLException{",
                "file": "fokaefs_AltoroJ:src/com/ibm/security/appscan/altoromutual/util/DBUtil.java"
            },
            {
                "code": "return DBUtil.getAccounts(username);",
                "file": "fokaefs_AltoroJ:src/com/ibm/security/appscan/altoromutual/model/User.java"
            },
            {
                "code": "public Account[] getAccounts(){",
                "file": "fokaefs_AltoroJ:src/com/ibm/security/appscan/altoromutual/model/User.java"
            },
            {
                "code": "Account[] accounts = user.getAccounts();",
                "file": "fokaefs_AltoroJ:src/com/ibm/security/appscan/altoromutual/util/ServletUtil.java"
            },
            {
                "code": "public static Cookie establishSession(String username, HttpSession session){",
                "file": "fokaefs_AltoroJ:src/com/ibm/security/appscan/altoromutual/util/ServletUtil.java"
            },
            {
                "code": "Cookie accountCookie = ServletUtil.establishSession(username,session);",
                "file": "fokaefs_AltoroJ:src/com/ibm/security/appscan/altoromutual/servlet/LoginServlet.java"
            },
            {
                "code": "this.username = username;",
                "file": "fokaefs_AltoroJ:src/com/ibm/security/appscan/altoromutual/model/User.java"
            },
            {
                "code": "username = request.getParameter(\"uid\");",
                "file": "fokaefs_AltoroJ:src/com/ibm/security/appscan/altoromutual/servlet/LoginServlet.java"
            }
        ],
        "id": "AXiDi1j-nLTSYV4ZwCcH"
    },
    {
        "taints": [
            {
                "code": "statement.execute(\"INSERT INTO ACCOUNTS (USERID,ACCOUNT_NAME,BALANCE) VALUES ('\"+username+\"','\"+acctType+\"', 0)\");",
                "file": "fokaefs_AltoroJ:src/com/ibm/security/appscan/altoromutual/util/DBUtil.java"
            },
            {
                "code": "public static String addAccount(String username, String acctType) {",
                "file": "fokaefs_AltoroJ:src/com/ibm/security/appscan/altoromutual/util/DBUtil.java"
            },
            {
                "code": "String error = DBUtil.addAccount(username, acctType);",
                "file": "fokaefs_AltoroJ:src/com/ibm/security/appscan/altoromutual/servlet/AdminServlet.java"
            },
            {
                "code": "String username = request.getParameter(\"username\");",
                "file": "fokaefs_AltoroJ:src/com/ibm/security/appscan/altoromutual/servlet/AdminServlet.java"
            }
        ],
        "id": "AXiDi1j-nLTSYV4ZwCcG"
    },
    {
        "taints": [
            {
                "code": "statement.execute(\"INSERT INTO PEOPLE (USER_ID,PASSWORD,FIRST_NAME,LAST_NAME,ROLE) VALUES ('\"+username+\"','\"+password+\"', '\"+firstname+\"', '\"+lastname+\"','user')\");",
                "file": "fokaefs_AltoroJ:src/com/ibm/security/appscan/altoromutual/util/DBUtil.java"
            },
            {
                "code": "public static String addUser(String username, String password, String firstname, String lastname) {",
                "file": "fokaefs_AltoroJ:src/com/ibm/security/appscan/altoromutual/util/DBUtil.java"
            },
            {
                "code": "String error = DBUtil.addUser(username, password1, firstname, lastname);",
                "file": "fokaefs_AltoroJ:src/com/ibm/security/appscan/altoromutual/servlet/AdminServlet.java"
            },
            {
                "code": "String firstname = request.getParameter(\"firstname\");",
                "file": "fokaefs_AltoroJ:src/com/ibm/security/appscan/altoromutual/servlet/AdminServlet.java"
            },
            {
                "code": "String password1 = request.getParameter(\"password1\");",
                "file": "fokaefs_AltoroJ:src/com/ibm/security/appscan/altoromutual/servlet/AdminServlet.java"
            },
            {
                "code": "String username = request.getParameter(\"username\");",
                "file": "fokaefs_AltoroJ:src/com/ibm/security/appscan/altoromutual/servlet/AdminServlet.java"
            }
        ],
        "id": "AXiDi1j-nLTSYV4ZwCcI"
    },
    {
        "taints": [
            {
                "code": "statement.execute(\"UPDATE PEOPLE SET PASSWORD = '\"+ password +\"' WHERE USER_ID = '\"+username+\"'\");",
                "file": "fokaefs_AltoroJ:src/com/ibm/security/appscan/altoromutual/util/DBUtil.java"
            },
            {
                "code": "public static String changePassword(String username, String password) {",
                "file": "fokaefs_AltoroJ:src/com/ibm/security/appscan/altoromutual/util/DBUtil.java"
            },
            {
                "code": "String error = DBUtil.changePassword(username, password1);",
                "file": "fokaefs_AltoroJ:src/com/ibm/security/appscan/altoromutual/servlet/AdminServlet.java"
            },
            {
                "code": "String username = request.getParameter(\"username\");",
                "file": "fokaefs_AltoroJ:src/com/ibm/security/appscan/altoromutual/servlet/AdminServlet.java"
            },
            {
                "code": "String password1 = request.getParameter(\"password1\");",
                "file": "fokaefs_AltoroJ:src/com/ibm/security/appscan/altoromutual/servlet/AdminServlet.java"
            }
        ],
        "id": "AXiDi1j-nLTSYV4ZwCcF"
    },
    {
        "taints": [
            {
                "code": "statement.execute(\"INSERT INTO FEEDBACK (NAME,EMAIL,SUBJECT,COMMENTS) VALUES ('\"+name+\"', '\"+email+\"', '\"+subject+\"', '\"+comments+\"')\", Statement.RETURN_GENERATED_KEYS);",
                "file": "fokaefs_AltoroJ:src/com/ibm/security/appscan/altoromutual/util/DBUtil.java"
            },
            {
                "code": "public static long storeFeedback(String name, String email, String subject, String comments) {",
                "file": "fokaefs_AltoroJ:src/com/ibm/security/appscan/altoromutual/util/DBUtil.java"
            },
            {
                "code": "long id = DBUtil.storeFeedback(name, email, subject, comments);",
                "file": "fokaefs_AltoroJ:src/com/ibm/security/appscan/altoromutual/util/OperationsUtil.java"
            },
            {
                "code": "public static String sendFeedback(String name, String email,",
                "file": "fokaefs_AltoroJ:src/com/ibm/security/appscan/altoromutual/util/OperationsUtil.java"
            },
            {
                "code": "String feedbackId = OperationsUtil.sendFeedback(name, email, subject, comments);",
                "file": "fokaefs_AltoroJ:src/com/ibm/security/appscan/altoromutual/servlet/FeedbackServlet.java"
            },
            {
                "code": "String name = request.getParameter(\"name\");",
                "file": "fokaefs_AltoroJ:src/com/ibm/security/appscan/altoromutual/servlet/FeedbackServlet.java"
            }
        ],
        "id": "AXiDi1j-nLTSYV4ZwCcD"
    },
    {
        "taints": [
            {
                "code": "statement.executeQuery(query);",
                "file": "jaalvarado2020_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "jaalvarado2020_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "jaalvarado2020_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5.java"
            },
            {
                "code": "public AttackResult completed(String query) {",
                "file": "jaalvarado2020_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5.java"
            },
            {
                "code": "@PostMapping(\"/SqlInjection/attack5\")",
                "file": "jaalvarado2020_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5.java"
            }
        ],
        "id": "AXh6xRmhOpt7T-_AVWNv"
    },
    {
        "taints": [
            {
                "code": "ResultSet rs = preparedStatement.executeQuery();",
                "file": "jaalvarado2020_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            },
            {
                "code": "PreparedStatement preparedStatement = connection.prepareStatement(\"select id, hostname, ip, mac, status, description from servers  where status <> 'out of order' order by \" + column)) {",
                "file": "jaalvarado2020_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            },
            {
                "code": "PreparedStatement preparedStatement = connection.prepareStatement(\"select id, hostname, ip, mac, status, description from servers  where status <> 'out of order' order by \" + column)) {",
                "file": "jaalvarado2020_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            },
            {
                "code": "public List<Server> sort(@RequestParam String column) throws Exception {",
                "file": "jaalvarado2020_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            }
        ],
        "id": "AXh6xRnFOpt7T-_AVWOu"
    },
    {
        "taints": [
            {
                "code": "statement.executeUpdate(query);",
                "file": "jaalvarado2020_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "jaalvarado2020_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "jaalvarado2020_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String query) {",
                "file": "jaalvarado2020_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            }
        ],
        "id": "AXh6xRmeOpt7T-_AVWNt"
    },
    {
        "taints": [
            {
                "code": "statement.executeUpdate(query);",
                "file": "jaalvarado2020_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "jaalvarado2020_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "jaalvarado2020_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String query) {",
                "file": "jaalvarado2020_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            }
        ],
        "id": "AXh6xRmoOpt7T-_AVWOA"
    },
    {
        "taints": [
            {
                "code": "ResultSet resultSet = statement.executeQuery();",
                "file": "jaalvarado2020_WebGoat:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            },
            {
                "code": "PreparedStatement statement = connection.prepareStatement(\"select password from challenge_users where userid = '\" + username_login + \"' and password = '\" + password_login + \"'\");",
                "file": "jaalvarado2020_WebGoat:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            },
            {
                "code": "PreparedStatement statement = connection.prepareStatement(\"select password from challenge_users where userid = '\" + username_login + \"' and password = '\" + password_login + \"'\");",
                "file": "jaalvarado2020_WebGoat:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            },
            {
                "code": "public AttackResult login(@RequestParam String username_login, @RequestParam String password_login) throws Exception {",
                "file": "jaalvarado2020_WebGoat:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            }
        ],
        "id": "AXh6xRmCOpt7T-_AVWNB"
    },
    {
        "taints": [
            {
                "code": "ResultSet resultSet = statement.executeQuery(checkUserQuery);",
                "file": "jaalvarado2020_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"
            },
            {
                "code": "String checkUserQuery = \"select userid from sql_challenge_users where userid = '\" + username_reg + \"'\";",
                "file": "jaalvarado2020_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"
            },
            {
                "code": "public AttackResult registerNewUser(@RequestParam String username_reg, @RequestParam String email_reg, @RequestParam String password_reg) throws Exception {",
                "file": "jaalvarado2020_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"
            }
        ],
        "id": "AXh6xRmzOpt7T-_AVWOY"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "jaalvarado2020_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "jaalvarado2020_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "jaalvarado2020_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String query) {",
                "file": "jaalvarado2020_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            }
        ],
        "id": "AXh6xRmLOpt7T-_AVWNJ"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = query.executeQuery();",
                "file": "jaalvarado2020_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "PreparedStatement query = connection.prepareStatement(queryString, ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);",
                "file": "jaalvarado2020_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "String queryString = \"SELECT * From user_data WHERE Login_Count = ? and userid= \" + accountName;",
                "file": "jaalvarado2020_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String login_count, String accountName) {",
                "file": "jaalvarado2020_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "return injectableQuery(login_count, userid);",
                "file": "jaalvarado2020_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String userid, @RequestParam String login_count, HttpServletRequest request) throws IOException {",
                "file": "jaalvarado2020_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            }
        ],
        "id": "AXh6xRmQOpt7T-_AVWNV"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "jaalvarado2020_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "String query = \"SELECT * FROM access_log WHERE action LIKE '%\" + action + \"%'\";",
                "file": "jaalvarado2020_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "protected AttackResult injectableQueryAvailability(String action) {",
                "file": "jaalvarado2020_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "return injectableQueryAvailability(action_string);",
                "file": "jaalvarado2020_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String action_string) {",
                "file": "jaalvarado2020_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            }
        ],
        "id": "AXh6xRmaOpt7T-_AVWNp"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "jaalvarado2020_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "query = \"SELECT * FROM user_data WHERE first_name = 'John' and last_name = '\" + accountName + \"'\";",
                "file": "jaalvarado2020_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String accountName) {",
                "file": "jaalvarado2020_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "return injectableQuery(account + \" \" + operator + \" \" + injection);",
                "file": "jaalvarado2020_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String account, @RequestParam String operator, @RequestParam String injection) {",
                "file": "jaalvarado2020_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            }
        ],
        "id": "AXh6xRmrOpt7T-_AVWOD"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "jaalvarado2020_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "String query = \"SELECT * FROM employees WHERE last_name = '\" + name + \"' AND auth_tan = '\" + auth_tan + \"'\";",
                "file": "jaalvarado2020_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "protected AttackResult injectableQueryConfidentiality(String name, String auth_tan) {",
                "file": "jaalvarado2020_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "return injectableQueryConfidentiality(name, auth_tan);",
                "file": "jaalvarado2020_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String name, @RequestParam String auth_tan) {",
                "file": "jaalvarado2020_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            }
        ],
        "id": "AXh6xRmWOpt7T-_AVWNh"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "jaalvarado2020_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "String query = \"SELECT * FROM employees WHERE last_name = '\" + name + \"' AND auth_tan = '\" + auth_tan + \"'\";",
                "file": "jaalvarado2020_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "protected AttackResult injectableQueryIntegrity(String name, String auth_tan) {",
                "file": "jaalvarado2020_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "return injectableQueryIntegrity(name, auth_tan);",
                "file": "jaalvarado2020_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String name, @RequestParam String auth_tan) {",
                "file": "jaalvarado2020_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            }
        ],
        "id": "AXh6xRmkOpt7T-_AVWN9"
    },
    {
        "taints": [
            {
                "code": "statement.executeQuery(query);",
                "file": "clijos_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "clijos_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "clijos_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5.java"
            },
            {
                "code": "public AttackResult completed(String query) {",
                "file": "clijos_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5.java"
            },
            {
                "code": "@PostMapping(\"/SqlInjection/attack5\")",
                "file": "clijos_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5.java"
            }
        ],
        "id": "AXh0wVnz41hJ2HBR9_T7"
    },
    {
        "taints": [
            {
                "code": "statement.executeQuery(query);",
                "file": "Vicky805_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "Vicky805_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "Vicky805_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5.java"
            },
            {
                "code": "public AttackResult completed(String query) {",
                "file": "Vicky805_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5.java"
            },
            {
                "code": "@PostMapping(\"/SqlInjection/attack5\")",
                "file": "Vicky805_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5.java"
            }
        ],
        "id": "AXh01WGzghu_tM7ItYFn"
    },
    {
        "taints": [
            {
                "code": "statement.executeQuery(query);",
                "file": "rog-tfm_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "rog-tfm_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "rog-tfm_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5.java"
            },
            {
                "code": "public AttackResult completed(String query) {",
                "file": "rog-tfm_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5.java"
            },
            {
                "code": "@PostMapping(\"/SqlInjection/attack5\")",
                "file": "rog-tfm_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5.java"
            }
        ],
        "id": "AXh0361M5sSRNNJLKSHa"
    },
    {
        "taints": [
            {
                "code": "ResultSet rs = preparedStatement.executeQuery();",
                "file": "clijos_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            },
            {
                "code": "PreparedStatement preparedStatement = connection.prepareStatement(\"select id, hostname, ip, mac, status, description from servers  where status <> 'out of order' order by \" + column)) {",
                "file": "clijos_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            },
            {
                "code": "PreparedStatement preparedStatement = connection.prepareStatement(\"select id, hostname, ip, mac, status, description from servers  where status <> 'out of order' order by \" + column)) {",
                "file": "clijos_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            },
            {
                "code": "public List<Server> sort(@RequestParam String column) throws Exception {",
                "file": "clijos_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            }
        ],
        "id": "AXh0wVoX41hJ2HBR9_U6"
    },
    {
        "taints": [
            {
                "code": "ResultSet rs = preparedStatement.executeQuery();",
                "file": "Vicky805_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            },
            {
                "code": "PreparedStatement preparedStatement = connection.prepareStatement(\"select id, hostname, ip, mac, status, description from servers  where status <> 'out of order' order by \" + column)) {",
                "file": "Vicky805_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            },
            {
                "code": "PreparedStatement preparedStatement = connection.prepareStatement(\"select id, hostname, ip, mac, status, description from servers  where status <> 'out of order' order by \" + column)) {",
                "file": "Vicky805_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            },
            {
                "code": "public List<Server> sort(@RequestParam String column) throws Exception {",
                "file": "Vicky805_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            }
        ],
        "id": "AXh01WHTghu_tM7ItYGm"
    },
    {
        "taints": [
            {
                "code": "ResultSet rs = preparedStatement.executeQuery();",
                "file": "rog-tfm_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            },
            {
                "code": "PreparedStatement preparedStatement = connection.prepareStatement(\"select id, hostname, ip, mac, status, description from servers  where status <> 'out of order' order by \" + column)) {",
                "file": "rog-tfm_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            },
            {
                "code": "PreparedStatement preparedStatement = connection.prepareStatement(\"select id, hostname, ip, mac, status, description from servers  where status <> 'out of order' order by \" + column)) {",
                "file": "rog-tfm_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            },
            {
                "code": "public List<Server> sort(@RequestParam String column) throws Exception {",
                "file": "rog-tfm_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            }
        ],
        "id": "AXh036215sSRNNJLKSIZ"
    },
    {
        "taints": [
            {
                "code": "statement.executeUpdate(query);",
                "file": "clijos_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "clijos_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "clijos_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String query) {",
                "file": "clijos_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            }
        ],
        "id": "AXh0wVnw41hJ2HBR9_T5"
    },
    {
        "taints": [
            {
                "code": "statement.executeUpdate(query);",
                "file": "clijos_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "clijos_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "clijos_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String query) {",
                "file": "clijos_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            }
        ],
        "id": "AXh0wVn641hJ2HBR9_UM"
    },
    {
        "taints": [
            {
                "code": "statement.executeUpdate(query);",
                "file": "Vicky805_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "Vicky805_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "Vicky805_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String query) {",
                "file": "Vicky805_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            }
        ],
        "id": "AXh01WGxghu_tM7ItYFl"
    },
    {
        "taints": [
            {
                "code": "statement.executeUpdate(query);",
                "file": "Vicky805_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "Vicky805_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "Vicky805_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String query) {",
                "file": "Vicky805_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            }
        ],
        "id": "AXh01WG5ghu_tM7ItYF4"
    },
    {
        "taints": [
            {
                "code": "statement.executeUpdate(query);",
                "file": "rog-tfm_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "rog-tfm_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "rog-tfm_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String query) {",
                "file": "rog-tfm_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            }
        ],
        "id": "AXh0361C5sSRNNJLKSHY"
    },
    {
        "taints": [
            {
                "code": "statement.executeUpdate(query);",
                "file": "rog-tfm_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "rog-tfm_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "rog-tfm_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String query) {",
                "file": "rog-tfm_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            }
        ],
        "id": "AXh0361g5sSRNNJLKSHr"
    },
    {
        "taints": [
            {
                "code": "ResultSet resultSet = statement.executeQuery();",
                "file": "clijos_WebGoat:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            },
            {
                "code": "PreparedStatement statement = connection.prepareStatement(\"select password from challenge_users where userid = '\" + username_login + \"' and password = '\" + password_login + \"'\");",
                "file": "clijos_WebGoat:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            },
            {
                "code": "PreparedStatement statement = connection.prepareStatement(\"select password from challenge_users where userid = '\" + username_login + \"' and password = '\" + password_login + \"'\");",
                "file": "clijos_WebGoat:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            },
            {
                "code": "public AttackResult login(@RequestParam String username_login, @RequestParam String password_login) throws Exception {",
                "file": "clijos_WebGoat:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            }
        ],
        "id": "AXh0wVnR41hJ2HBR9_TN"
    },
    {
        "taints": [
            {
                "code": "ResultSet resultSet = statement.executeQuery(checkUserQuery);",
                "file": "clijos_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"
            },
            {
                "code": "String checkUserQuery = \"select userid from sql_challenge_users where userid = '\" + username_reg + \"'\";",
                "file": "clijos_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"
            },
            {
                "code": "public AttackResult registerNewUser(@RequestParam String username_reg, @RequestParam String email_reg, @RequestParam String password_reg) throws Exception {",
                "file": "clijos_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"
            }
        ],
        "id": "AXh0wVoG41hJ2HBR9_Uk"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "clijos_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "clijos_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "clijos_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String query) {",
                "file": "clijos_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            }
        ],
        "id": "AXh0wVnb41hJ2HBR9_TV"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = query.executeQuery();",
                "file": "clijos_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "PreparedStatement query = connection.prepareStatement(queryString, ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);",
                "file": "clijos_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "String queryString = \"SELECT * From user_data WHERE Login_Count = ? and userid= \" + accountName;",
                "file": "clijos_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String login_count, String accountName) {",
                "file": "clijos_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "return injectableQuery(login_count, userid);",
                "file": "clijos_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String userid, @RequestParam String login_count, HttpServletRequest request) throws IOException {",
                "file": "clijos_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            }
        ],
        "id": "AXh0wVnh41hJ2HBR9_Th"
    },
    {
        "taints": [
            {
                "code": "ResultSet resultSet = statement.executeQuery();",
                "file": "Vicky805_WebGoat:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            },
            {
                "code": "PreparedStatement statement = connection.prepareStatement(\"select password from challenge_users where userid = '\" + username_login + \"' and password = '\" + password_login + \"'\");",
                "file": "Vicky805_WebGoat:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            },
            {
                "code": "PreparedStatement statement = connection.prepareStatement(\"select password from challenge_users where userid = '\" + username_login + \"' and password = '\" + password_login + \"'\");",
                "file": "Vicky805_WebGoat:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            },
            {
                "code": "public AttackResult login(@RequestParam String username_login, @RequestParam String password_login) throws Exception {",
                "file": "Vicky805_WebGoat:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            }
        ],
        "id": "AXh01WGYghu_tM7ItYE5"
    },
    {
        "taints": [
            {
                "code": "ResultSet resultSet = statement.executeQuery(checkUserQuery);",
                "file": "Vicky805_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"
            },
            {
                "code": "String checkUserQuery = \"select userid from sql_challenge_users where userid = '\" + username_reg + \"'\";",
                "file": "Vicky805_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"
            },
            {
                "code": "public AttackResult registerNewUser(@RequestParam String username_reg, @RequestParam String email_reg, @RequestParam String password_reg) throws Exception {",
                "file": "Vicky805_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"
            }
        ],
        "id": "AXh01WHDghu_tM7ItYGQ"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "Vicky805_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "Vicky805_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "Vicky805_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String query) {",
                "file": "Vicky805_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            }
        ],
        "id": "AXh01WGgghu_tM7ItYFB"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = query.executeQuery();",
                "file": "Vicky805_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "PreparedStatement query = connection.prepareStatement(queryString, ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);",
                "file": "Vicky805_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "String queryString = \"SELECT * From user_data WHERE Login_Count = ? and userid= \" + accountName;",
                "file": "Vicky805_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String login_count, String accountName) {",
                "file": "Vicky805_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "return injectableQuery(login_count, userid);",
                "file": "Vicky805_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String userid, @RequestParam String login_count, HttpServletRequest request) throws IOException {",
                "file": "Vicky805_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            }
        ],
        "id": "AXh01WGkghu_tM7ItYFN"
    },
    {
        "taints": [
            {
                "code": "ResultSet resultSet = statement.executeQuery();",
                "file": "rog-tfm_WebGoat:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            },
            {
                "code": "PreparedStatement statement = connection.prepareStatement(\"select password from challenge_users where userid = '\" + username_login + \"' and password = '\" + password_login + \"'\");",
                "file": "rog-tfm_WebGoat:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            },
            {
                "code": "PreparedStatement statement = connection.prepareStatement(\"select password from challenge_users where userid = '\" + username_login + \"' and password = '\" + password_login + \"'\");",
                "file": "rog-tfm_WebGoat:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            },
            {
                "code": "public AttackResult login(@RequestParam String username_login, @RequestParam String password_login) throws Exception {",
                "file": "rog-tfm_WebGoat:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            }
        ],
        "id": "AXh036z05sSRNNJLKSGs"
    },
    {
        "taints": [
            {
                "code": "ResultSet resultSet = statement.executeQuery(checkUserQuery);",
                "file": "rog-tfm_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"
            },
            {
                "code": "String checkUserQuery = \"select userid from sql_challenge_users where userid = '\" + username_reg + \"'\";",
                "file": "rog-tfm_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"
            },
            {
                "code": "public AttackResult registerNewUser(@RequestParam String username_reg, @RequestParam String email_reg, @RequestParam String password_reg) throws Exception {",
                "file": "rog-tfm_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"
            }
        ],
        "id": "AXh0362A5sSRNNJLKSID"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "rog-tfm_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "rog-tfm_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "rog-tfm_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String query) {",
                "file": "rog-tfm_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            }
        ],
        "id": "AXh0360P5sSRNNJLKSG0"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = query.executeQuery();",
                "file": "rog-tfm_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "PreparedStatement query = connection.prepareStatement(queryString, ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);",
                "file": "rog-tfm_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "String queryString = \"SELECT * From user_data WHERE Login_Count = ? and userid= \" + accountName;",
                "file": "rog-tfm_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String login_count, String accountName) {",
                "file": "rog-tfm_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "return injectableQuery(login_count, userid);",
                "file": "rog-tfm_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String userid, @RequestParam String login_count, HttpServletRequest request) throws IOException {",
                "file": "rog-tfm_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            }
        ],
        "id": "AXh0360b5sSRNNJLKSHA"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "clijos_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "String query = \"SELECT * FROM access_log WHERE action LIKE '%\" + action + \"%'\";",
                "file": "clijos_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "protected AttackResult injectableQueryAvailability(String action) {",
                "file": "clijos_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "return injectableQueryAvailability(action_string);",
                "file": "clijos_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String action_string) {",
                "file": "clijos_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            }
        ],
        "id": "AXh0wVnr41hJ2HBR9_T1"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "clijos_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "query = \"SELECT * FROM user_data WHERE first_name = 'John' and last_name = '\" + accountName + \"'\";",
                "file": "clijos_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String accountName) {",
                "file": "clijos_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "return injectableQuery(account + \" \" + operator + \" \" + injection);",
                "file": "clijos_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String account, @RequestParam String operator, @RequestParam String injection) {",
                "file": "clijos_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            }
        ],
        "id": "AXh0wVn941hJ2HBR9_UP"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "clijos_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "String query = \"SELECT * FROM employees WHERE last_name = '\" + name + \"' AND auth_tan = '\" + auth_tan + \"'\";",
                "file": "clijos_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "protected AttackResult injectableQueryConfidentiality(String name, String auth_tan) {",
                "file": "clijos_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "return injectableQueryConfidentiality(name, auth_tan);",
                "file": "clijos_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String name, @RequestParam String auth_tan) {",
                "file": "clijos_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            }
        ],
        "id": "AXh0wVnl41hJ2HBR9_Tt"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "clijos_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "String query = \"SELECT * FROM employees WHERE last_name = '\" + name + \"' AND auth_tan = '\" + auth_tan + \"'\";",
                "file": "clijos_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "protected AttackResult injectableQueryIntegrity(String name, String auth_tan) {",
                "file": "clijos_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "return injectableQueryIntegrity(name, auth_tan);",
                "file": "clijos_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String name, @RequestParam String auth_tan) {",
                "file": "clijos_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            }
        ],
        "id": "AXh0wVn241hJ2HBR9_UJ"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "Vicky805_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "String query = \"SELECT * FROM access_log WHERE action LIKE '%\" + action + \"%'\";",
                "file": "Vicky805_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "protected AttackResult injectableQueryAvailability(String action) {",
                "file": "Vicky805_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "return injectableQueryAvailability(action_string);",
                "file": "Vicky805_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String action_string) {",
                "file": "Vicky805_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            }
        ],
        "id": "AXh01WGtghu_tM7ItYFh"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "Vicky805_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "query = \"SELECT * FROM user_data WHERE first_name = 'John' and last_name = '\" + accountName + \"'\";",
                "file": "Vicky805_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String accountName) {",
                "file": "Vicky805_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "return injectableQuery(account + \" \" + operator + \" \" + injection);",
                "file": "Vicky805_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String account, @RequestParam String operator, @RequestParam String injection) {",
                "file": "Vicky805_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            }
        ],
        "id": "AXh01WG8ghu_tM7ItYF7"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "Vicky805_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "String query = \"SELECT * FROM employees WHERE last_name = '\" + name + \"' AND auth_tan = '\" + auth_tan + \"'\";",
                "file": "Vicky805_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "protected AttackResult injectableQueryConfidentiality(String name, String auth_tan) {",
                "file": "Vicky805_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "return injectableQueryConfidentiality(name, auth_tan);",
                "file": "Vicky805_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String name, @RequestParam String auth_tan) {",
                "file": "Vicky805_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            }
        ],
        "id": "AXh01WGqghu_tM7ItYFZ"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "Vicky805_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "String query = \"SELECT * FROM employees WHERE last_name = '\" + name + \"' AND auth_tan = '\" + auth_tan + \"'\";",
                "file": "Vicky805_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "protected AttackResult injectableQueryIntegrity(String name, String auth_tan) {",
                "file": "Vicky805_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "return injectableQueryIntegrity(name, auth_tan);",
                "file": "Vicky805_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String name, @RequestParam String auth_tan) {",
                "file": "Vicky805_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            }
        ],
        "id": "AXh01WG2ghu_tM7ItYF1"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "rog-tfm_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "String query = \"SELECT * FROM access_log WHERE action LIKE '%\" + action + \"%'\";",
                "file": "rog-tfm_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "protected AttackResult injectableQueryAvailability(String action) {",
                "file": "rog-tfm_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "return injectableQueryAvailability(action_string);",
                "file": "rog-tfm_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String action_string) {",
                "file": "rog-tfm_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            }
        ],
        "id": "AXh036005sSRNNJLKSHU"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "rog-tfm_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "query = \"SELECT * FROM user_data WHERE first_name = 'John' and last_name = '\" + accountName + \"'\";",
                "file": "rog-tfm_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String accountName) {",
                "file": "rog-tfm_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "return injectableQuery(account + \" \" + operator + \" \" + injection);",
                "file": "rog-tfm_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String account, @RequestParam String operator, @RequestParam String injection) {",
                "file": "rog-tfm_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            }
        ],
        "id": "AXh0361q5sSRNNJLKSHu"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "rog-tfm_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "String query = \"SELECT * FROM employees WHERE last_name = '\" + name + \"' AND auth_tan = '\" + auth_tan + \"'\";",
                "file": "rog-tfm_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "protected AttackResult injectableQueryConfidentiality(String name, String auth_tan) {",
                "file": "rog-tfm_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "return injectableQueryConfidentiality(name, auth_tan);",
                "file": "rog-tfm_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String name, @RequestParam String auth_tan) {",
                "file": "rog-tfm_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            }
        ],
        "id": "AXh0360o5sSRNNJLKSHM"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "rog-tfm_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "String query = \"SELECT * FROM employees WHERE last_name = '\" + name + \"' AND auth_tan = '\" + auth_tan + \"'\";",
                "file": "rog-tfm_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "protected AttackResult injectableQueryIntegrity(String name, String auth_tan) {",
                "file": "rog-tfm_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "return injectableQueryIntegrity(name, auth_tan);",
                "file": "rog-tfm_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String name, @RequestParam String auth_tan) {",
                "file": "rog-tfm_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            }
        ],
        "id": "AXh0361W5sSRNNJLKSHo"
    },
    {
        "taints": [
            {
                "code": "return mysql.queryForList(sql, User.class);",
                "file": "Shi-Chao_coverity-sq-integration:src/main/java/com/cc11001100/sqlinject/demo/dao/UserDao.java"
            },
            {
                "code": "String sql = \"SELECT * FROM t_user WHERE username='\" + username + \"' and passwd='\" + passwd + \"'\";",
                "file": "Shi-Chao_coverity-sq-integration:src/main/java/com/cc11001100/sqlinject/demo/dao/UserDao.java"
            },
            {
                "code": "public List<User> find(String username, String passwd){",
                "file": "Shi-Chao_coverity-sq-integration:src/main/java/com/cc11001100/sqlinject/demo/dao/UserDao.java"
            },
            {
                "code": "return !userDao.find(username, passwd).isEmpty();",
                "file": "Shi-Chao_coverity-sq-integration:src/main/java/com/cc11001100/sqlinject/demo/service/UserService.java"
            },
            {
                "code": "public boolean login(String username, String passwd){",
                "file": "Shi-Chao_coverity-sq-integration:src/main/java/com/cc11001100/sqlinject/demo/service/UserService.java"
            },
            {
                "code": "return ResponseDto.successData(userService.login(username, passwd));",
                "file": "Shi-Chao_coverity-sq-integration:src/main/java/com/cc11001100/sqlinject/demo/controller/UserController.java"
            }
        ],
        "id": "AXIXpv1E6aeepeJBePn-"
    },
    {
        "taints": [
            {
                "code": "rs=stmt.executeQuery(\"select * from users where username='\"+request.getParameter(\"username\").trim()+\"' and secret='\"+request.getParameter(\"secret\")+\"'\");",
                "file": "44-JavaVulnerableLab-master-no-libs:target/JavaVulnerableLab/ForgotPassword.jsp"
            },
            {
                "code": "rs=stmt.executeQuery(\"select * from users where username='\"+request.getParameter(\"username\").trim()+\"' and secret='\"+request.getParameter(\"secret\")+\"'\");",
                "file": "44-JavaVulnerableLab-master-no-libs:target/JavaVulnerableLab/ForgotPassword.jsp"
            }
        ],
        "id": "AXhqMNk9sTkZwhnTVlyC"
    },
    {
        "taints": [
            {
                "code": "rs=stmt.executeQuery(\"select * from users where username='\"+user+\"' and password='\"+pass+\"' and privilege='admin'\");",
                "file": "44-JavaVulnerableLab-master-no-libs:target/JavaVulnerableLab/admin/adminlogin.jsp"
            },
            {
                "code": "String user=request.getParameter(\"username\");",
                "file": "44-JavaVulnerableLab-master-no-libs:target/JavaVulnerableLab/admin/adminlogin.jsp"
            }
        ],
        "id": "AXhqMNjjsTkZwhnTVlxr"
    },
    {
        "taints": [
            {
                "code": "stmt.executeUpdate(\"Delete from users where username='\"+user+\"'\");",
                "file": "44-JavaVulnerableLab-master-no-libs:target/JavaVulnerableLab/admin/manageusers.jsp"
            },
            {
                "code": "String user=request.getParameter(\"user\");",
                "file": "44-JavaVulnerableLab-master-no-libs:target/JavaVulnerableLab/admin/manageusers.jsp"
            }
        ],
        "id": "AXhqMNkDsTkZwhnTVlxz"
    },
    {
        "taints": [
            {
                "code": "rs=stmt.executeQuery(\"select * from UserMessages where msgid=\"+request.getParameter(\"msgid\"));",
                "file": "44-JavaVulnerableLab-master-no-libs:target/JavaVulnerableLab/vulnerability/DisplayMessage.jsp"
            }
        ],
        "id": "AXhqMNiosTkZwhnTVlxZ"
    },
    {
        "taints": [
            {
                "code": "stmt.executeUpdate(\"INSERT into posts(content,title,user) values ('\"+content+\"','\"+title+\"','\"+user+\"')\");",
                "file": "44-JavaVulnerableLab-master-no-libs:target/JavaVulnerableLab/vulnerability/forum.jsp"
            },
            {
                "code": "String title=request.getParameter(\"title\");",
                "file": "44-JavaVulnerableLab-master-no-libs:target/JavaVulnerableLab/vulnerability/forum.jsp"
            },
            {
                "code": "String content=request.getParameter(\"content\");",
                "file": "44-JavaVulnerableLab-master-no-libs:target/JavaVulnerableLab/vulnerability/forum.jsp"
            }
        ],
        "id": "AXhqMNh_sTkZwhnTVlxQ"
    },
    {
        "taints": [
            {
                "code": "rs=stmt.executeQuery(\"select * from posts where postid=\"+postid);",
                "file": "44-JavaVulnerableLab-master-no-libs:target/JavaVulnerableLab/vulnerability/forumposts.jsp"
            },
            {
                "code": "String postid=request.getParameter(\"postid\");",
                "file": "44-JavaVulnerableLab-master-no-libs:target/JavaVulnerableLab/vulnerability/forumposts.jsp"
            }
        ],
        "id": "AXhqMNiQsTkZwhnTVlxV"
    },
    {
        "taints": [
            {
                "code": "stmt.executeUpdate(\"Update users set email='\"+email+\"' where id=\"+id);",
                "file": "44-JavaVulnerableLab-master-no-libs:target/JavaVulnerableLab/vulnerability/idor/change-email.jsp"
            },
            {
                "code": "String email=request.getParameter(\"email\");",
                "file": "44-JavaVulnerableLab-master-no-libs:target/JavaVulnerableLab/vulnerability/idor/change-email.jsp"
            }
        ],
        "id": "AXhqMNhpsTkZwhnTVlxO"
    },
    {
        "taints": [
            {
                "code": "rs=stmt.executeQuery(\"select * from users where username='\"+request.getParameter(\"username\").trim()+\"' and secret='\"+request.getParameter(\"secret\")+\"'\");",
                "file": "44-JavaVulnerableLab-master-with-resolved-libs:target/JavaVulnerableLab/ForgotPassword.jsp"
            },
            {
                "code": "rs=stmt.executeQuery(\"select * from users where username='\"+request.getParameter(\"username\").trim()+\"' and secret='\"+request.getParameter(\"secret\")+\"'\");",
                "file": "44-JavaVulnerableLab-master-with-resolved-libs:target/JavaVulnerableLab/ForgotPassword.jsp"
            }
        ],
        "id": "AXhqMF1kbmonXrpMIIKH"
    },
    {
        "taints": [
            {
                "code": "rs=stmt.executeQuery(\"select * from users where username='\"+user+\"' and password='\"+pass+\"' and privilege='admin'\");",
                "file": "44-JavaVulnerableLab-master-with-resolved-libs:target/JavaVulnerableLab/admin/adminlogin.jsp"
            },
            {
                "code": "String user=request.getParameter(\"username\");",
                "file": "44-JavaVulnerableLab-master-with-resolved-libs:target/JavaVulnerableLab/admin/adminlogin.jsp"
            }
        ],
        "id": "AXhqMFzybmonXrpMIIJw"
    },
    {
        "taints": [
            {
                "code": "stmt.executeUpdate(\"Delete from users where username='\"+user+\"'\");",
                "file": "44-JavaVulnerableLab-master-with-resolved-libs:target/JavaVulnerableLab/admin/manageusers.jsp"
            },
            {
                "code": "String user=request.getParameter(\"user\");",
                "file": "44-JavaVulnerableLab-master-with-resolved-libs:target/JavaVulnerableLab/admin/manageusers.jsp"
            }
        ],
        "id": "AXhqMF0bbmonXrpMIIJ4"
    },
    {
        "taints": [
            {
                "code": "rs=stmt.executeQuery(\"select * from UserMessages where msgid=\"+request.getParameter(\"msgid\"));",
                "file": "44-JavaVulnerableLab-master-with-resolved-libs:target/JavaVulnerableLab/vulnerability/DisplayMessage.jsp"
            }
        ],
        "id": "AXhqMFyqbmonXrpMIIJe"
    },
    {
        "taints": [
            {
                "code": "stmt.executeUpdate(\"INSERT into posts(content,title,user) values ('\"+content+\"','\"+title+\"','\"+user+\"')\");",
                "file": "44-JavaVulnerableLab-master-with-resolved-libs:target/JavaVulnerableLab/vulnerability/forum.jsp"
            },
            {
                "code": "String title=request.getParameter(\"title\");",
                "file": "44-JavaVulnerableLab-master-with-resolved-libs:target/JavaVulnerableLab/vulnerability/forum.jsp"
            },
            {
                "code": "String content=request.getParameter(\"content\");",
                "file": "44-JavaVulnerableLab-master-with-resolved-libs:target/JavaVulnerableLab/vulnerability/forum.jsp"
            }
        ],
        "id": "AXhqMFx3bmonXrpMIIJV"
    },
    {
        "taints": [
            {
                "code": "rs=stmt.executeQuery(\"select * from posts where postid=\"+postid);",
                "file": "44-JavaVulnerableLab-master-with-resolved-libs:target/JavaVulnerableLab/vulnerability/forumposts.jsp"
            },
            {
                "code": "String postid=request.getParameter(\"postid\");",
                "file": "44-JavaVulnerableLab-master-with-resolved-libs:target/JavaVulnerableLab/vulnerability/forumposts.jsp"
            }
        ],
        "id": "AXhqMFyMbmonXrpMIIJa"
    },
    {
        "taints": [
            {
                "code": "stmt.executeUpdate(\"Update users set email='\"+email+\"' where id=\"+id);",
                "file": "44-JavaVulnerableLab-master-with-resolved-libs:target/JavaVulnerableLab/vulnerability/idor/change-email.jsp"
            },
            {
                "code": "String email=request.getParameter(\"email\");",
                "file": "44-JavaVulnerableLab-master-with-resolved-libs:target/JavaVulnerableLab/vulnerability/idor/change-email.jsp"
            }
        ],
        "id": "AXhqMFxcbmonXrpMIIJT"
    },
    {
        "taints": [
            {
                "code": "return stmt.executeQuery();",
                "file": "30-queryon-with-all-libs:qon-core/src/main/java/tbrugz/queryon/diff/DataDiffServlet.java"
            },
            {
                "code": "PreparedStatement stmt = conn.prepareStatement(sql);",
                "file": "30-queryon-with-all-libs:qon-core/src/main/java/tbrugz/queryon/diff/DataDiffServlet.java"
            },
            {
                "code": "ResultSet runQuery(Connection conn, String sql, List<Object> parameters, String modelId, String tableName) {",
                "file": "30-queryon-with-all-libs:qon-core/src/main/java/tbrugz/queryon/diff/DataDiffServlet.java"
            },
            {
                "code": "ResultSet rsTarget = runQuery(connTarget, sqlTarget, parameters, modelIdTarget, getQualifiedName(table));",
                "file": "30-queryon-with-all-libs:qon-core/src/main/java/tbrugz/queryon/diff/DataDiffServlet.java"
            },
            {
                "code": "void runDiff(Connection connSource, Connection connTarget, String sqlSource, String sqlTarget, List<Object> parameters, NamedDBObject table, List<String> keyCols,",
                "file": "30-queryon-with-all-libs:qon-core/src/main/java/tbrugz/queryon/diff/DataDiffServlet.java"
            },
            {
                "code": "runDiff(connSource, connTarget, sql, sql, null, table, keyCols, modelIdSource, modelIdTarget, ds, ddTypes, limit, writer);",
                "file": "30-queryon-with-all-libs:qon-core/src/main/java/tbrugz/queryon/diff/Diff2QServlet.java"
            },
            {
                "code": "void runDiff(Connection connSource, Connection connTarget, String sql, NamedDBObject table, List<String> keyCols,",
                "file": "30-queryon-with-all-libs:qon-core/src/main/java/tbrugz/queryon/diff/Diff2QServlet.java"
            },
            {
                "code": "runDiff(connSource, connTarget, sql, obj, keyCols, modelIdSource, modelIdTarget, ds, dmlTypes, limit, resp.getWriter());",
                "file": "30-queryon-with-all-libs:qon-core/src/main/java/tbrugz/queryon/diff/Diff2QServlet.java"
            },
            {
                "code": "String sql = sqlParam;",
                "file": "30-queryon-with-all-libs:qon-core/src/main/java/tbrugz/queryon/diff/Diff2QServlet.java"
            },
            {
                "code": "String sqlParam = req.getParameter(\"sql\");",
                "file": "30-queryon-with-all-libs:qon-core/src/main/java/tbrugz/queryon/diff/Diff2QServlet.java"
            }
        ],
        "id": "AXhp5omcZNCksNY617uW"
    },
    {
        "taints": [
            {
                "code": "rs=stmt.executeQuery(\"select * from users where email='\"+email+\"'\");",
                "file": "44-JavaVulnerableLab-master-with-cache-only:src/main/java/org/cysecurity/cspf/jvl/controller/EmailCheck.java"
            },
            {
                "code": "String email=request.getParameter(\"email\").trim();",
                "file": "44-JavaVulnerableLab-master-with-cache-only:src/main/java/org/cysecurity/cspf/jvl/controller/EmailCheck.java"
            },
            {
                "code": "String email=request.getParameter(\"email\").trim();",
                "file": "44-JavaVulnerableLab-master-with-cache-only:src/main/java/org/cysecurity/cspf/jvl/controller/EmailCheck.java"
            }
        ],
        "id": "AXhp1wgwcOPaCwJnTW0K"
    },
    {
        "taints": [
            {
                "code": "rs=stmt.executeQuery(\"select * from users where username='\"+user+\"' and password='\"+pass+\"'\");",
                "file": "44-JavaVulnerableLab-master-with-cache-only:src/main/java/org/cysecurity/cspf/jvl/controller/LoginValidator.java"
            },
            {
                "code": "String pass=request.getParameter(\"password\").trim();",
                "file": "44-JavaVulnerableLab-master-with-cache-only:src/main/java/org/cysecurity/cspf/jvl/controller/LoginValidator.java"
            },
            {
                "code": "String user=request.getParameter(\"username\").trim();",
                "file": "44-JavaVulnerableLab-master-with-cache-only:src/main/java/org/cysecurity/cspf/jvl/controller/LoginValidator.java"
            },
            {
                "code": "String user=request.getParameter(\"username\").trim();",
                "file": "44-JavaVulnerableLab-master-with-cache-only:src/main/java/org/cysecurity/cspf/jvl/controller/LoginValidator.java"
            }
        ],
        "id": "AXhp1wgycOPaCwJnTW0X"
    },
    {
        "taints": [
            {
                "code": "stmt.executeUpdate(\"INSERT into users(username, password, email, About,avatar,privilege,secretquestion,secret) values ('\"+user+\"','\"+pass+\"','\"+email+\"','\"+about+\"','default.jpg','user',1,'\"+secret+\"')\");",
                "file": "44-JavaVulnerableLab-master-with-cache-only:src/main/java/org/cysecurity/cspf/jvl/controller/Register.java"
            },
            {
                "code": "String about=request.getParameter(\"About\");",
                "file": "44-JavaVulnerableLab-master-with-cache-only:src/main/java/org/cysecurity/cspf/jvl/controller/Register.java"
            },
            {
                "code": "String email=request.getParameter(\"email\");",
                "file": "44-JavaVulnerableLab-master-with-cache-only:src/main/java/org/cysecurity/cspf/jvl/controller/Register.java"
            },
            {
                "code": "String pass=request.getParameter(\"password\");",
                "file": "44-JavaVulnerableLab-master-with-cache-only:src/main/java/org/cysecurity/cspf/jvl/controller/Register.java"
            },
            {
                "code": "String user=request.getParameter(\"username\");",
                "file": "44-JavaVulnerableLab-master-with-cache-only:src/main/java/org/cysecurity/cspf/jvl/controller/Register.java"
            }
        ],
        "id": "AXhp1wg9cOPaCwJnTW08"
    },
    {
        "taints": [
            {
                "code": "stmt.executeUpdate(\"INSERT into UserMessages(recipient, sender, subject, msg) values ('\"+user+\"','admin','Hi','Hi<br/> This is admin of this page. <br/> Welcome to Our Forum')\");",
                "file": "44-JavaVulnerableLab-master-with-cache-only:src/main/java/org/cysecurity/cspf/jvl/controller/Register.java"
            },
            {
                "code": "String user=request.getParameter(\"username\");",
                "file": "44-JavaVulnerableLab-master-with-cache-only:src/main/java/org/cysecurity/cspf/jvl/controller/Register.java"
            }
        ],
        "id": "AXhp1wg9cOPaCwJnTW09"
    },
    {
        "taints": [
            {
                "code": "rs=stmt.executeQuery(\"select * from users where username='\"+user+\"'\");",
                "file": "44-JavaVulnerableLab-master-with-cache-only:src/main/java/org/cysecurity/cspf/jvl/controller/UsernameCheck.java"
            },
            {
                "code": "String user=request.getParameter(\"username\").trim();",
                "file": "44-JavaVulnerableLab-master-with-cache-only:src/main/java/org/cysecurity/cspf/jvl/controller/UsernameCheck.java"
            },
            {
                "code": "String user=request.getParameter(\"username\").trim();",
                "file": "44-JavaVulnerableLab-master-with-cache-only:src/main/java/org/cysecurity/cspf/jvl/controller/UsernameCheck.java"
            }
        ],
        "id": "AXhp1wg4cOPaCwJnTW0n"
    },
    {
        "taints": [
            {
                "code": "rs=stmt.executeQuery(\"select * from users where username='\"+request.getParameter(\"username\").trim()+\"' and secret='\"+request.getParameter(\"secret\")+\"'\");",
                "file": "44-JavaVulnerableLab-master-with-cache-only:target/JavaVulnerableLab/ForgotPassword.jsp"
            },
            {
                "code": "rs=stmt.executeQuery(\"select * from users where username='\"+request.getParameter(\"username\").trim()+\"' and secret='\"+request.getParameter(\"secret\")+\"'\");",
                "file": "44-JavaVulnerableLab-master-with-cache-only:target/JavaVulnerableLab/ForgotPassword.jsp"
            }
        ],
        "id": "AXhp1wjucOPaCwJnTW3Q"
    },
    {
        "taints": [
            {
                "code": "rs=stmt.executeQuery(\"select * from users where username='\"+user+\"' and password='\"+pass+\"' and privilege='admin'\");",
                "file": "44-JavaVulnerableLab-master-with-cache-only:target/JavaVulnerableLab/admin/adminlogin.jsp"
            },
            {
                "code": "String user=request.getParameter(\"username\");",
                "file": "44-JavaVulnerableLab-master-with-cache-only:target/JavaVulnerableLab/admin/adminlogin.jsp"
            }
        ],
        "id": "AXhp1wjUcOPaCwJnTW25"
    },
    {
        "taints": [
            {
                "code": "stmt.executeUpdate(\"Delete from users where username='\"+user+\"'\");",
                "file": "44-JavaVulnerableLab-master-with-cache-only:target/JavaVulnerableLab/admin/manageusers.jsp"
            },
            {
                "code": "String user=request.getParameter(\"user\");",
                "file": "44-JavaVulnerableLab-master-with-cache-only:target/JavaVulnerableLab/admin/manageusers.jsp"
            }
        ],
        "id": "AXhp1wjdcOPaCwJnTW3B"
    },
    {
        "taints": [
            {
                "code": "rs=stmt.executeQuery(\"select * from UserMessages where msgid=\"+request.getParameter(\"msgid\"));",
                "file": "44-JavaVulnerableLab-master-with-cache-only:target/JavaVulnerableLab/vulnerability/DisplayMessage.jsp"
            }
        ],
        "id": "AXhp1wjDcOPaCwJnTW2n"
    },
    {
        "taints": [
            {
                "code": "stmt.executeUpdate(\"INSERT into posts(content,title,user) values ('\"+content+\"','\"+title+\"','\"+user+\"')\");",
                "file": "44-JavaVulnerableLab-master-with-cache-only:target/JavaVulnerableLab/vulnerability/forum.jsp"
            },
            {
                "code": "String title=request.getParameter(\"title\");",
                "file": "44-JavaVulnerableLab-master-with-cache-only:target/JavaVulnerableLab/vulnerability/forum.jsp"
            },
            {
                "code": "String content=request.getParameter(\"content\");",
                "file": "44-JavaVulnerableLab-master-with-cache-only:target/JavaVulnerableLab/vulnerability/forum.jsp"
            }
        ],
        "id": "AXhp1wi3cOPaCwJnTW2e"
    },
    {
        "taints": [
            {
                "code": "rs=stmt.executeQuery(\"select * from posts where postid=\"+postid);",
                "file": "44-JavaVulnerableLab-master-with-cache-only:target/JavaVulnerableLab/vulnerability/forumposts.jsp"
            },
            {
                "code": "String postid=request.getParameter(\"postid\");",
                "file": "44-JavaVulnerableLab-master-with-cache-only:target/JavaVulnerableLab/vulnerability/forumposts.jsp"
            }
        ],
        "id": "AXhp1wi8cOPaCwJnTW2j"
    },
    {
        "taints": [
            {
                "code": "stmt.executeUpdate(\"Update users set email='\"+email+\"' where id=\"+id);",
                "file": "44-JavaVulnerableLab-master-with-cache-only:target/JavaVulnerableLab/vulnerability/idor/change-email.jsp"
            },
            {
                "code": "String email=request.getParameter(\"email\");",
                "file": "44-JavaVulnerableLab-master-with-cache-only:target/JavaVulnerableLab/vulnerability/idor/change-email.jsp"
            }
        ],
        "id": "AXhp1wixcOPaCwJnTW2c"
    },
    {
        "taints": [
            {
                "code": "rs=stmt.executeQuery(\"select * from users where email='\"+email+\"'\");",
                "file": "44-JavaVulnerableLab-master-with-cache-and-preparser-libs:src/main/java/org/cysecurity/cspf/jvl/controller/EmailCheck.java"
            },
            {
                "code": "String email=request.getParameter(\"email\").trim();",
                "file": "44-JavaVulnerableLab-master-with-cache-and-preparser-libs:src/main/java/org/cysecurity/cspf/jvl/controller/EmailCheck.java"
            },
            {
                "code": "String email=request.getParameter(\"email\").trim();",
                "file": "44-JavaVulnerableLab-master-with-cache-and-preparser-libs:src/main/java/org/cysecurity/cspf/jvl/controller/EmailCheck.java"
            }
        ],
        "id": "AXhp1o42CyKpa4NmtTLX"
    },
    {
        "taints": [
            {
                "code": "rs=stmt.executeQuery(\"select * from users where username='\"+user+\"' and password='\"+pass+\"'\");",
                "file": "44-JavaVulnerableLab-master-with-cache-and-preparser-libs:src/main/java/org/cysecurity/cspf/jvl/controller/LoginValidator.java"
            },
            {
                "code": "String pass=request.getParameter(\"password\").trim();",
                "file": "44-JavaVulnerableLab-master-with-cache-and-preparser-libs:src/main/java/org/cysecurity/cspf/jvl/controller/LoginValidator.java"
            },
            {
                "code": "String user=request.getParameter(\"username\").trim();",
                "file": "44-JavaVulnerableLab-master-with-cache-and-preparser-libs:src/main/java/org/cysecurity/cspf/jvl/controller/LoginValidator.java"
            },
            {
                "code": "String user=request.getParameter(\"username\").trim();",
                "file": "44-JavaVulnerableLab-master-with-cache-and-preparser-libs:src/main/java/org/cysecurity/cspf/jvl/controller/LoginValidator.java"
            }
        ],
        "id": "AXhp1o4_CyKpa4NmtTLk"
    },
    {
        "taints": [
            {
                "code": "stmt.executeUpdate(\"INSERT into users(username, password, email, About,avatar,privilege,secretquestion,secret) values ('\"+user+\"','\"+pass+\"','\"+email+\"','\"+about+\"','default.jpg','user',1,'\"+secret+\"')\");",
                "file": "44-JavaVulnerableLab-master-with-cache-and-preparser-libs:src/main/java/org/cysecurity/cspf/jvl/controller/Register.java"
            },
            {
                "code": "String about=request.getParameter(\"About\");",
                "file": "44-JavaVulnerableLab-master-with-cache-and-preparser-libs:src/main/java/org/cysecurity/cspf/jvl/controller/Register.java"
            },
            {
                "code": "String email=request.getParameter(\"email\");",
                "file": "44-JavaVulnerableLab-master-with-cache-and-preparser-libs:src/main/java/org/cysecurity/cspf/jvl/controller/Register.java"
            },
            {
                "code": "String pass=request.getParameter(\"password\");",
                "file": "44-JavaVulnerableLab-master-with-cache-and-preparser-libs:src/main/java/org/cysecurity/cspf/jvl/controller/Register.java"
            },
            {
                "code": "String user=request.getParameter(\"username\");",
                "file": "44-JavaVulnerableLab-master-with-cache-and-preparser-libs:src/main/java/org/cysecurity/cspf/jvl/controller/Register.java"
            }
        ],
        "id": "AXhp1o5jCyKpa4NmtTMH"
    },
    {
        "taints": [
            {
                "code": "stmt.executeUpdate(\"INSERT into UserMessages(recipient, sender, subject, msg) values ('\"+user+\"','admin','Hi','Hi<br/> This is admin of this page. <br/> Welcome to Our Forum')\");",
                "file": "44-JavaVulnerableLab-master-with-cache-and-preparser-libs:src/main/java/org/cysecurity/cspf/jvl/controller/Register.java"
            },
            {
                "code": "String user=request.getParameter(\"username\");",
                "file": "44-JavaVulnerableLab-master-with-cache-and-preparser-libs:src/main/java/org/cysecurity/cspf/jvl/controller/Register.java"
            }
        ],
        "id": "AXhp1o5jCyKpa4NmtTMI"
    },
    {
        "taints": [
            {
                "code": "rs=stmt.executeQuery(\"select * from users where username='\"+user+\"'\");",
                "file": "44-JavaVulnerableLab-master-with-cache-and-preparser-libs:src/main/java/org/cysecurity/cspf/jvl/controller/UsernameCheck.java"
            },
            {
                "code": "String user=request.getParameter(\"username\").trim();",
                "file": "44-JavaVulnerableLab-master-with-cache-and-preparser-libs:src/main/java/org/cysecurity/cspf/jvl/controller/UsernameCheck.java"
            },
            {
                "code": "String user=request.getParameter(\"username\").trim();",
                "file": "44-JavaVulnerableLab-master-with-cache-and-preparser-libs:src/main/java/org/cysecurity/cspf/jvl/controller/UsernameCheck.java"
            }
        ],
        "id": "AXhp1o5RCyKpa4NmtTLy"
    },
    {
        "taints": [
            {
                "code": "rs=stmt.executeQuery(\"select * from users where username='\"+request.getParameter(\"username\").trim()+\"' and secret='\"+request.getParameter(\"secret\")+\"'\");",
                "file": "44-JavaVulnerableLab-master-with-cache-and-preparser-libs:target/JavaVulnerableLab/ForgotPassword.jsp"
            },
            {
                "code": "rs=stmt.executeQuery(\"select * from users where username='\"+request.getParameter(\"username\").trim()+\"' and secret='\"+request.getParameter(\"secret\")+\"'\");",
                "file": "44-JavaVulnerableLab-master-with-cache-and-preparser-libs:target/JavaVulnerableLab/ForgotPassword.jsp"
            }
        ],
        "id": "AXhp1pDdCyKpa4NmtTOb"
    },
    {
        "taints": [
            {
                "code": "rs=stmt.executeQuery(\"select * from users where username='\"+user+\"' and password='\"+pass+\"' and privilege='admin'\");",
                "file": "44-JavaVulnerableLab-master-with-cache-and-preparser-libs:target/JavaVulnerableLab/admin/adminlogin.jsp"
            },
            {
                "code": "String user=request.getParameter(\"username\");",
                "file": "44-JavaVulnerableLab-master-with-cache-and-preparser-libs:target/JavaVulnerableLab/admin/adminlogin.jsp"
            }
        ],
        "id": "AXhp1pB-CyKpa4NmtTOE"
    },
    {
        "taints": [
            {
                "code": "stmt.executeUpdate(\"Delete from users where username='\"+user+\"'\");",
                "file": "44-JavaVulnerableLab-master-with-cache-and-preparser-libs:target/JavaVulnerableLab/admin/manageusers.jsp"
            },
            {
                "code": "String user=request.getParameter(\"user\");",
                "file": "44-JavaVulnerableLab-master-with-cache-and-preparser-libs:target/JavaVulnerableLab/admin/manageusers.jsp"
            }
        ],
        "id": "AXhp1pCgCyKpa4NmtTOM"
    },
    {
        "taints": [
            {
                "code": "rs=stmt.executeQuery(\"select * from UserMessages where msgid=\"+request.getParameter(\"msgid\"));",
                "file": "44-JavaVulnerableLab-master-with-cache-and-preparser-libs:target/JavaVulnerableLab/vulnerability/DisplayMessage.jsp"
            }
        ],
        "id": "AXhp1pBBCyKpa4NmtTNy"
    },
    {
        "taints": [
            {
                "code": "stmt.executeUpdate(\"INSERT into posts(content,title,user) values ('\"+content+\"','\"+title+\"','\"+user+\"')\");",
                "file": "44-JavaVulnerableLab-master-with-cache-and-preparser-libs:target/JavaVulnerableLab/vulnerability/forum.jsp"
            },
            {
                "code": "String title=request.getParameter(\"title\");",
                "file": "44-JavaVulnerableLab-master-with-cache-and-preparser-libs:target/JavaVulnerableLab/vulnerability/forum.jsp"
            },
            {
                "code": "String content=request.getParameter(\"content\");",
                "file": "44-JavaVulnerableLab-master-with-cache-and-preparser-libs:target/JavaVulnerableLab/vulnerability/forum.jsp"
            }
        ],
        "id": "AXhp1pAVCyKpa4NmtTNp"
    },
    {
        "taints": [
            {
                "code": "rs=stmt.executeQuery(\"select * from posts where postid=\"+postid);",
                "file": "44-JavaVulnerableLab-master-with-cache-and-preparser-libs:target/JavaVulnerableLab/vulnerability/forumposts.jsp"
            },
            {
                "code": "String postid=request.getParameter(\"postid\");",
                "file": "44-JavaVulnerableLab-master-with-cache-and-preparser-libs:target/JavaVulnerableLab/vulnerability/forumposts.jsp"
            }
        ],
        "id": "AXhp1pAnCyKpa4NmtTNu"
    },
    {
        "taints": [
            {
                "code": "stmt.executeUpdate(\"Update users set email='\"+email+\"' where id=\"+id);",
                "file": "44-JavaVulnerableLab-master-with-cache-and-preparser-libs:target/JavaVulnerableLab/vulnerability/idor/change-email.jsp"
            },
            {
                "code": "String email=request.getParameter(\"email\");",
                "file": "44-JavaVulnerableLab-master-with-cache-and-preparser-libs:target/JavaVulnerableLab/vulnerability/idor/change-email.jsp"
            }
        ],
        "id": "AXhp1o_-CyKpa4NmtTNn"
    },
    {
        "taints": [
            {
                "code": "rs=stmt.executeQuery(\"select * from users where email='\"+email+\"'\");",
                "file": "44-JavaVulnerableLab-master-with-all-libs:src/main/java/org/cysecurity/cspf/jvl/controller/EmailCheck.java"
            },
            {
                "code": "String email=request.getParameter(\"email\").trim();",
                "file": "44-JavaVulnerableLab-master-with-all-libs:src/main/java/org/cysecurity/cspf/jvl/controller/EmailCheck.java"
            },
            {
                "code": "String email=request.getParameter(\"email\").trim();",
                "file": "44-JavaVulnerableLab-master-with-all-libs:src/main/java/org/cysecurity/cspf/jvl/controller/EmailCheck.java"
            }
        ],
        "id": "AXhp1glkNcL24qq32kEJ"
    },
    {
        "taints": [
            {
                "code": "rs=stmt.executeQuery(\"select * from users where username='\"+user+\"' and password='\"+pass+\"'\");",
                "file": "44-JavaVulnerableLab-master-with-all-libs:src/main/java/org/cysecurity/cspf/jvl/controller/LoginValidator.java"
            },
            {
                "code": "String pass=request.getParameter(\"password\").trim();",
                "file": "44-JavaVulnerableLab-master-with-all-libs:src/main/java/org/cysecurity/cspf/jvl/controller/LoginValidator.java"
            },
            {
                "code": "String user=request.getParameter(\"username\").trim();",
                "file": "44-JavaVulnerableLab-master-with-all-libs:src/main/java/org/cysecurity/cspf/jvl/controller/LoginValidator.java"
            },
            {
                "code": "String user=request.getParameter(\"username\").trim();",
                "file": "44-JavaVulnerableLab-master-with-all-libs:src/main/java/org/cysecurity/cspf/jvl/controller/LoginValidator.java"
            }
        ],
        "id": "AXhp1glmNcL24qq32kEW"
    },
    {
        "taints": [
            {
                "code": "stmt.executeUpdate(\"INSERT into users(username, password, email, About,avatar,privilege,secretquestion,secret) values ('\"+user+\"','\"+pass+\"','\"+email+\"','\"+about+\"','default.jpg','user',1,'\"+secret+\"')\");",
                "file": "44-JavaVulnerableLab-master-with-all-libs:src/main/java/org/cysecurity/cspf/jvl/controller/Register.java"
            },
            {
                "code": "String about=request.getParameter(\"About\");",
                "file": "44-JavaVulnerableLab-master-with-all-libs:src/main/java/org/cysecurity/cspf/jvl/controller/Register.java"
            },
            {
                "code": "String email=request.getParameter(\"email\");",
                "file": "44-JavaVulnerableLab-master-with-all-libs:src/main/java/org/cysecurity/cspf/jvl/controller/Register.java"
            },
            {
                "code": "String pass=request.getParameter(\"password\");",
                "file": "44-JavaVulnerableLab-master-with-all-libs:src/main/java/org/cysecurity/cspf/jvl/controller/Register.java"
            },
            {
                "code": "String user=request.getParameter(\"username\");",
                "file": "44-JavaVulnerableLab-master-with-all-libs:src/main/java/org/cysecurity/cspf/jvl/controller/Register.java"
            }
        ],
        "id": "AXhp1glwNcL24qq32kE5"
    },
    {
        "taints": [
            {
                "code": "stmt.executeUpdate(\"INSERT into UserMessages(recipient, sender, subject, msg) values ('\"+user+\"','admin','Hi','Hi<br/> This is admin of this page. <br/> Welcome to Our Forum')\");",
                "file": "44-JavaVulnerableLab-master-with-all-libs:src/main/java/org/cysecurity/cspf/jvl/controller/Register.java"
            },
            {
                "code": "String user=request.getParameter(\"username\");",
                "file": "44-JavaVulnerableLab-master-with-all-libs:src/main/java/org/cysecurity/cspf/jvl/controller/Register.java"
            }
        ],
        "id": "AXhp1glwNcL24qq32kE6"
    },
    {
        "taints": [
            {
                "code": "rs=stmt.executeQuery(\"select * from users where username='\"+user+\"'\");",
                "file": "44-JavaVulnerableLab-master-with-all-libs:src/main/java/org/cysecurity/cspf/jvl/controller/UsernameCheck.java"
            },
            {
                "code": "String user=request.getParameter(\"username\").trim();",
                "file": "44-JavaVulnerableLab-master-with-all-libs:src/main/java/org/cysecurity/cspf/jvl/controller/UsernameCheck.java"
            },
            {
                "code": "String user=request.getParameter(\"username\").trim();",
                "file": "44-JavaVulnerableLab-master-with-all-libs:src/main/java/org/cysecurity/cspf/jvl/controller/UsernameCheck.java"
            }
        ],
        "id": "AXhp1glrNcL24qq32kEk"
    },
    {
        "taints": [
            {
                "code": "rs=stmt.executeQuery(\"select * from users where username='\"+request.getParameter(\"username\").trim()+\"' and secret='\"+request.getParameter(\"secret\")+\"'\");",
                "file": "44-JavaVulnerableLab-master-with-all-libs:target/JavaVulnerableLab/ForgotPassword.jsp"
            },
            {
                "code": "rs=stmt.executeQuery(\"select * from users where username='\"+request.getParameter(\"username\").trim()+\"' and secret='\"+request.getParameter(\"secret\")+\"'\");",
                "file": "44-JavaVulnerableLab-master-with-all-libs:target/JavaVulnerableLab/ForgotPassword.jsp"
            }
        ],
        "id": "AXhp1goYNcL24qq32kHN"
    },
    {
        "taints": [
            {
                "code": "rs=stmt.executeQuery(\"select * from users where username='\"+user+\"' and password='\"+pass+\"' and privilege='admin'\");",
                "file": "44-JavaVulnerableLab-master-with-all-libs:target/JavaVulnerableLab/admin/adminlogin.jsp"
            },
            {
                "code": "String user=request.getParameter(\"username\");",
                "file": "44-JavaVulnerableLab-master-with-all-libs:target/JavaVulnerableLab/admin/adminlogin.jsp"
            }
        ],
        "id": "AXhp1gn_NcL24qq32kG2"
    },
    {
        "taints": [
            {
                "code": "stmt.executeUpdate(\"Delete from users where username='\"+user+\"'\");",
                "file": "44-JavaVulnerableLab-master-with-all-libs:target/JavaVulnerableLab/admin/manageusers.jsp"
            },
            {
                "code": "String user=request.getParameter(\"user\");",
                "file": "44-JavaVulnerableLab-master-with-all-libs:target/JavaVulnerableLab/admin/manageusers.jsp"
            }
        ],
        "id": "AXhp1goINcL24qq32kG-"
    },
    {
        "taints": [
            {
                "code": "rs=stmt.executeQuery(\"select * from UserMessages where msgid=\"+request.getParameter(\"msgid\"));",
                "file": "44-JavaVulnerableLab-master-with-all-libs:target/JavaVulnerableLab/vulnerability/DisplayMessage.jsp"
            }
        ],
        "id": "AXhp1gnwNcL24qq32kGk"
    },
    {
        "taints": [
            {
                "code": "stmt.executeUpdate(\"INSERT into posts(content,title,user) values ('\"+content+\"','\"+title+\"','\"+user+\"')\");",
                "file": "44-JavaVulnerableLab-master-with-all-libs:target/JavaVulnerableLab/vulnerability/forum.jsp"
            },
            {
                "code": "String title=request.getParameter(\"title\");",
                "file": "44-JavaVulnerableLab-master-with-all-libs:target/JavaVulnerableLab/vulnerability/forum.jsp"
            },
            {
                "code": "String content=request.getParameter(\"content\");",
                "file": "44-JavaVulnerableLab-master-with-all-libs:target/JavaVulnerableLab/vulnerability/forum.jsp"
            }
        ],
        "id": "AXhp1gnlNcL24qq32kGb"
    },
    {
        "taints": [
            {
                "code": "rs=stmt.executeQuery(\"select * from posts where postid=\"+postid);",
                "file": "44-JavaVulnerableLab-master-with-all-libs:target/JavaVulnerableLab/vulnerability/forumposts.jsp"
            },
            {
                "code": "String postid=request.getParameter(\"postid\");",
                "file": "44-JavaVulnerableLab-master-with-all-libs:target/JavaVulnerableLab/vulnerability/forumposts.jsp"
            }
        ],
        "id": "AXhp1gnpNcL24qq32kGg"
    },
    {
        "taints": [
            {
                "code": "stmt.executeUpdate(\"Update users set email='\"+email+\"' where id=\"+id);",
                "file": "44-JavaVulnerableLab-master-with-all-libs:target/JavaVulnerableLab/vulnerability/idor/change-email.jsp"
            },
            {
                "code": "String email=request.getParameter(\"email\");",
                "file": "44-JavaVulnerableLab-master-with-all-libs:target/JavaVulnerableLab/vulnerability/idor/change-email.jsp"
            }
        ],
        "id": "AXhp1gnfNcL24qq32kGZ"
    },
    {
        "taints": [
            {
                "code": "Query q = session.createQuery(\"from Client c where c.email=\\\"\"+\n(p_s_email)+\"\\\" and c.motDePasse=\\\"\"+p_s_mdp+\"\\\"\");",
                "file": "20-projet-semaine-bloquee-master-with-cache-and-preparser-libs:src/main/java/miage/bd/SeConnecter.java"
            },
            {
                "code": "public static boolean verifierConnexion(String p_s_email, String p_s_mdp)",
                "file": "20-projet-semaine-bloquee-master-with-cache-and-preparser-libs:src/main/java/miage/bd/SeConnecter.java"
            },
            {
                "code": "p_b_result = SeConnecter.verifierConnexion(p_s_email, p_s_mdp);",
                "file": "20-projet-semaine-bloquee-master-with-cache-and-preparser-libs:src/main/java/miage/ctrl/CtrlConnexion.java"
            },
            {
                "code": "String p_s_email = (String)request.getParameter(\"txtEmail\");",
                "file": "20-projet-semaine-bloquee-master-with-cache-and-preparser-libs:src/main/java/miage/ctrl/CtrlConnexion.java"
            }
        ],
        "id": "AXhpnyzksTkZwhnTRyoK"
    },
    {
        "taints": [
            {
                "code": "Query q = session.createQuery(\"from Preparateur p where p.emailPrepa=\\\"\"+\n(p_s_email)+\"\\\" and p.motDePassePrepa=\\\"\"+p_s_mdp+\"\\\"\");",
                "file": "20-projet-semaine-bloquee-master-with-cache-and-preparser-libs:src/main/java/miage/bd/SeConnecter.java"
            },
            {
                "code": "public static boolean verifierConnexionPrepa(String p_s_email, String p_s_mdp)",
                "file": "20-projet-semaine-bloquee-master-with-cache-and-preparser-libs:src/main/java/miage/bd/SeConnecter.java"
            },
            {
                "code": "p_b_result = SeConnecter.verifierConnexionPrepa(p_s_email, p_s_mdp);",
                "file": "20-projet-semaine-bloquee-master-with-cache-and-preparser-libs:src/main/java/miage/ctrl/CtrlConnexionPrepa.java"
            },
            {
                "code": "String p_s_email = (String)request.getParameter(\"txtEmail\");",
                "file": "20-projet-semaine-bloquee-master-with-cache-and-preparser-libs:src/main/java/miage/ctrl/CtrlConnexionPrepa.java"
            }
        ],
        "id": "AXhpnyzksTkZwhnTRyoI"
    },
    {
        "taints": [
            {
                "code": "Query q = session.createQuery(\"from Client c where c.email='\"+\n(p_s_email)+\"' and c.motDePasse='\"+p_s_mdp+\"'\");",
                "file": "20-projet-semaine-bloquee-master-with-cache-and-preparser-libs:src/main/java/miage/bd/SeConnecter.java"
            },
            {
                "code": "public static Client recupClient(String p_s_email, String p_s_mdp)",
                "file": "20-projet-semaine-bloquee-master-with-cache-and-preparser-libs:src/main/java/miage/bd/SeConnecter.java"
            },
            {
                "code": "Client p_c_client=SeConnecter.recupClient(p_s_email, p_s_mdp);",
                "file": "20-projet-semaine-bloquee-master-with-cache-and-preparser-libs:src/main/java/miage/ctrl/CtrlConnexion.java"
            },
            {
                "code": "String p_s_email = (String)request.getParameter(\"txtEmail\");",
                "file": "20-projet-semaine-bloquee-master-with-cache-and-preparser-libs:src/main/java/miage/ctrl/CtrlConnexion.java"
            }
        ],
        "id": "AXhpnyzksTkZwhnTRyoL"
    },
    {
        "taints": [
            {
                "code": "Query q = session.createQuery(\"from Preparateur p where p.emailPrepa='\"+\n(p_s_email)+\"' and p.motDePassePrepa='\"+p_s_mdp+\"'\");",
                "file": "20-projet-semaine-bloquee-master-with-cache-and-preparser-libs:src/main/java/miage/bd/SeConnecter.java"
            },
            {
                "code": "public static Preparateur recupPreparateur(String p_s_email, String p_s_mdp)",
                "file": "20-projet-semaine-bloquee-master-with-cache-and-preparser-libs:src/main/java/miage/bd/SeConnecter.java"
            },
            {
                "code": "Preparateur p_o_preparateur=SeConnecter.recupPreparateur(p_s_email, p_s_mdp);",
                "file": "20-projet-semaine-bloquee-master-with-cache-and-preparser-libs:src/main/java/miage/ctrl/CtrlConnexionPrepa.java"
            },
            {
                "code": "String p_s_email = (String)request.getParameter(\"txtEmail\");",
                "file": "20-projet-semaine-bloquee-master-with-cache-and-preparser-libs:src/main/java/miage/ctrl/CtrlConnexionPrepa.java"
            }
        ],
        "id": "AXhpnyzksTkZwhnTRyoJ"
    },
    {
        "taints": [
            {
                "code": "Query q = session.createQuery(\"from Client c where c.email=\\\"\"+\n(p_s_email)+\"\\\" and c.motDePasse=\\\"\"+p_s_mdp+\"\\\"\");",
                "file": "20-projet-semaine-bloquee-master-with-all-libs:src/main/java/miage/bd/SeConnecter.java"
            },
            {
                "code": "public static boolean verifierConnexion(String p_s_email, String p_s_mdp)",
                "file": "20-projet-semaine-bloquee-master-with-all-libs:src/main/java/miage/bd/SeConnecter.java"
            },
            {
                "code": "p_b_result = SeConnecter.verifierConnexion(p_s_email, p_s_mdp);",
                "file": "20-projet-semaine-bloquee-master-with-all-libs:src/main/java/miage/ctrl/CtrlConnexion.java"
            },
            {
                "code": "String p_s_email = (String)request.getParameter(\"txtEmail\");",
                "file": "20-projet-semaine-bloquee-master-with-all-libs:src/main/java/miage/ctrl/CtrlConnexion.java"
            }
        ],
        "id": "AXhpnojk7xE2JdP_fDqC"
    },
    {
        "taints": [
            {
                "code": "Query q = session.createQuery(\"from Preparateur p where p.emailPrepa=\\\"\"+\n(p_s_email)+\"\\\" and p.motDePassePrepa=\\\"\"+p_s_mdp+\"\\\"\");",
                "file": "20-projet-semaine-bloquee-master-with-all-libs:src/main/java/miage/bd/SeConnecter.java"
            },
            {
                "code": "public static boolean verifierConnexionPrepa(String p_s_email, String p_s_mdp)",
                "file": "20-projet-semaine-bloquee-master-with-all-libs:src/main/java/miage/bd/SeConnecter.java"
            },
            {
                "code": "p_b_result = SeConnecter.verifierConnexionPrepa(p_s_email, p_s_mdp);",
                "file": "20-projet-semaine-bloquee-master-with-all-libs:src/main/java/miage/ctrl/CtrlConnexionPrepa.java"
            },
            {
                "code": "String p_s_email = (String)request.getParameter(\"txtEmail\");",
                "file": "20-projet-semaine-bloquee-master-with-all-libs:src/main/java/miage/ctrl/CtrlConnexionPrepa.java"
            }
        ],
        "id": "AXhpnojk7xE2JdP_fDqE"
    },
    {
        "taints": [
            {
                "code": "Query q = session.createQuery(\"from Client c where c.email='\"+\n(p_s_email)+\"' and c.motDePasse='\"+p_s_mdp+\"'\");",
                "file": "20-projet-semaine-bloquee-master-with-all-libs:src/main/java/miage/bd/SeConnecter.java"
            },
            {
                "code": "public static Client recupClient(String p_s_email, String p_s_mdp)",
                "file": "20-projet-semaine-bloquee-master-with-all-libs:src/main/java/miage/bd/SeConnecter.java"
            },
            {
                "code": "Client p_c_client=SeConnecter.recupClient(p_s_email, p_s_mdp);",
                "file": "20-projet-semaine-bloquee-master-with-all-libs:src/main/java/miage/ctrl/CtrlConnexion.java"
            },
            {
                "code": "String p_s_email = (String)request.getParameter(\"txtEmail\");",
                "file": "20-projet-semaine-bloquee-master-with-all-libs:src/main/java/miage/ctrl/CtrlConnexion.java"
            }
        ],
        "id": "AXhpnojk7xE2JdP_fDqD"
    },
    {
        "taints": [
            {
                "code": "Query q = session.createQuery(\"from Preparateur p where p.emailPrepa='\"+\n(p_s_email)+\"' and p.motDePassePrepa='\"+p_s_mdp+\"'\");",
                "file": "20-projet-semaine-bloquee-master-with-all-libs:src/main/java/miage/bd/SeConnecter.java"
            },
            {
                "code": "public static Preparateur recupPreparateur(String p_s_email, String p_s_mdp)",
                "file": "20-projet-semaine-bloquee-master-with-all-libs:src/main/java/miage/bd/SeConnecter.java"
            },
            {
                "code": "Preparateur p_o_preparateur=SeConnecter.recupPreparateur(p_s_email, p_s_mdp);",
                "file": "20-projet-semaine-bloquee-master-with-all-libs:src/main/java/miage/ctrl/CtrlConnexionPrepa.java"
            },
            {
                "code": "String p_s_email = (String)request.getParameter(\"txtEmail\");",
                "file": "20-projet-semaine-bloquee-master-with-all-libs:src/main/java/miage/ctrl/CtrlConnexionPrepa.java"
            }
        ],
        "id": "AXhpnojk7xE2JdP_fDqF"
    },
    {
        "taints": [
            {
                "code": "ResultSet resultSet = statement.executeQuery();",
                "file": "46-WebGoat-develop-master-with-cache-only:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            },
            {
                "code": "PreparedStatement statement = connection.prepareStatement(\"select password from challenge_users where userid = '\" + username_login + \"' and password = '\" + password_login + \"'\");",
                "file": "46-WebGoat-develop-master-with-cache-only:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            },
            {
                "code": "PreparedStatement statement = connection.prepareStatement(\"select password from challenge_users where userid = '\" + username_login + \"' and password = '\" + password_login + \"'\");",
                "file": "46-WebGoat-develop-master-with-cache-only:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            },
            {
                "code": "public AttackResult login(@RequestParam String username_login, @RequestParam String password_login) throws Exception {",
                "file": "46-WebGoat-develop-master-with-cache-only:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            }
        ],
        "id": "AXhpY8vgbmonXrpMDRc0"
    },
    {
        "taints": [
            {
                "code": "ResultSet resultSet = statement.executeQuery(checkUserQuery);",
                "file": "46-WebGoat-develop-master-with-cache-only:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"
            },
            {
                "code": "String checkUserQuery = \"select userid from sql_challenge_users where userid = '\" + username_reg + \"'\";",
                "file": "46-WebGoat-develop-master-with-cache-only:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"
            },
            {
                "code": "public AttackResult registerNewUser(@RequestParam String username_reg, @RequestParam String email_reg, @RequestParam String password_reg) throws Exception {",
                "file": "46-WebGoat-develop-master-with-cache-only:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"
            }
        ],
        "id": "AXhpY8ZVbmonXrpMDRRk"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "46-WebGoat-develop-master-with-cache-only:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "String query = \"SELECT * FROM access_log WHERE action LIKE '%\" + action + \"%'\";",
                "file": "46-WebGoat-develop-master-with-cache-only:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "protected AttackResult injectableQueryAvailability(String action) {",
                "file": "46-WebGoat-develop-master-with-cache-only:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "return injectableQueryAvailability(action_string);",
                "file": "46-WebGoat-develop-master-with-cache-only:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String action_string) {",
                "file": "46-WebGoat-develop-master-with-cache-only:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            }
        ],
        "id": "AXhpY8Z0bmonXrpMDRR6"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "46-WebGoat-develop-master-with-cache-only:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "46-WebGoat-develop-master-with-cache-only:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "46-WebGoat-develop-master-with-cache-only:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String query) {",
                "file": "46-WebGoat-develop-master-with-cache-only:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            }
        ],
        "id": "AXhpY8a_bmonXrpMDRSi"
    },
    {
        "taints": [
            {
                "code": "statement.executeUpdate(query);",
                "file": "46-WebGoat-develop-master-with-cache-only:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "46-WebGoat-develop-master-with-cache-only:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "46-WebGoat-develop-master-with-cache-only:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String query) {",
                "file": "46-WebGoat-develop-master-with-cache-only:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            }
        ],
        "id": "AXhpY8arbmonXrpMDRSe"
    },
    {
        "taints": [
            {
                "code": "statement.executeUpdate(query);",
                "file": "46-WebGoat-develop-master-with-cache-only:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "46-WebGoat-develop-master-with-cache-only:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "46-WebGoat-develop-master-with-cache-only:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String query) {",
                "file": "46-WebGoat-develop-master-with-cache-only:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            }
        ],
        "id": "AXhpY8aBbmonXrpMDRR9"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "46-WebGoat-develop-master-with-cache-only:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "query = \"SELECT * FROM user_data WHERE first_name = 'John' and last_name = '\" + accountName + \"'\";",
                "file": "46-WebGoat-develop-master-with-cache-only:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String accountName) {",
                "file": "46-WebGoat-develop-master-with-cache-only:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "return injectableQuery(account + \" \" + operator + \" \" + injection);",
                "file": "46-WebGoat-develop-master-with-cache-only:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String account, @RequestParam String operator, @RequestParam String injection) {",
                "file": "46-WebGoat-develop-master-with-cache-only:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            }
        ],
        "id": "AXhpY8agbmonXrpMDRSa"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = query.executeQuery();",
                "file": "46-WebGoat-develop-master-with-cache-only:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "PreparedStatement query = connection.prepareStatement(queryString, ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);",
                "file": "46-WebGoat-develop-master-with-cache-only:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "String queryString = \"SELECT * From user_data WHERE Login_Count = ? and userid= \" + accountName;",
                "file": "46-WebGoat-develop-master-with-cache-only:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String login_count, String accountName) {",
                "file": "46-WebGoat-develop-master-with-cache-only:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "return injectableQuery(login_count, userid);",
                "file": "46-WebGoat-develop-master-with-cache-only:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String userid, @RequestParam String login_count, HttpServletRequest request) throws IOException {",
                "file": "46-WebGoat-develop-master-with-cache-only:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            }
        ],
        "id": "AXhpY8bJbmonXrpMDRSu"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "46-WebGoat-develop-master-with-cache-only:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "String query = \"SELECT * FROM employees WHERE last_name = '\" + name + \"' AND auth_tan = '\" + auth_tan + \"'\";",
                "file": "46-WebGoat-develop-master-with-cache-only:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "protected AttackResult injectableQueryConfidentiality(String name, String auth_tan) {",
                "file": "46-WebGoat-develop-master-with-cache-only:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "return injectableQueryConfidentiality(name, auth_tan);",
                "file": "46-WebGoat-develop-master-with-cache-only:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String name, @RequestParam String auth_tan) {",
                "file": "46-WebGoat-develop-master-with-cache-only:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            }
        ],
        "id": "AXhpY8aMbmonXrpMDRSJ"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "46-WebGoat-develop-master-with-cache-only:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "String query = \"SELECT * FROM employees WHERE last_name = '\" + name + \"' AND auth_tan = '\" + auth_tan + \"'\";",
                "file": "46-WebGoat-develop-master-with-cache-only:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "protected AttackResult injectableQueryIntegrity(String name, String auth_tan) {",
                "file": "46-WebGoat-develop-master-with-cache-only:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "return injectableQueryIntegrity(name, auth_tan);",
                "file": "46-WebGoat-develop-master-with-cache-only:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String name, @RequestParam String auth_tan) {",
                "file": "46-WebGoat-develop-master-with-cache-only:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            }
        ],
        "id": "AXhpY8aWbmonXrpMDRSX"
    },
    {
        "taints": [
            {
                "code": "ResultSet rs = preparedStatement.executeQuery();",
                "file": "46-WebGoat-develop-master-with-cache-only:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            },
            {
                "code": "PreparedStatement preparedStatement = connection.prepareStatement(\"select id, hostname, ip, mac, status, description from servers  where status <> 'out of order' order by \" + column)) {",
                "file": "46-WebGoat-develop-master-with-cache-only:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            },
            {
                "code": "PreparedStatement preparedStatement = connection.prepareStatement(\"select id, hostname, ip, mac, status, description from servers  where status <> 'out of order' order by \" + column)) {",
                "file": "46-WebGoat-develop-master-with-cache-only:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            },
            {
                "code": "public List<Server> sort(@RequestParam String column) throws Exception {",
                "file": "46-WebGoat-develop-master-with-cache-only:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            }
        ],
        "id": "AXhpY8YdbmonXrpMDRQ8"
    },
    {
        "taints": [
            {
                "code": "ResultSet resultSet = statement.executeQuery();",
                "file": "46-WebGoat-develop-master-with-cache-and-preparser-libs:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            },
            {
                "code": "PreparedStatement statement = connection.prepareStatement(\"select password from challenge_users where userid = '\" + username_login + \"' and password = '\" + password_login + \"'\");",
                "file": "46-WebGoat-develop-master-with-cache-and-preparser-libs:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            },
            {
                "code": "PreparedStatement statement = connection.prepareStatement(\"select password from challenge_users where userid = '\" + username_login + \"' and password = '\" + password_login + \"'\");",
                "file": "46-WebGoat-develop-master-with-cache-and-preparser-libs:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            },
            {
                "code": "public AttackResult login(@RequestParam String username_login, @RequestParam String password_login) throws Exception {",
                "file": "46-WebGoat-develop-master-with-cache-and-preparser-libs:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            }
        ],
        "id": "AXhpYlmSsTkZwhnTQIfB"
    },
    {
        "taints": [
            {
                "code": "ResultSet resultSet = statement.executeQuery(checkUserQuery);",
                "file": "46-WebGoat-develop-master-with-cache-and-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"
            },
            {
                "code": "String checkUserQuery = \"select userid from sql_challenge_users where userid = '\" + username_reg + \"'\";",
                "file": "46-WebGoat-develop-master-with-cache-and-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"
            },
            {
                "code": "public AttackResult registerNewUser(@RequestParam String username_reg, @RequestParam String email_reg, @RequestParam String password_reg) throws Exception {",
                "file": "46-WebGoat-develop-master-with-cache-and-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"
            }
        ],
        "id": "AXhpYlTysTkZwhnTQITu"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "46-WebGoat-develop-master-with-cache-and-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "String query = \"SELECT * FROM access_log WHERE action LIKE '%\" + action + \"%'\";",
                "file": "46-WebGoat-develop-master-with-cache-and-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "protected AttackResult injectableQueryAvailability(String action) {",
                "file": "46-WebGoat-develop-master-with-cache-and-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "return injectableQueryAvailability(action_string);",
                "file": "46-WebGoat-develop-master-with-cache-and-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String action_string) {",
                "file": "46-WebGoat-develop-master-with-cache-and-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            }
        ],
        "id": "AXhpYlUMsTkZwhnTQIUE"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "46-WebGoat-develop-master-with-cache-and-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "46-WebGoat-develop-master-with-cache-and-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "46-WebGoat-develop-master-with-cache-and-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String query) {",
                "file": "46-WebGoat-develop-master-with-cache-and-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            }
        ],
        "id": "AXhpYlVLsTkZwhnTQIUs"
    },
    {
        "taints": [
            {
                "code": "statement.executeUpdate(query);",
                "file": "46-WebGoat-develop-master-with-cache-and-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "46-WebGoat-develop-master-with-cache-and-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "46-WebGoat-develop-master-with-cache-and-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String query) {",
                "file": "46-WebGoat-develop-master-with-cache-and-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            }
        ],
        "id": "AXhpYlU6sTkZwhnTQIUo"
    },
    {
        "taints": [
            {
                "code": "statement.executeUpdate(query);",
                "file": "46-WebGoat-develop-master-with-cache-and-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "46-WebGoat-develop-master-with-cache-and-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "46-WebGoat-develop-master-with-cache-and-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String query) {",
                "file": "46-WebGoat-develop-master-with-cache-and-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            }
        ],
        "id": "AXhpYlUXsTkZwhnTQIUH"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "46-WebGoat-develop-master-with-cache-and-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "query = \"SELECT * FROM user_data WHERE first_name = 'John' and last_name = '\" + accountName + \"'\";",
                "file": "46-WebGoat-develop-master-with-cache-and-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String accountName) {",
                "file": "46-WebGoat-develop-master-with-cache-and-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "return injectableQuery(account + \" \" + operator + \" \" + injection);",
                "file": "46-WebGoat-develop-master-with-cache-and-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String account, @RequestParam String operator, @RequestParam String injection) {",
                "file": "46-WebGoat-develop-master-with-cache-and-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            }
        ],
        "id": "AXhpYlUxsTkZwhnTQIUk"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = query.executeQuery();",
                "file": "46-WebGoat-develop-master-with-cache-and-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "PreparedStatement query = connection.prepareStatement(queryString, ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);",
                "file": "46-WebGoat-develop-master-with-cache-and-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "String queryString = \"SELECT * From user_data WHERE Login_Count = ? and userid= \" + accountName;",
                "file": "46-WebGoat-develop-master-with-cache-and-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String login_count, String accountName) {",
                "file": "46-WebGoat-develop-master-with-cache-and-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "return injectableQuery(login_count, userid);",
                "file": "46-WebGoat-develop-master-with-cache-and-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String userid, @RequestParam String login_count, HttpServletRequest request) throws IOException {",
                "file": "46-WebGoat-develop-master-with-cache-and-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            }
        ],
        "id": "AXhpYlVTsTkZwhnTQIU4"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "46-WebGoat-develop-master-with-cache-and-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "String query = \"SELECT * FROM employees WHERE last_name = '\" + name + \"' AND auth_tan = '\" + auth_tan + \"'\";",
                "file": "46-WebGoat-develop-master-with-cache-and-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "protected AttackResult injectableQueryConfidentiality(String name, String auth_tan) {",
                "file": "46-WebGoat-develop-master-with-cache-and-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "return injectableQueryConfidentiality(name, auth_tan);",
                "file": "46-WebGoat-develop-master-with-cache-and-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String name, @RequestParam String auth_tan) {",
                "file": "46-WebGoat-develop-master-with-cache-and-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            }
        ],
        "id": "AXhpYlUgsTkZwhnTQIUT"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "46-WebGoat-develop-master-with-cache-and-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "String query = \"SELECT * FROM employees WHERE last_name = '\" + name + \"' AND auth_tan = '\" + auth_tan + \"'\";",
                "file": "46-WebGoat-develop-master-with-cache-and-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "protected AttackResult injectableQueryIntegrity(String name, String auth_tan) {",
                "file": "46-WebGoat-develop-master-with-cache-and-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "return injectableQueryIntegrity(name, auth_tan);",
                "file": "46-WebGoat-develop-master-with-cache-and-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String name, @RequestParam String auth_tan) {",
                "file": "46-WebGoat-develop-master-with-cache-and-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            }
        ],
        "id": "AXhpYlUosTkZwhnTQIUh"
    },
    {
        "taints": [
            {
                "code": "ResultSet rs = preparedStatement.executeQuery();",
                "file": "46-WebGoat-develop-master-with-cache-and-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            },
            {
                "code": "PreparedStatement preparedStatement = connection.prepareStatement(\"select id, hostname, ip, mac, status, description from servers  where status <> 'out of order' order by \" + column)) {",
                "file": "46-WebGoat-develop-master-with-cache-and-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            },
            {
                "code": "PreparedStatement preparedStatement = connection.prepareStatement(\"select id, hostname, ip, mac, status, description from servers  where status <> 'out of order' order by \" + column)) {",
                "file": "46-WebGoat-develop-master-with-cache-and-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            },
            {
                "code": "public List<Server> sort(@RequestParam String column) throws Exception {",
                "file": "46-WebGoat-develop-master-with-cache-and-preparser-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            }
        ],
        "id": "AXhpYlTEsTkZwhnTQITD"
    },
    {
        "taints": [
            {
                "code": "ResultSet resultSet = statement.executeQuery();",
                "file": "46-WebGoat-develop-master-with-all-libs:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            },
            {
                "code": "PreparedStatement statement = connection.prepareStatement(\"select password from challenge_users where userid = '\" + username_login + \"' and password = '\" + password_login + \"'\");",
                "file": "46-WebGoat-develop-master-with-all-libs:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            },
            {
                "code": "PreparedStatement statement = connection.prepareStatement(\"select password from challenge_users where userid = '\" + username_login + \"' and password = '\" + password_login + \"'\");",
                "file": "46-WebGoat-develop-master-with-all-libs:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            },
            {
                "code": "public AttackResult login(@RequestParam String username_login, @RequestParam String password_login) throws Exception {",
                "file": "46-WebGoat-develop-master-with-all-libs:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            }
        ],
        "id": "AXhpYSWB7xE2JdP_de69"
    },
    {
        "taints": [
            {
                "code": "ResultSet resultSet = statement.executeQuery(checkUserQuery);",
                "file": "46-WebGoat-develop-master-with-all-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"
            },
            {
                "code": "String checkUserQuery = \"select userid from sql_challenge_users where userid = '\" + username_reg + \"'\";",
                "file": "46-WebGoat-develop-master-with-all-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"
            },
            {
                "code": "public AttackResult registerNewUser(@RequestParam String username_reg, @RequestParam String email_reg, @RequestParam String password_reg) throws Exception {",
                "file": "46-WebGoat-develop-master-with-all-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"
            }
        ],
        "id": "AXhpYSEB7xE2JdP_dewB"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "46-WebGoat-develop-master-with-all-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "String query = \"SELECT * FROM access_log WHERE action LIKE '%\" + action + \"%'\";",
                "file": "46-WebGoat-develop-master-with-all-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "protected AttackResult injectableQueryAvailability(String action) {",
                "file": "46-WebGoat-develop-master-with-all-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "return injectableQueryAvailability(action_string);",
                "file": "46-WebGoat-develop-master-with-all-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String action_string) {",
                "file": "46-WebGoat-develop-master-with-all-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            }
        ],
        "id": "AXhpYSEa7xE2JdP_dewX"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "46-WebGoat-develop-master-with-all-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "46-WebGoat-develop-master-with-all-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "46-WebGoat-develop-master-with-all-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String query) {",
                "file": "46-WebGoat-develop-master-with-all-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            }
        ],
        "id": "AXhpYSFX7xE2JdP_dew_"
    },
    {
        "taints": [
            {
                "code": "statement.executeUpdate(query);",
                "file": "46-WebGoat-develop-master-with-all-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "46-WebGoat-develop-master-with-all-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "46-WebGoat-develop-master-with-all-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String query) {",
                "file": "46-WebGoat-develop-master-with-all-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            }
        ],
        "id": "AXhpYSFG7xE2JdP_dew7"
    },
    {
        "taints": [
            {
                "code": "statement.executeUpdate(query);",
                "file": "46-WebGoat-develop-master-with-all-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "46-WebGoat-develop-master-with-all-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "46-WebGoat-develop-master-with-all-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String query) {",
                "file": "46-WebGoat-develop-master-with-all-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            }
        ],
        "id": "AXhpYSEl7xE2JdP_dewa"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "46-WebGoat-develop-master-with-all-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "query = \"SELECT * FROM user_data WHERE first_name = 'John' and last_name = '\" + accountName + \"'\";",
                "file": "46-WebGoat-develop-master-with-all-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String accountName) {",
                "file": "46-WebGoat-develop-master-with-all-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "return injectableQuery(account + \" \" + operator + \" \" + injection);",
                "file": "46-WebGoat-develop-master-with-all-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String account, @RequestParam String operator, @RequestParam String injection) {",
                "file": "46-WebGoat-develop-master-with-all-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            }
        ],
        "id": "AXhpYSE-7xE2JdP_dew3"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = query.executeQuery();",
                "file": "46-WebGoat-develop-master-with-all-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "PreparedStatement query = connection.prepareStatement(queryString, ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);",
                "file": "46-WebGoat-develop-master-with-all-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "String queryString = \"SELECT * From user_data WHERE Login_Count = ? and userid= \" + accountName;",
                "file": "46-WebGoat-develop-master-with-all-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String login_count, String accountName) {",
                "file": "46-WebGoat-develop-master-with-all-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "return injectableQuery(login_count, userid);",
                "file": "46-WebGoat-develop-master-with-all-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String userid, @RequestParam String login_count, HttpServletRequest request) throws IOException {",
                "file": "46-WebGoat-develop-master-with-all-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            }
        ],
        "id": "AXhpYSFf7xE2JdP_dexL"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "46-WebGoat-develop-master-with-all-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "String query = \"SELECT * FROM employees WHERE last_name = '\" + name + \"' AND auth_tan = '\" + auth_tan + \"'\";",
                "file": "46-WebGoat-develop-master-with-all-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "protected AttackResult injectableQueryConfidentiality(String name, String auth_tan) {",
                "file": "46-WebGoat-develop-master-with-all-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "return injectableQueryConfidentiality(name, auth_tan);",
                "file": "46-WebGoat-develop-master-with-all-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String name, @RequestParam String auth_tan) {",
                "file": "46-WebGoat-develop-master-with-all-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            }
        ],
        "id": "AXhpYSEt7xE2JdP_dewm"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "46-WebGoat-develop-master-with-all-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "String query = \"SELECT * FROM employees WHERE last_name = '\" + name + \"' AND auth_tan = '\" + auth_tan + \"'\";",
                "file": "46-WebGoat-develop-master-with-all-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "protected AttackResult injectableQueryIntegrity(String name, String auth_tan) {",
                "file": "46-WebGoat-develop-master-with-all-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "return injectableQueryIntegrity(name, auth_tan);",
                "file": "46-WebGoat-develop-master-with-all-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String name, @RequestParam String auth_tan) {",
                "file": "46-WebGoat-develop-master-with-all-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            }
        ],
        "id": "AXhpYSE27xE2JdP_dew0"
    },
    {
        "taints": [
            {
                "code": "ResultSet rs = preparedStatement.executeQuery();",
                "file": "46-WebGoat-develop-master-with-all-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            },
            {
                "code": "PreparedStatement preparedStatement = connection.prepareStatement(\"select id, hostname, ip, mac, status, description from servers  where status <> 'out of order' order by \" + column)) {",
                "file": "46-WebGoat-develop-master-with-all-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            },
            {
                "code": "PreparedStatement preparedStatement = connection.prepareStatement(\"select id, hostname, ip, mac, status, description from servers  where status <> 'out of order' order by \" + column)) {",
                "file": "46-WebGoat-develop-master-with-all-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            },
            {
                "code": "public List<Server> sort(@RequestParam String column) throws Exception {",
                "file": "46-WebGoat-develop-master-with-all-libs:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            }
        ],
        "id": "AXhpYSDU7xE2JdP_devW"
    },
    {
        "taints": [
            {
                "code": "statement.executeQuery(query);",
                "file": "sanjaykmruk_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "sanjaykmruk_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "sanjaykmruk_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5.java"
            },
            {
                "code": "public AttackResult completed(String query) {",
                "file": "sanjaykmruk_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5.java"
            },
            {
                "code": "@PostMapping(\"/SqlInjection/attack5\")",
                "file": "sanjaykmruk_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5.java"
            }
        ],
        "id": "AXhlQ-XjSdlIifHFRPh_"
    },
    {
        "taints": [
            {
                "code": "ResultSet rs = preparedStatement.executeQuery();",
                "file": "sanjaykmruk_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            },
            {
                "code": "PreparedStatement preparedStatement = connection.prepareStatement(\"select id, hostname, ip, mac, status, description from servers  where status <> 'out of order' order by \" + column)) {",
                "file": "sanjaykmruk_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            },
            {
                "code": "PreparedStatement preparedStatement = connection.prepareStatement(\"select id, hostname, ip, mac, status, description from servers  where status <> 'out of order' order by \" + column)) {",
                "file": "sanjaykmruk_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            },
            {
                "code": "public List<Server> sort(@RequestParam String column) throws Exception {",
                "file": "sanjaykmruk_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/mitigation/Servers.java"
            }
        ],
        "id": "AXhlQ-YASdlIifHFRPi-"
    },
    {
        "taints": [
            {
                "code": "statement.executeUpdate(query);",
                "file": "sanjaykmruk_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "sanjaykmruk_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "sanjaykmruk_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String query) {",
                "file": "sanjaykmruk_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson3.java"
            }
        ],
        "id": "AXhlQ-XgSdlIifHFRPh9"
    },
    {
        "taints": [
            {
                "code": "statement.executeUpdate(query);",
                "file": "sanjaykmruk_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "sanjaykmruk_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "sanjaykmruk_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String query) {",
                "file": "sanjaykmruk_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson4.java"
            }
        ],
        "id": "AXhlQ-XoSdlIifHFRPiQ"
    },
    {
        "taints": [
            {
                "code": "ResultSet resultSet = statement.executeQuery();",
                "file": "sanjaykmruk_WebGoat:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            },
            {
                "code": "PreparedStatement statement = connection.prepareStatement(\"select password from challenge_users where userid = '\" + username_login + \"' and password = '\" + password_login + \"'\");",
                "file": "sanjaykmruk_WebGoat:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            },
            {
                "code": "PreparedStatement statement = connection.prepareStatement(\"select password from challenge_users where userid = '\" + username_login + \"' and password = '\" + password_login + \"'\");",
                "file": "sanjaykmruk_WebGoat:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            },
            {
                "code": "public AttackResult login(@RequestParam String username_login, @RequestParam String password_login) throws Exception {",
                "file": "sanjaykmruk_WebGoat:webgoat-lessons/challenge/src/main/java/org/owasp/webgoat/challenges/challenge5/Assignment5.java"
            }
        ],
        "id": "AXhlQ-W-SdlIifHFRPhR"
    },
    {
        "taints": [
            {
                "code": "ResultSet resultSet = statement.executeQuery(checkUserQuery);",
                "file": "sanjaykmruk_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"
            },
            {
                "code": "String checkUserQuery = \"select userid from sql_challenge_users where userid = '\" + username_reg + \"'\";",
                "file": "sanjaykmruk_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"
            },
            {
                "code": "public AttackResult registerNewUser(@RequestParam String username_reg, @RequestParam String email_reg, @RequestParam String password_reg) throws Exception {",
                "file": "sanjaykmruk_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/advanced/SqlInjectionChallenge.java"
            }
        ],
        "id": "AXhlQ-XySdlIifHFRPio"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "sanjaykmruk_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String query) {",
                "file": "sanjaykmruk_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            },
            {
                "code": "return injectableQuery(query);",
                "file": "sanjaykmruk_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String query) {",
                "file": "sanjaykmruk_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson2.java"
            }
        ],
        "id": "AXhlQ-XFSdlIifHFRPhZ"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = query.executeQuery();",
                "file": "sanjaykmruk_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "PreparedStatement query = connection.prepareStatement(queryString, ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);",
                "file": "sanjaykmruk_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "String queryString = \"SELECT * From user_data WHERE Login_Count = ? and userid= \" + accountName;",
                "file": "sanjaykmruk_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String login_count, String accountName) {",
                "file": "sanjaykmruk_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "return injectableQuery(login_count, userid);",
                "file": "sanjaykmruk_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String userid, @RequestParam String login_count, HttpServletRequest request) throws IOException {",
                "file": "sanjaykmruk_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5b.java"
            }
        ],
        "id": "AXhlQ-XJSdlIifHFRPhl"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "sanjaykmruk_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "String query = \"SELECT * FROM access_log WHERE action LIKE '%\" + action + \"%'\";",
                "file": "sanjaykmruk_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "protected AttackResult injectableQueryAvailability(String action) {",
                "file": "sanjaykmruk_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "return injectableQueryAvailability(action_string);",
                "file": "sanjaykmruk_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String action_string) {",
                "file": "sanjaykmruk_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson10.java"
            }
        ],
        "id": "AXhlQ-XdSdlIifHFRPh5"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "sanjaykmruk_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "query = \"SELECT * FROM user_data WHERE first_name = 'John' and last_name = '\" + accountName + \"'\";",
                "file": "sanjaykmruk_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "protected AttackResult injectableQuery(String accountName) {",
                "file": "sanjaykmruk_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "return injectableQuery(account + \" \" + operator + \" \" + injection);",
                "file": "sanjaykmruk_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String account, @RequestParam String operator, @RequestParam String injection) {",
                "file": "sanjaykmruk_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson5a.java"
            }
        ],
        "id": "AXhlQ-XrSdlIifHFRPiT"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "sanjaykmruk_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "String query = \"SELECT * FROM employees WHERE last_name = '\" + name + \"' AND auth_tan = '\" + auth_tan + \"'\";",
                "file": "sanjaykmruk_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "protected AttackResult injectableQueryConfidentiality(String name, String auth_tan) {",
                "file": "sanjaykmruk_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "return injectableQueryConfidentiality(name, auth_tan);",
                "file": "sanjaykmruk_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String name, @RequestParam String auth_tan) {",
                "file": "sanjaykmruk_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson8.java"
            }
        ],
        "id": "AXhlQ-XNSdlIifHFRPhx"
    },
    {
        "taints": [
            {
                "code": "ResultSet results = statement.executeQuery(query);",
                "file": "sanjaykmruk_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "String query = \"SELECT * FROM employees WHERE last_name = '\" + name + \"' AND auth_tan = '\" + auth_tan + \"'\";",
                "file": "sanjaykmruk_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "protected AttackResult injectableQueryIntegrity(String name, String auth_tan) {",
                "file": "sanjaykmruk_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "return injectableQueryIntegrity(name, auth_tan);",
                "file": "sanjaykmruk_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            },
            {
                "code": "public AttackResult completed(@RequestParam String name, @RequestParam String auth_tan) {",
                "file": "sanjaykmruk_WebGoat:webgoat-lessons/sql-injection/src/main/java/org/owasp/webgoat/sql_injection/introduction/SqlInjectionLesson9.java"
            }
        ],
        "id": "AXhlQ-XmSdlIifHFRPiN"
    },
    {
        "taints": [
            {
                "code": "java.util.Map<String, Object> results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForMap(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00039.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + param + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00039.java"
            },
            {
                "code": "param = name;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00039.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00039.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00039.java"
            }
        ],
        "id": "AXhfcN2cV4OlGYpD2L9u"
    },
    {
        "taints": [
            {
                "code": "java.util.Map<String, Object> results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForMap(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00102.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00102.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00102.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00102.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00102.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00102.java"
            }
        ],
        "id": "AXhfcNLoV4OlGYpD2JdD"
    },
    {
        "taints": [
            {
                "code": "java.util.List<java.util.Map<String, Object>> list = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForList(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00433.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00433.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00433.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest00433\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00433.java"
            }
        ],
        "id": "AXhfcOE4V4OlGYpD2Mzd"
    },
    {
        "taints": [
            {
                "code": "java.util.List<java.util.Map<String, Object>> list = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForList(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00596.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00596.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00596.java"
            },
            {
                "code": "param = name;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00596.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00596.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00596.java"
            }
        ],
        "id": "AXhfcOEiV4OlGYpD2MyB"
    },
    {
        "taints": [
            {
                "code": "java.util.List<java.util.Map<String, Object>> list = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForList(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00597.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00597.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00597.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "param = name;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00597.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00597.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00597.java"
            }
        ],
        "id": "AXhfcNLNV4OlGYpD2Jbi"
    },
    {
        "taints": [
            {
                "code": "java.util.Map<String, Object> results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForMap(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00679.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00679.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00679.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest00679\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00679.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AXhfcOSuV4OlGYpD2NgL"
    },
    {
        "taints": [
            {
                "code": "java.util.Map<String, Object> results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForMap(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00768.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00768.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00768.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00768.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest00768\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00768.java"
            }
        ],
        "id": "AXhfcN4SV4OlGYpD2MEO"
    },
    {
        "taints": [
            {
                "code": "java.util.Map<String, Object> results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForMap(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01007.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01007.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01007.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01007.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01007.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01007.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01007.java"
            }
        ],
        "id": "AXhfcOFwV4OlGYpD2M3U"
    },
    {
        "taints": [
            {
                "code": "java.util.List<java.util.Map<String, Object>> list = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForList(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01389.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01389.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01389.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01389.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01389.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest01389\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01389.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01389.java"
            }
        ],
        "id": "AXhfcOCyV4OlGYpD2Mqs"
    },
    {
        "taints": [
            {
                "code": "java.util.List<java.util.Map<String, Object>> list = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForList(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01468.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01468.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01468.java"
            },
            {
                "code": "else bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01468.java"
            },
            {
                "code": "param = name;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01468.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01468.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01468.java"
            }
        ],
        "id": "AXhfcMNoV4OlGYpD2F3c"
    },
    {
        "taints": [
            {
                "code": "java.util.Map<String, Object> results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForMap(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01470.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01470.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01470.java"
            },
            {
                "code": "String bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01470.java"
            },
            {
                "code": "param = name;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01470.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01470.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01470.java"
            }
        ],
        "id": "AXhfcMK6V4OlGYpD2Ft7"
    },
    {
        "taints": [
            {
                "code": "java.util.List<java.util.Map<String, Object>> list = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForList(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01554.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01554.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01554.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01554.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest01554\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01554.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AXhfcNnMV4OlGYpD2LGu"
    },
    {
        "taints": [
            {
                "code": "java.util.List<java.util.Map<String, Object>> list = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForList(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01724.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01724.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01724.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01724.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01724.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01724.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01724.java"
            }
        ],
        "id": "AXhfcMuAV4OlGYpD2HqK"
    },
    {
        "taints": [
            {
                "code": "java.util.List<java.util.Map<String, Object>> list = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForList(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02178.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02178.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02178.java"
            },
            {
                "code": "bar = (String)map38026.get(\"keyB-38026\"); // get it back out",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02178.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest02178\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02178.java"
            }
        ],
        "id": "AXhfcOA_V4OlGYpD2Mko"
    },
    {
        "taints": [
            {
                "code": "java.util.Map<String, Object> results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForMap(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02181.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02181.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02181.java"
            },
            {
                "code": "String bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02181.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest02181\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02181.java"
            }
        ],
        "id": "AXhfcNxGV4OlGYpD2LqI"
    },
    {
        "taints": [
            {
                "code": "java.util.Map<String, Object> results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForMap(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02281.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02281.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02281.java"
            },
            {
                "code": "String bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02281.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02281.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest02281\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02281.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02281.java"
            }
        ],
        "id": "AXhfcMQbV4OlGYpD2GBD"
    },
    {
        "taints": [
            {
                "code": "java.util.List<java.util.Map<String, Object>> list = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForList(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02358.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02358.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02358.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02358.java"
            },
            {
                "code": "param = name;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02358.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02358.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02358.java"
            }
        ],
        "id": "AXhfcMeDV4OlGYpD2GyX"
    },
    {
        "taints": [
            {
                "code": "java.util.List<java.util.Map<String, Object>> list = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForList(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02642.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02642.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02642.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02642.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02642.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02642.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02642.java"
            }
        ],
        "id": "AXhfcOX5V4OlGYpD2Nzx"
    },
    {
        "taints": [
            {
                "code": "java.util.List<java.util.Map<String, Object>> list = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForList(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02643.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02643.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02643.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02643.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02643.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02643.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02643.java"
            }
        ],
        "id": "AXhfcNO7V4OlGYpD2Jo1"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Long.class);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00025.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + param + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00025.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest00025\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00025.java"
            }
        ],
        "id": "AXhfcNlPV4OlGYpD2K-H"
    },
    {
        "taints": [
            {
                "code": "Integer results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Integer.class);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00198.java"
            },
            {
                "code": "String sql = \"SELECT  TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\"+ bar + \"'\" ;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00198.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00198.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00198.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest00198\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00198.java"
            }
        ],
        "id": "AXhfcNEPV4OlGYpD2JAh"
    },
    {
        "taints": [
            {
                "code": "Integer results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Integer.class);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00199.java"
            },
            {
                "code": "String sql = \"SELECT  TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\"+ bar + \"'\" ;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00199.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00199.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00199.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest00199\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00199.java"
            }
        ],
        "id": "AXhfcOGXV4OlGYpD2M6O"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Long.class);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00336.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00336.java"
            },
            {
                "code": "else bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00336.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00336.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00336.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest00336\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00336.java"
            }
        ],
        "id": "AXhfcNc6V4OlGYpD2Kcv"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Long.class);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00678.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00678.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00678.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest00678\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00678.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AXhfcMzGV4OlGYpD2IAJ"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Long.class);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00764.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00764.java"
            },
            {
                "code": "String bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00764.java"
            },
            {
                "code": "param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00764.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest00764\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00764.java"
            }
        ],
        "id": "AXhfcMl2V4OlGYpD2HP1"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Long.class);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00765.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00765.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00765.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00765.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest00765\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00765.java"
            }
        ],
        "id": "AXhfcOEZV4OlGYpD2MxZ"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Long.class);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00766.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00766.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00766.java"
            },
            {
                "code": "param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00766.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest00766\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00766.java"
            }
        ],
        "id": "AXhfcMJSV4OlGYpD2Foy"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Long.class);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00767.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00767.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00767.java"
            },
            {
                "code": "param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00767.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest00767\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00767.java"
            }
        ],
        "id": "AXhfcNiCV4OlGYpD2KxX"
    },
    {
        "taints": [
            {
                "code": "Integer results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Integer.class);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00842.java"
            },
            {
                "code": "String sql = \"SELECT  TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\"+ bar + \"'\" ;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00842.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00842.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00842.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00842.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00842.java"
            }
        ],
        "id": "AXhfcM_lV4OlGYpD2It-"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Long.class);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00843.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00843.java"
            },
            {
                "code": "bar = (String)map12983.get(\"keyB-12983\"); // get it back out",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00843.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00843.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00843.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00843.java"
            }
        ],
        "id": "AXhfcN1wV4OlGYpD2L6z"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Long.class);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01006.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01006.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01006.java"
            },
            {
                "code": "bar = (String)map36088.get(\"keyB-36088\"); // get it back out",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01006.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01006.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01006.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01006.java"
            }
        ],
        "id": "AXhfcMf4V4OlGYpD2G45"
    },
    {
        "taints": [
            {
                "code": "Integer results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Integer.class);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01087.java"
            },
            {
                "code": "String sql = \"SELECT  TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\"+ bar + \"'\" ;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01087.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01087.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01087.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01087.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest01087\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01087.java"
            }
        ],
        "id": "AXhfcOLPV4OlGYpD2NGz"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Long.class);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01088.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01088.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01088.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01088.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01088.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest01088\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01088.java"
            }
        ],
        "id": "AXhfcNFWV4OlGYpD2JEu"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Long.class);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01215.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01215.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01215.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01215.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01215.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01215.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest01215\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01215.java"
            }
        ],
        "id": "AXhfcMudV4OlGYpD2Hsl"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Long.class);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01308.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01308.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01308.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01308.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest01308\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01308.java"
            }
        ],
        "id": "AXhfcMoVV4OlGYpD2HYs"
    },
    {
        "taints": [
            {
                "code": "Integer results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Integer.class);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01387.java"
            },
            {
                "code": "String sql = \"SELECT  TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\"+ bar + \"'\" ;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01387.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01387.java"
            },
            {
                "code": "else bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01387.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01387.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest01387\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01387.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01387.java"
            }
        ],
        "id": "AXhfcOM3V4OlGYpD2NMY"
    },
    {
        "taints": [
            {
                "code": "Integer results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Integer.class);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01388.java"
            },
            {
                "code": "String sql = \"SELECT  TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\"+ bar + \"'\" ;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01388.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01388.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01388.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01388.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest01388\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01388.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01388.java"
            }
        ],
        "id": "AXhfcL1iV4OlGYpD2Egv"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Long.class);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01390.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01390.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01390.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01390.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01390.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest01390\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01390.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01390.java"
            }
        ],
        "id": "AXhfcNzYV4OlGYpD2LzE"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Long.class);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01556.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01556.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01556.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01556.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest01556\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01556.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AXhfcOH7V4OlGYpD2M_t"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Long.class);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01625.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01625.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01625.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01625.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01625.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest01625\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01625.java"
            }
        ],
        "id": "AXhfcNSsV4OlGYpD2J2y"
    },
    {
        "taints": [
            {
                "code": "Integer results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Integer.class);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01723.java"
            },
            {
                "code": "String sql = \"SELECT  TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\"+ bar + \"'\" ;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01723.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01723.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01723.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01723.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01723.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01723.java"
            }
        ],
        "id": "AXhfcMTJV4OlGYpD2GLN"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Long.class);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01965.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01965.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01965.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01965.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01965.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest01965\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01965.java"
            }
        ],
        "id": "AXhfcMsfV4OlGYpD2Hkd"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Long.class);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02179.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02179.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02179.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02179.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest02179\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02179.java"
            }
        ],
        "id": "AXhfcNEsV4OlGYpD2JCU"
    },
    {
        "taints": [
            {
                "code": "Integer results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Integer.class);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02275.java"
            },
            {
                "code": "String sql = \"SELECT  TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\"+ bar + \"'\" ;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02275.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02275.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02275.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02275.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest02275\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02275.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02275.java"
            }
        ],
        "id": "AXhfcMSkV4OlGYpD2GJI"
    },
    {
        "taints": [
            {
                "code": "Integer results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Integer.class);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02276.java"
            },
            {
                "code": "String sql = \"SELECT  TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\"+ bar + \"'\" ;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02276.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02276.java"
            },
            {
                "code": "else bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02276.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02276.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest02276\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02276.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02276.java"
            }
        ],
        "id": "AXhfcNYYV4OlGYpD2KMy"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Long.class);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02279.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02279.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02279.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02279.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02279.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest02279\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02279.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02279.java"
            }
        ],
        "id": "AXhfcNgFV4OlGYpD2KqQ"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Long.class);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02280.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02280.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02280.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02280.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02280.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest02280\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02280.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02280.java"
            }
        ],
        "id": "AXhfcNYlV4OlGYpD2KN8"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Long.class);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02359.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02359.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02359.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02359.java"
            },
            {
                "code": "param = name;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02359.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02359.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02359.java"
            }
        ],
        "id": "AXhfcNL5V4OlGYpD2JeK"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Long.class);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02360.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02360.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02360.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02360.java"
            },
            {
                "code": "param = name;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02360.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02360.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02360.java"
            }
        ],
        "id": "AXhfcNf4V4OlGYpD2KpR"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00997.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql, java.sql.ResultSet.TYPE_FORWARD_ONLY,\njava.sql.ResultSet.CONCUR_READ_ONLY );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00997.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00997.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00997.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00997.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00997.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00997.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00997.java"
            }
        ],
        "id": "AXhfcMmQV4OlGYpD2HRH"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00998.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql, java.sql.ResultSet.TYPE_FORWARD_ONLY,\njava.sql.ResultSet.CONCUR_READ_ONLY );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00998.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00998.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00998.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00998.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00998.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00998.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00998.java"
            }
        ],
        "id": "AXhfcN_4V4OlGYpD2MgV"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00999.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql, java.sql.ResultSet.TYPE_FORWARD_ONLY,\njava.sql.ResultSet.CONCUR_READ_ONLY );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00999.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00999.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00999.java"
            },
            {
                "code": "else bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00999.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00999.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00999.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00999.java"
            }
        ],
        "id": "AXhfcNKaV4OlGYpD2JY6"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01001.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01001.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01001.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01001.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01001.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01001.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01001.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01001.java"
            }
        ],
        "id": "AXhfcNNiV4OlGYpD2JkR"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01002.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql, new int[] { 1, 2 } );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01002.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01002.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01002.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01002.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01002.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01002.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01002.java"
            }
        ],
        "id": "AXhfcOYeV4OlGYpD2N1n"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01003.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql, new String[] {\"Column1\",\"Column2\"} );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01003.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01003.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01003.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01003.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01003.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01003.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01003.java"
            }
        ],
        "id": "AXhfcMtsV4OlGYpD2Ho6"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01004.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql, new String[] {\"Column1\",\"Column2\"} );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01004.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01004.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01004.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01004.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01004.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01004.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01004.java"
            }
        ],
        "id": "AXhfcNQgV4OlGYpD2JuV"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.batchUpdate(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01005.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01005.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01005.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01005.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01005.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01005.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01005.java"
            }
        ],
        "id": "AXhfcMbFV4OlGYpD2Gn3"
    },
    {
        "taints": [
            {
                "code": "= org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForRowSet(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01008.java"
            },
            {
                "code": "String sql = \"SELECT  * from USERS where USERNAME='foo' and PASSWORD='\"+ bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01008.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01008.java"
            },
            {
                "code": "String bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01008.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01008.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01008.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01008.java"
            }
        ],
        "id": "AXhfcL5mV4OlGYpD2EvL"
    },
    {
        "taints": [
            {
                "code": "int[] counts = statement.executeBatch();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01011.java"
            },
            {
                "code": "statement.addBatch( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01011.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01011.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01011.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01011.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01011.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01011.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01011.java"
            }
        ],
        "id": "AXhfcNSzV4OlGYpD2J3Q"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01083.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01083.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01083.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01083.java"
            },
            {
                "code": "String bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01083.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01083.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest01083\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01083.java"
            }
        ],
        "id": "AXhfcL8DV4OlGYpD2E5o"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01084.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql, new String[] {\"Column1\",\"Column2\"} );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01084.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01084.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01084.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01084.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01084.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest01084\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01084.java"
            }
        ],
        "id": "AXhfcN99V4OlGYpD2MY3"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.execute(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01086.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01086.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01086.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01086.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01086.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest01086\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01086.java"
            }
        ],
        "id": "AXhfcMCuV4OlGYpD2FSB"
    },
    {
        "taints": [
            {
                "code": "int[] counts = statement.executeBatch();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01090.java"
            },
            {
                "code": "statement.addBatch( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01090.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01090.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01090.java"
            },
            {
                "code": "bar = (String)map12212.get(\"keyB-12212\"); // get it back out",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01090.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01090.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest01090\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01090.java"
            }
        ],
        "id": "AXhfcL2XV4OlGYpD2EkD"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01091.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01091.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01091.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01091.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01091.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest01091\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01091.java"
            }
        ],
        "id": "AXhfcNeZV4OlGYpD2Kjz"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01092.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01092.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01092.java"
            },
            {
                "code": "else bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01092.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01092.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest01092\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01092.java"
            }
        ],
        "id": "AXhfcNrAV4OlGYpD2LUS"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, new int[] { 1, 2 } );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01093.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01093.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01093.java"
            },
            {
                "code": "bar = (String)map18142.get(\"keyB-18142\"); // get it back out",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01093.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01093.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest01093\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01093.java"
            }
        ],
        "id": "AXhfcMRvV4OlGYpD2GF8"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, new String[] { \"username\", \"password\" } );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01094.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01094.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01094.java"
            },
            {
                "code": "String bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01094.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01094.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest01094\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01094.java"
            }
        ],
        "id": "AXhfcNSWV4OlGYpD2J1b"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, new String[] { \"username\", \"password\" } );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01095.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01095.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01095.java"
            },
            {
                "code": "else bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01095.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01095.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest01095\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01095.java"
            }
        ],
        "id": "AXhfcOaEV4OlGYpD2N7M"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01096.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01096.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01096.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01096.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01096.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest01096\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01096.java"
            }
        ],
        "id": "AXhfcM5sV4OlGYpD2IYM"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01097.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01097.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01097.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01097.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01097.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest01097\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01097.java"
            }
        ],
        "id": "AXhfcNJ8V4OlGYpD2JXN"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01208.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql, java.sql.ResultSet.TYPE_FORWARD_ONLY,\njava.sql.ResultSet.CONCUR_READ_ONLY, java.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01208.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01208.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01208.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01208.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01208.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01208.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest01208\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01208.java"
            }
        ],
        "id": "AXhfcOF-V4OlGYpD2M36"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01209.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.Statement.RETURN_GENERATED_KEYS );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01209.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01209.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01209.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01209.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01209.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01209.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest01209\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01209.java"
            }
        ],
        "id": "AXhfcNLwV4OlGYpD2Jdc"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01210.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01210.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01210.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01210.java"
            },
            {
                "code": "bar = (String)map86576.get(\"keyB-86576\"); // get it back out",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01210.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01210.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01210.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest01210\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01210.java"
            }
        ],
        "id": "AXhfcM1lV4OlGYpD2IIf"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01211.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY,\njava.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01211.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01211.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01211.java"
            },
            {
                "code": "String bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01211.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01211.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01211.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest01211\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01211.java"
            }
        ],
        "id": "AXhfcOXbV4OlGYpD2NyH"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01213.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql, new String[] {\"Column1\",\"Column2\"} );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01213.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01213.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01213.java"
            },
            {
                "code": "else bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01213.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01213.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01213.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest01213\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01213.java"
            }
        ],
        "id": "AXhfcNmTV4OlGYpD2LCG"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.batchUpdate(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01214.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01214.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01214.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01214.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01214.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01214.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest01214\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01214.java"
            }
        ],
        "id": "AXhfcMWgV4OlGYpD2GXI"
    },
    {
        "taints": [
            {
                "code": "int[] counts = statement.executeBatch();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01218.java"
            },
            {
                "code": "statement.addBatch( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01218.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01218.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01218.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01218.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01218.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01218.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest01218\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01218.java"
            }
        ],
        "id": "AXhfcOCsV4OlGYpD2MqZ"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01220.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01220.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01220.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01220.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01220.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01220.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest01220\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01220.java"
            }
        ],
        "id": "AXhfcNPzV4OlGYpD2Jr4"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, java.sql.Statement.RETURN_GENERATED_KEYS );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01222.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01222.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01222.java"
            },
            {
                "code": "bar = (String)map25738.get(\"keyB-25738\"); // get it back out",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01222.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01222.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01222.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest01222\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01222.java"
            }
        ],
        "id": "AXhfcN7aV4OlGYpD2MRc"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01304.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY,\njava.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01304.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01304.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01304.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01304.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest01304\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01304.java"
            }
        ],
        "id": "AXhfcN1gV4OlGYpD2L5j"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01305.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql, new int[] { 1, 2 } );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01305.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01305.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01305.java"
            },
            {
                "code": "else bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01305.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest01305\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01305.java"
            }
        ],
        "id": "AXhfcML3V4OlGYpD2FxG"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01307.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql, new String[] {\"Column1\",\"Column2\"} );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01307.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01307.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01307.java"
            },
            {
                "code": "else bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01307.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest01307\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01307.java"
            }
        ],
        "id": "AXhfcOIcV4OlGYpD2NBK"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01311.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01311.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01311.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01311.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest01311\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01311.java"
            }
        ],
        "id": "AXhfcMoPV4OlGYpD2HYQ"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, new String[] { \"username\", \"password\" } );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01312.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01312.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01312.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01312.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest01312\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01312.java"
            }
        ],
        "id": "AXhfcMYiV4OlGYpD2Ger"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01313.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01313.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01313.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01313.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest01313\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01313.java"
            }
        ],
        "id": "AXhfcNaUV4OlGYpD2KS9"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01314.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01314.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01314.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01314.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest01314\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01314.java"
            }
        ],
        "id": "AXhfcMz5V4OlGYpD2ICB"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, java.sql.Statement.RETURN_GENERATED_KEYS );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01315.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01315.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01315.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01315.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest01315\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01315.java"
            }
        ],
        "id": "AXhfcNyqV4OlGYpD2Lwg"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01379.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql, java.sql.ResultSet.TYPE_FORWARD_ONLY,\njava.sql.ResultSet.CONCUR_READ_ONLY, java.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01379.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01379.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01379.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01379.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01379.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest01379\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01379.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01379.java"
            }
        ],
        "id": "AXhfcOCdV4OlGYpD2Mps"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01380.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql, java.sql.ResultSet.TYPE_FORWARD_ONLY,\njava.sql.ResultSet.CONCUR_READ_ONLY, java.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01380.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01380.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01380.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01380.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01380.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest01380\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01380.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01380.java"
            }
        ],
        "id": "AXhfcMNWV4OlGYpD2F2f"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01381.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.Statement.RETURN_GENERATED_KEYS );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01381.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01381.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01381.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01381.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01381.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest01381\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01381.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01381.java"
            }
        ],
        "id": "AXhfcNKgV4OlGYpD2JZV"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01382.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.Statement.RETURN_GENERATED_KEYS );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01382.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01382.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01382.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01382.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01382.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest01382\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01382.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01382.java"
            }
        ],
        "id": "AXhfcOXOV4OlGYpD2NxJ"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01383.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01383.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01383.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01383.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01383.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01383.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest01383\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01383.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01383.java"
            }
        ],
        "id": "AXhfcMvzV4OlGYpD2HzG"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01384.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql, new int[] { 1, 2 } );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01384.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01384.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01384.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01384.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01384.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest01384\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01384.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01384.java"
            }
        ],
        "id": "AXhfcNlAV4OlGYpD2K9Q"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01385.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql, new String[] {\"Column1\",\"Column2\"} );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01385.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01385.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01385.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01385.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01385.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest01385\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01385.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01385.java"
            }
        ],
        "id": "AXhfcMYNV4OlGYpD2GdS"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01391.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01391.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01391.java"
            },
            {
                "code": "bar = (String)map24596.get(\"keyB-24596\"); // get it back out",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01391.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01391.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest01391\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01391.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01391.java"
            }
        ],
        "id": "AXhfcNjfV4OlGYpD2K2y"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01392.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01392.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01392.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01392.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01392.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest01392\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01392.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01392.java"
            }
        ],
        "id": "AXhfcMb3V4OlGYpD2GqG"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, new int[] {1,2} );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01394.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01394.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01394.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01394.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01394.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest01394\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01394.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01394.java"
            }
        ],
        "id": "AXhfcM9-V4OlGYpD2InD"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, new String[] {\"USERNAME\",\"PASSWORD\"} );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01395.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01395.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01395.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01395.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01395.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest01395\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01395.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01395.java"
            }
        ],
        "id": "AXhfcOWLV4OlGYpD2NtX"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, new String[] {\"USERNAME\",\"PASSWORD\"} );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01396.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01396.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01396.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01396.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01396.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest01396\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01396.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01396.java"
            }
        ],
        "id": "AXhfcNZjV4OlGYpD2KQ1"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01460.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql, java.sql.ResultSet.TYPE_FORWARD_ONLY,\njava.sql.ResultSet.CONCUR_READ_ONLY );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01460.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01460.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01460.java"
            },
            {
                "code": "bar = (String)map72098.get(\"keyB-72098\"); // get it back out",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01460.java"
            },
            {
                "code": "param = name;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01460.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01460.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01460.java"
            }
        ],
        "id": "AXhfcOXnV4OlGYpD2Ny0"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01462.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql, java.sql.ResultSet.TYPE_FORWARD_ONLY,\njava.sql.ResultSet.CONCUR_READ_ONLY, java.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01462.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01462.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01462.java"
            },
            {
                "code": "String bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01462.java"
            },
            {
                "code": "param = name;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01462.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01462.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01462.java"
            }
        ],
        "id": "AXhfcN3EV4OlGYpD2L_j"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01463.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql, java.sql.ResultSet.TYPE_FORWARD_ONLY,\njava.sql.ResultSet.CONCUR_READ_ONLY, java.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01463.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01463.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01463.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01463.java"
            },
            {
                "code": "param = name;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01463.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01463.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01463.java"
            }
        ],
        "id": "AXhfcMZIV4OlGYpD2GhV"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01464.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY,\njava.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01464.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01464.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01464.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01464.java"
            },
            {
                "code": "param = name;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01464.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01464.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01464.java"
            }
        ],
        "id": "AXhfcNZ1V4OlGYpD2KRk"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.execute(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01465.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01465.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01465.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01465.java"
            },
            {
                "code": "param = name;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01465.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01465.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01465.java"
            }
        ],
        "id": "AXhfcORFV4OlGYpD2NZZ"
    },
    {
        "taints": [
            {
                "code": "java.util.List<String> results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.query(sql,  new org.springframework.jdbc.core.RowMapper<String>() {\npublic String mapRow(java.sql.ResultSet rs, int rowNum) throws java.sql.SQLException {\ntry {\nreturn rs.getString(\"USERNAME\");\n} catch (java.sql.SQLException e) {\nif (org.owasp.benchmark.helpers.DatabaseHelper.hideSQLErrors) {\nreturn \"Error processing query.\";\n}\nelse throw e;\n}\n}\n});",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01466.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01466.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01466.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01466.java"
            },
            {
                "code": "param = name;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01466.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01466.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01466.java"
            }
        ],
        "id": "AXhfcM7lV4OlGYpD2Ien"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.batchUpdate(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01471.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01471.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01471.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01471.java"
            },
            {
                "code": "param = name;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01471.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01471.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01471.java"
            }
        ],
        "id": "AXhfcNXmV4OlGYpD2KJb"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, new int[] { 1, 2 } );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01473.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01473.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01473.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01473.java"
            },
            {
                "code": "param = name;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01473.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01473.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01473.java"
            }
        ],
        "id": "AXhfcOUtV4OlGYpD2NoO"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, java.sql.Statement.RETURN_GENERATED_KEYS );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01475.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01475.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01475.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01475.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "param = name;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01475.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01475.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01475.java"
            }
        ],
        "id": "AXhfcMPKV4OlGYpD2F8C"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, new String[] {\"USERNAME\",\"PASSWORD\"} );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01476.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01476.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01476.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01476.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "param = name;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01476.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01476.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01476.java"
            }
        ],
        "id": "AXhfcNytV4OlGYpD2Lwx"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, new String[] {\"USERNAME\",\"PASSWORD\"} );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01477.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01477.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01477.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01477.java"
            },
            {
                "code": "param = name;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01477.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01477.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01477.java"
            }
        ],
        "id": "AXhfcM0wV4OlGYpD2IFa"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01552.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY,\njava.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01552.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01552.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01552.java"
            },
            {
                "code": "String bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01552.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest01552\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01552.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AXhfcMyVV4OlGYpD2H86"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, java.sql.Statement.RETURN_GENERATED_KEYS );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01557.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01557.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01557.java"
            },
            {
                "code": "bar = (String)map20581.get(\"keyB-20581\"); // get it back out",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01557.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest01557\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01557.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AXhfcNReV4OlGYpD2JyZ"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, java.sql.Statement.RETURN_GENERATED_KEYS );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01558.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01558.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01558.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01558.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest01558\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01558.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AXhfcMMZV4OlGYpD2Fys"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, new int[] { 1, 2 } );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01559.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01559.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01559.java"
            },
            {
                "code": "bar = (String)map31651.get(\"keyB-31651\"); // get it back out",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01559.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest01559\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01559.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AXhfcMZVV4OlGYpD2Gh_"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, java.sql.Statement.RETURN_GENERATED_KEYS );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01560.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01560.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01560.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01560.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest01560\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01560.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AXhfcMPNV4OlGYpD2F8Q"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01620.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01620.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01620.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01620.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01620.java"
            },
            {
                "code": "param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01620.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest01620\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01620.java"
            }
        ],
        "id": "AXhfcMy8V4OlGYpD2H_i"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01621.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql, java.sql.ResultSet.TYPE_FORWARD_ONLY,\njava.sql.ResultSet.CONCUR_READ_ONLY );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01621.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01621.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01621.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01621.java"
            },
            {
                "code": "param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01621.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest01621\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01621.java"
            }
        ],
        "id": "AXhfcOKRV4OlGYpD2ND6"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01623.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql, java.sql.ResultSet.TYPE_FORWARD_ONLY,\njava.sql.ResultSet.CONCUR_READ_ONLY, java.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01623.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01623.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01623.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01623.java"
            },
            {
                "code": "param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01623.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest01623\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01623.java"
            }
        ],
        "id": "AXhfcOAuV4OlGYpD2Mi-"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.batchUpdate(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01624.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01624.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01624.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01624.java"
            },
            {
                "code": "param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01624.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest01624\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01624.java"
            }
        ],
        "id": "AXhfcMa8V4OlGYpD2GnP"
    },
    {
        "taints": [
            {
                "code": "int[] counts = statement.executeBatch();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01626.java"
            },
            {
                "code": "statement.addBatch( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01626.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01626.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01626.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01626.java"
            },
            {
                "code": "param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01626.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest01626\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01626.java"
            }
        ],
        "id": "AXhfcMDQV4OlGYpD2FT4"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, new String[] { \"username\", \"password\" } );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01627.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01627.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01627.java"
            },
            {
                "code": "String bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01627.java"
            },
            {
                "code": "param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01627.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest01627\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01627.java"
            }
        ],
        "id": "AXhfcNDrV4OlGYpD2I-h"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, new String[] { \"username\", \"password\" } );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01628.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01628.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01628.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01628.java"
            },
            {
                "code": "param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01628.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest01628\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01628.java"
            }
        ],
        "id": "AXhfcOIHV4OlGYpD2NAL"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, java.sql.Statement.RETURN_GENERATED_KEYS );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01629.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01629.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01629.java"
            },
            {
                "code": "else bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01629.java"
            },
            {
                "code": "param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01629.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest01629\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01629.java"
            }
        ],
        "id": "AXhfcL1fV4OlGYpD2Egf"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, new String[] {\"USERNAME\",\"PASSWORD\"} );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01631.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01631.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01631.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01631.java"
            },
            {
                "code": "param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01631.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest01631\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01631.java"
            }
        ],
        "id": "AXhfcNykV4OlGYpD2LwE"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01712.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01712.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01712.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01712.java"
            },
            {
                "code": "bar = (String)map6261.get(\"keyB-6261\"); // get it back out",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01712.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01712.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01712.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01712.java"
            }
        ],
        "id": "AXhfcOXWV4OlGYpD2Nx4"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01714.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql, java.sql.ResultSet.TYPE_FORWARD_ONLY,\njava.sql.ResultSet.CONCUR_READ_ONLY );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01714.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01714.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01714.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01714.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01714.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01714.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01714.java"
            }
        ],
        "id": "AXhfcN6kV4OlGYpD2MOC"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01715.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01715.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01715.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01715.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01715.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01715.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01715.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01715.java"
            }
        ],
        "id": "AXhfcNtzV4OlGYpD2Le8"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01716.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01716.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01716.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01716.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01716.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01716.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01716.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01716.java"
            }
        ],
        "id": "AXhfcMQLV4OlGYpD2GAV"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01718.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY,\njava.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01718.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01718.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01718.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01718.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01718.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01718.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01718.java"
            }
        ],
        "id": "AXhfcM10V4OlGYpD2IJZ"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.execute(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01720.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01720.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01720.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01720.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01720.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01720.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01720.java"
            }
        ],
        "id": "AXhfcOOPV4OlGYpD2NQ8"
    },
    {
        "taints": [
            {
                "code": "java.util.List<String> results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.query(sql,  new org.springframework.jdbc.core.RowMapper<String>() {\npublic String mapRow(java.sql.ResultSet rs, int rowNum) throws java.sql.SQLException {\ntry {\nreturn rs.getString(\"USERNAME\");\n} catch (java.sql.SQLException e) {\nif (org.owasp.benchmark.helpers.DatabaseHelper.hideSQLErrors) {\nreturn \"Error processing query.\";\n}\nelse throw e;\n}\n}\n});",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01721.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01721.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01721.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01721.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01721.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01721.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01721.java"
            }
        ],
        "id": "AXhfcMxVV4OlGYpD2H4v"
    },
    {
        "taints": [
            {
                "code": "Object results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql,new Object[]{}, String.class);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01725.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 USERNAME from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01725.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01725.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01725.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01725.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01725.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01725.java"
            }
        ],
        "id": "AXhfcOYwV4OlGYpD2N2r"
    },
    {
        "taints": [
            {
                "code": "= org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForRowSet(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01726.java"
            },
            {
                "code": "String sql = \"SELECT  * from USERS where USERNAME='foo' and PASSWORD='\"+ bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01726.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01726.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01726.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01726.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01726.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01726.java"
            }
        ],
        "id": "AXhfcL2FV4OlGYpD2Eiz"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.batchUpdate(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01727.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01727.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01727.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01727.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01727.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01727.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01727.java"
            }
        ],
        "id": "AXhfcNeiV4OlGYpD2Kku"
    },
    {
        "taints": [
            {
                "code": "int[] counts = statement.executeBatch();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01728.java"
            },
            {
                "code": "statement.addBatch( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01728.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01728.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01728.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01728.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01728.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01728.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01728.java"
            }
        ],
        "id": "AXhfcNq6V4OlGYpD2LUF"
    },
    {
        "taints": [
            {
                "code": "int[] counts = statement.executeBatch();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01729.java"
            },
            {
                "code": "statement.addBatch( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01729.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01729.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01729.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01729.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01729.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01729.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01729.java"
            }
        ],
        "id": "AXhfcMBTV4OlGYpD2FMc"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, java.sql.Statement.RETURN_GENERATED_KEYS );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01730.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01730.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01730.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01730.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01730.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01730.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01730.java"
            }
        ],
        "id": "AXhfcL80V4OlGYpD2E87"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, new String[] { \"username\", \"password\" } );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01731.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01731.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01731.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01731.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01731.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01731.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01731.java"
            }
        ],
        "id": "AXhfcN6cV4OlGYpD2MNk"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01732.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01732.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01732.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01732.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01732.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01732.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01732.java"
            }
        ],
        "id": "AXhfcNBnV4OlGYpD2I1t"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, new String[] {\"USERNAME\",\"PASSWORD\"} );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01733.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01733.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01733.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01733.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01733.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01733.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01733.java"
            }
        ],
        "id": "AXhfcL6rV4OlGYpD2EzY"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01877.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql, java.sql.ResultSet.TYPE_FORWARD_ONLY,\njava.sql.ResultSet.CONCUR_READ_ONLY );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01877.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01877.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01877.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01877.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01877.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01877.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01877.java"
            }
        ],
        "id": "AXhfcL_6V4OlGYpD2FHm"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01878.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.Statement.RETURN_GENERATED_KEYS );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01878.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01878.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01878.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01878.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01878.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01878.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01878.java"
            }
        ],
        "id": "AXhfcMlEV4OlGYpD2HMU"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.batchUpdate(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01881.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01881.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01881.java"
            },
            {
                "code": "bar = (String)map20027.get(\"keyB-20027\"); // get it back out",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01881.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01881.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01881.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01881.java"
            }
        ],
        "id": "AXhfcMScV4OlGYpD2GIp"
    },
    {
        "taints": [
            {
                "code": "java.util.List<String> results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.query(sql,  new org.springframework.jdbc.core.RowMapper<String>() {\npublic String mapRow(java.sql.ResultSet rs, int rowNum) throws java.sql.SQLException {\ntry {\nreturn rs.getString(\"USERNAME\");\n} catch (java.sql.SQLException e) {\nif (org.owasp.benchmark.helpers.DatabaseHelper.hideSQLErrors) {\nreturn \"Error processing query.\";\n}\nelse throw e;\n}\n}\n});",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01882.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01882.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01882.java"
            },
            {
                "code": "bar = (String)map67948.get(\"keyB-67948\"); // get it back out",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01882.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01882.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01882.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01882.java"
            }
        ],
        "id": "AXhfcMhJV4OlGYpD2G9_"
    },
    {
        "taints": [
            {
                "code": "= org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForRowSet(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01883.java"
            },
            {
                "code": "String sql = \"SELECT  * from USERS where USERNAME='foo' and PASSWORD='\"+ bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01883.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01883.java"
            },
            {
                "code": "String bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01883.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01883.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01883.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01883.java"
            }
        ],
        "id": "AXhfcOW6V4OlGYpD2Nvz"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.batchUpdate(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01884.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01884.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01884.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01884.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01884.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01884.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01884.java"
            }
        ],
        "id": "AXhfcL9jV4OlGYpD2E_4"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01887.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01887.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01887.java"
            },
            {
                "code": "String bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01887.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01887.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01887.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01887.java"
            }
        ],
        "id": "AXhfcL68V4OlGYpD2E0_"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01888.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01888.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01888.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01888.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01888.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01888.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01888.java"
            }
        ],
        "id": "AXhfcONWV4OlGYpD2NOV"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, new int[] {1,2} );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01889.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01889.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01889.java"
            },
            {
                "code": "String bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01889.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01889.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01889.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01889.java"
            }
        ],
        "id": "AXhfcMe4V4OlGYpD2G05"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, new String[] {\"USERNAME\",\"PASSWORD\"} );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01890.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01890.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01890.java"
            },
            {
                "code": "String bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01890.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01890.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01890.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01890.java"
            }
        ],
        "id": "AXhfcM02V4OlGYpD2IFr"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, new String[] {\"USERNAME\",\"PASSWORD\"} );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01891.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01891.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01891.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01891.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01891.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01891.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01891.java"
            }
        ],
        "id": "AXhfcL87V4OlGYpD2E9L"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.batchUpdate(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01963.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01963.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01963.java"
            },
            {
                "code": "String bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01963.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01963.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest01963\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01963.java"
            }
        ],
        "id": "AXhfcNLRV4OlGYpD2Jbw"
    },
    {
        "taints": [
            {
                "code": "java.util.List<String> results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.query(sql,  new org.springframework.jdbc.core.RowMapper<String>() {\npublic String mapRow(java.sql.ResultSet rs, int rowNum) throws java.sql.SQLException {\ntry {\nreturn rs.getString(\"USERNAME\");\n} catch (java.sql.SQLException e) {\nif (org.owasp.benchmark.helpers.DatabaseHelper.hideSQLErrors) {\nreturn \"Error processing query.\";\n}\nelse throw e;\n}\n}\n});",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01964.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01964.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01964.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01964.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01964.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest01964\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01964.java"
            }
        ],
        "id": "AXhfcMd8V4OlGYpD2Gx7"
    },
    {
        "taints": [
            {
                "code": "Object results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql,new Object[]{}, String.class);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01966.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 USERNAME from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01966.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01966.java"
            },
            {
                "code": "else bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01966.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01966.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest01966\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01966.java"
            }
        ],
        "id": "AXhfcNToV4OlGYpD2J5-"
    },
    {
        "taints": [
            {
                "code": "Object results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql,new Object[]{}, String.class);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01967.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 USERNAME from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01967.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01967.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01967.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01967.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest01967\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01967.java"
            }
        ],
        "id": "AXhfcNE0V4OlGYpD2JC6"
    },
    {
        "taints": [
            {
                "code": "int[] counts = statement.executeBatch();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01969.java"
            },
            {
                "code": "statement.addBatch( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01969.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01969.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01969.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01969.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01969.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest01969\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01969.java"
            }
        ],
        "id": "AXhfcNlZV4OlGYpD2K-y"
    },
    {
        "taints": [
            {
                "code": "int[] counts = statement.executeBatch();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01970.java"
            },
            {
                "code": "statement.addBatch( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01970.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01970.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01970.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01970.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01970.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest01970\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01970.java"
            }
        ],
        "id": "AXhfcNJjV4OlGYpD2JVX"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, new int[] { 1, 2 } );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01971.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01971.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01971.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01971.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01971.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest01971\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01971.java"
            }
        ],
        "id": "AXhfcMLNV4OlGYpD2FvH"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, new String[] { \"username\", \"password\" } );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01972.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01972.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01972.java"
            },
            {
                "code": "String bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01972.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01972.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest01972\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01972.java"
            }
        ],
        "id": "AXhfcN1jV4OlGYpD2L5x"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01973.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01973.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01973.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01973.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01973.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest01973\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01973.java"
            }
        ],
        "id": "AXhfcNWMV4OlGYpD2KEv"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02087.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.Statement.RETURN_GENERATED_KEYS );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02087.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02087.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02087.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02087.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02087.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02087.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest02087\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02087.java"
            }
        ],
        "id": "AXhfcOCKV4OlGYpD2Mov"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02088.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02088.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02088.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02088.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02088.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02088.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02088.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest02088\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02088.java"
            }
        ],
        "id": "AXhfcM-uV4OlGYpD2IqP"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02089.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02089.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02089.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02089.java"
            },
            {
                "code": "else bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02089.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02089.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02089.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest02089\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02089.java"
            }
        ],
        "id": "AXhfcNQkV4OlGYpD2Juj"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.execute(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02090.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02090.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02090.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02090.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02090.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02090.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest02090\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02090.java"
            }
        ],
        "id": "AXhfcOX2V4OlGYpD2Nzd"
    },
    {
        "taints": [
            {
                "code": "java.util.List<String> results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.query(sql,  new org.springframework.jdbc.core.RowMapper<String>() {\npublic String mapRow(java.sql.ResultSet rs, int rowNum) throws java.sql.SQLException {\ntry {\nreturn rs.getString(\"USERNAME\");\n} catch (java.sql.SQLException e) {\nif (org.owasp.benchmark.helpers.DatabaseHelper.hideSQLErrors) {\nreturn \"Error processing query.\";\n}\nelse throw e;\n}\n}\n});",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02091.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02091.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02091.java"
            },
            {
                "code": "String bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02091.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02091.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02091.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest02091\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02091.java"
            }
        ],
        "id": "AXhfcMjqV4OlGYpD2HH7"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02092.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02092.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02092.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02092.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02092.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02092.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest02092\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02092.java"
            }
        ],
        "id": "AXhfcMSsV4OlGYpD2GJW"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02093.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02093.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02093.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02093.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02093.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02093.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest02093\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02093.java"
            }
        ],
        "id": "AXhfcNKGV4OlGYpD2JXn"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02094.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02094.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02094.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02094.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02094.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02094.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest02094\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02094.java"
            }
        ],
        "id": "AXhfcMxIV4OlGYpD2H38"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02098.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02098.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02098.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02098.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02098.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02098.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest02098\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02098.java"
            }
        ],
        "id": "AXhfcMkAV4OlGYpD2HIs"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02169.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql, java.sql.ResultSet.TYPE_FORWARD_ONLY,\njava.sql.ResultSet.CONCUR_READ_ONLY );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02169.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02169.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02169.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02169.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest02169\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02169.java"
            }
        ],
        "id": "AXhfcNoKV4OlGYpD2LKu"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02172.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02172.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02172.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02172.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02172.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest02172\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02172.java"
            }
        ],
        "id": "AXhfcMGlV4OlGYpD2Ff1"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02173.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02173.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02173.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02173.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02173.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest02173\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02173.java"
            }
        ],
        "id": "AXhfcOEgV4OlGYpD2Mxy"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.batchUpdate(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02174.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02174.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02174.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02174.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest02174\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02174.java"
            }
        ],
        "id": "AXhfcMiRV4OlGYpD2HC9"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.execute(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02176.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02176.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02176.java"
            },
            {
                "code": "else bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02176.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest02176\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02176.java"
            }
        ],
        "id": "AXhfcNqIV4OlGYpD2LRi"
    },
    {
        "taints": [
            {
                "code": "java.util.List<String> results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.query(sql,  new org.springframework.jdbc.core.RowMapper<String>() {\npublic String mapRow(java.sql.ResultSet rs, int rowNum) throws java.sql.SQLException {\ntry {\nreturn rs.getString(\"USERNAME\");\n} catch (java.sql.SQLException e) {\nif (org.owasp.benchmark.helpers.DatabaseHelper.hideSQLErrors) {\nreturn \"Error processing query.\";\n}\nelse throw e;\n}\n}\n});",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02177.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02177.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02177.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02177.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest02177\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02177.java"
            }
        ],
        "id": "AXhfcMVNV4OlGYpD2GSL"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02186.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02186.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02186.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02186.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest02186\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02186.java"
            }
        ],
        "id": "AXhfcOTFV4OlGYpD2NhT"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02187.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02187.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02187.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02187.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest02187\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02187.java"
            }
        ],
        "id": "AXhfcM5MV4OlGYpD2IWN"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02264.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02264.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02264.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02264.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02264.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02264.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest02264\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02264.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02264.java"
            }
        ],
        "id": "AXhfcOUJV4OlGYpD2Nl6"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02266.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql, java.sql.ResultSet.TYPE_FORWARD_ONLY,\njava.sql.ResultSet.CONCUR_READ_ONLY, java.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02266.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02266.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02266.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02266.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02266.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest02266\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02266.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02266.java"
            }
        ],
        "id": "AXhfcNTjV4OlGYpD2J5u"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02269.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY,\njava.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02269.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02269.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02269.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02269.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02269.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest02269\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02269.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02269.java"
            }
        ],
        "id": "AXhfcNI5V4OlGYpD2JTD"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02270.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY,\njava.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02270.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02270.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02270.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02270.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02270.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest02270\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02270.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02270.java"
            }
        ],
        "id": "AXhfcNeHV4OlGYpD2KjB"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02271.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql, new int[] { 1, 2 } );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02271.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02271.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02271.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02271.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02271.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest02271\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02271.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02271.java"
            }
        ],
        "id": "AXhfcMmdV4OlGYpD2HSK"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.batchUpdate(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02272.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02272.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02272.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02272.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02272.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest02272\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02272.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02272.java"
            }
        ],
        "id": "AXhfcOK6V4OlGYpD2NF4"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.batchUpdate(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02273.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02273.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02273.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02273.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02273.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest02273\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02273.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02273.java"
            }
        ],
        "id": "AXhfcNY_V4OlGYpD2KPK"
    },
    {
        "taints": [
            {
                "code": "java.util.List<String> results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.query(sql,  new org.springframework.jdbc.core.RowMapper<String>() {\npublic String mapRow(java.sql.ResultSet rs, int rowNum) throws java.sql.SQLException {\ntry {\nreturn rs.getString(\"USERNAME\");\n} catch (java.sql.SQLException e) {\nif (org.owasp.benchmark.helpers.DatabaseHelper.hideSQLErrors) {\nreturn \"Error processing query.\";\n}\nelse throw e;\n}\n}\n});",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02274.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02274.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02274.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02274.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02274.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest02274\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02274.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02274.java"
            }
        ],
        "id": "AXhfcMUqV4OlGYpD2GP7"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.batchUpdate(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02282.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02282.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02282.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02282.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02282.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest02282\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02282.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02282.java"
            }
        ],
        "id": "AXhfcMYKV4OlGYpD2GdF"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, new String[] { \"username\", \"password\" } );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02284.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02284.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02284.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02284.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02284.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest02284\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02284.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02284.java"
            }
        ],
        "id": "AXhfcM53V4OlGYpD2IYx"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, new String[] { \"username\", \"password\" } );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02285.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02285.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02285.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02285.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02285.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest02285\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02285.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02285.java"
            }
        ],
        "id": "AXhfcN31V4OlGYpD2MC1"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, new String[] {\"USERNAME\",\"PASSWORD\"} );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02287.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02287.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02287.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02287.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02287.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest02287\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02287.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02287.java"
            }
        ],
        "id": "AXhfcL39V4OlGYpD2Ept"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, new String[] {\"USERNAME\",\"PASSWORD\"} );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02288.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02288.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02288.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02288.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02288.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest02288\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02288.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02288.java"
            }
        ],
        "id": "AXhfcNhtV4OlGYpD2KwZ"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02353.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.Statement.RETURN_GENERATED_KEYS );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02353.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02353.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02353.java"
            },
            {
                "code": "else bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02353.java"
            },
            {
                "code": "param = name;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02353.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02353.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02353.java"
            }
        ],
        "id": "AXhfcNkbV4OlGYpD2K6-"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02354.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql, new int[] { 1, 2 } );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02354.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02354.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02354.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02354.java"
            },
            {
                "code": "param = name;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02354.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02354.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02354.java"
            }
        ],
        "id": "AXhfcMpNV4OlGYpD2Hbe"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02355.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql, new String[] {\"Column1\",\"Column2\"} );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02355.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02355.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02355.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02355.java"
            },
            {
                "code": "param = name;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02355.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02355.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02355.java"
            }
        ],
        "id": "AXhfcOSeV4OlGYpD2Nfb"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.execute(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02356.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02356.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02356.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02356.java"
            },
            {
                "code": "param = name;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02356.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02356.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02356.java"
            }
        ],
        "id": "AXhfcM5YV4OlGYpD2IW-"
    },
    {
        "taints": [
            {
                "code": "java.util.List<String> results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.query(sql,  new org.springframework.jdbc.core.RowMapper<String>() {\npublic String mapRow(java.sql.ResultSet rs, int rowNum) throws java.sql.SQLException {\ntry {\nreturn rs.getString(\"USERNAME\");\n} catch (java.sql.SQLException e) {\nif (org.owasp.benchmark.helpers.DatabaseHelper.hideSQLErrors) {\nreturn \"Error processing query.\";\n}\nelse throw e;\n}\n}\n});",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02357.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02357.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02357.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02357.java"
            },
            {
                "code": "param = name;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02357.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02357.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02357.java"
            }
        ],
        "id": "AXhfcNyyV4OlGYpD2LxM"
    },
    {
        "taints": [
            {
                "code": "Object results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql,new Object[]{}, String.class);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02361.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 USERNAME from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02361.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02361.java"
            },
            {
                "code": "else bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02361.java"
            },
            {
                "code": "param = name;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02361.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02361.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02361.java"
            }
        ],
        "id": "AXhfcOD-V4OlGYpD2Mve"
    },
    {
        "taints": [
            {
                "code": "= org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForRowSet(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02362.java"
            },
            {
                "code": "String sql = \"SELECT  * from USERS where USERNAME='foo' and PASSWORD='\"+ bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02362.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02362.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02362.java"
            },
            {
                "code": "param = name;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02362.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02362.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02362.java"
            }
        ],
        "id": "AXhfcNCjV4OlGYpD2I5f"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02364.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02364.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02364.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02364.java"
            },
            {
                "code": "param = name;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02364.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02364.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02364.java"
            }
        ],
        "id": "AXhfcMwdV4OlGYpD2H1w"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, java.sql.Statement.RETURN_GENERATED_KEYS );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02366.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02366.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02366.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02366.java"
            },
            {
                "code": "param = name;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02366.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02366.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02366.java"
            }
        ],
        "id": "AXhfcNJQV4OlGYpD2JUB"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, java.sql.Statement.RETURN_GENERATED_KEYS );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02368.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02368.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02368.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02368.java"
            },
            {
                "code": "param = name;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02368.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02368.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02368.java"
            }
        ],
        "id": "AXhfcOZ9V4OlGYpD2N62"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, new int[] {1,2} );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02369.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02369.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02369.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02369.java"
            },
            {
                "code": "param = name;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02369.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02369.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02369.java"
            }
        ],
        "id": "AXhfcNVjV4OlGYpD2KCi"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02449.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql, java.sql.ResultSet.TYPE_FORWARD_ONLY,\njava.sql.ResultSet.CONCUR_READ_ONLY, java.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02449.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02449.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02449.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02449.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest02449\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02449.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AXhfcNtfV4OlGYpD2Ldp"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02450.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.Statement.RETURN_GENERATED_KEYS );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02450.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02450.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02450.java"
            },
            {
                "code": "else bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02450.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest02450\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02450.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AXhfcNpkV4OlGYpD2LOv"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.execute(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02451.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02451.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02451.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02451.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest02451\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02451.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AXhfcNm8V4OlGYpD2LFR"
    },
    {
        "taints": [
            {
                "code": "int[] counts = statement.executeBatch();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02454.java"
            },
            {
                "code": "statement.addBatch( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02454.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02454.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02454.java"
            },
            {
                "code": "String bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02454.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest02454\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02454.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AXhfcN4nV4OlGYpD2MFG"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02455.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02455.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02455.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02455.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest02455\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02455.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AXhfcMJqV4OlGYpD2Fp1"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, new String[] {\"USERNAME\",\"PASSWORD\"} );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02456.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02456.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02456.java"
            },
            {
                "code": "else bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02456.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest02456\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02456.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AXhfcNt4V4OlGYpD2LfK"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02528.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02528.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02528.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02528.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02528.java"
            },
            {
                "code": "param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02528.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest02528\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02528.java"
            }
        ],
        "id": "AXhfcMFWV4OlGYpD2Fat"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02530.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql, java.sql.ResultSet.TYPE_FORWARD_ONLY,\njava.sql.ResultSet.CONCUR_READ_ONLY, java.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02530.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02530.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02530.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02530.java"
            },
            {
                "code": "param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02530.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest02530\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02530.java"
            }
        ],
        "id": "AXhfcOANV4OlGYpD2MhN"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02531.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.Statement.RETURN_GENERATED_KEYS );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02531.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02531.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02531.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02531.java"
            },
            {
                "code": "param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02531.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest02531\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02531.java"
            }
        ],
        "id": "AXhfcM__V4OlGYpD2Iva"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02533.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY,\njava.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02533.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02533.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02533.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02533.java"
            },
            {
                "code": "param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02533.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest02533\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02533.java"
            }
        ],
        "id": "AXhfcMtKV4OlGYpD2Hm5"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02534.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY,\njava.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02534.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02534.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02534.java"
            },
            {
                "code": "String bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02534.java"
            },
            {
                "code": "param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02534.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest02534\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02534.java"
            }
        ],
        "id": "AXhfcNvAV4OlGYpD2Lie"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.batchUpdate(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02536.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02536.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02536.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02536.java"
            },
            {
                "code": "param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02536.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest02536\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02536.java"
            }
        ],
        "id": "AXhfcM8xV4OlGYpD2IiQ"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.batchUpdate(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02537.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02537.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02537.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02537.java"
            },
            {
                "code": "param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02537.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest02537\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02537.java"
            }
        ],
        "id": "AXhfcOXQV4OlGYpD2NxV"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.batchUpdate(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02540.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02540.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02540.java"
            },
            {
                "code": "else bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02540.java"
            },
            {
                "code": "param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02540.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest02540\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02540.java"
            }
        ],
        "id": "AXhfcN6_V4OlGYpD2MQF"
    },
    {
        "taints": [
            {
                "code": "int[] counts = statement.executeBatch();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02541.java"
            },
            {
                "code": "statement.addBatch( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02541.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02541.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02541.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02541.java"
            },
            {
                "code": "param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02541.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest02541\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02541.java"
            }
        ],
        "id": "AXhfcNn4V4OlGYpD2LJv"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02542.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02542.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02542.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02542.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02542.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest02542\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02542.java"
            }
        ],
        "id": "AXhfcL6MV4OlGYpD2ExU"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, java.sql.Statement.RETURN_GENERATED_KEYS );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02543.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02543.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02543.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02543.java"
            },
            {
                "code": "param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02543.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest02543\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02543.java"
            }
        ],
        "id": "AXhfcOHkV4OlGYpD2M-c"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, new int[] { 1, 2 } );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02544.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02544.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02544.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02544.java"
            },
            {
                "code": "param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02544.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest02544\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02544.java"
            }
        ],
        "id": "AXhfcNIAV4OlGYpD2JPF"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02545.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02545.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02545.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02545.java"
            },
            {
                "code": "param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02545.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest02545\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02545.java"
            }
        ],
        "id": "AXhfcOHuV4OlGYpD2M-1"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, new int[] {1,2} );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02546.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02546.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02546.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02546.java"
            },
            {
                "code": "param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02546.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest02546\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02546.java"
            }
        ],
        "id": "AXhfcNPlV4OlGYpD2JrJ"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02625.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02625.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02625.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02625.java"
            },
            {
                "code": "bar = (String)map82391.get(\"keyB-82391\"); // get it back out",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02625.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02625.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02625.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02625.java"
            }
        ],
        "id": "AXhfcL4KV4OlGYpD2EqT"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02626.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02626.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02626.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02626.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02626.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02626.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02626.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02626.java"
            }
        ],
        "id": "AXhfcN_PV4OlGYpD2MeQ"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02628.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql, java.sql.ResultSet.TYPE_FORWARD_ONLY,\njava.sql.ResultSet.CONCUR_READ_ONLY );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02628.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02628.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02628.java"
            },
            {
                "code": "bar = (String)map23653.get(\"keyB-23653\"); // get it back out",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02628.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02628.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02628.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02628.java"
            }
        ],
        "id": "AXhfcOUqV4OlGYpD2NoA"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02630.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql, java.sql.ResultSet.TYPE_FORWARD_ONLY,\njava.sql.ResultSet.CONCUR_READ_ONLY, java.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02630.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02630.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02630.java"
            },
            {
                "code": "String bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02630.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02630.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02630.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02630.java"
            }
        ],
        "id": "AXhfcMnJV4OlGYpD2HUf"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02631.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02631.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02631.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02631.java"
            },
            {
                "code": "else bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02631.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02631.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02631.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02631.java"
            }
        ],
        "id": "AXhfcNiAV4OlGYpD2KxL"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02632.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02632.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02632.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02632.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02632.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02632.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02632.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02632.java"
            }
        ],
        "id": "AXhfcMeUV4OlGYpD2GzL"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02635.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY,\njava.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02635.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02635.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02635.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02635.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02635.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02635.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02635.java"
            }
        ],
        "id": "AXhfcNF2V4OlGYpD2JGV"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02637.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql, new String[] {\"Column1\",\"Column2\"} );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02637.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02637.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02637.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02637.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02637.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02637.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02637.java"
            }
        ],
        "id": "AXhfcMnMV4OlGYpD2HUv"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.batchUpdate(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02638.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02638.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02638.java"
            },
            {
                "code": "String bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02638.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02638.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02638.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02638.java"
            }
        ],
        "id": "AXhfcMY3V4OlGYpD2GgG"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.execute(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02640.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02640.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02640.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02640.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02640.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02640.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02640.java"
            }
        ],
        "id": "AXhfcNkyV4OlGYpD2K8L"
    },
    {
        "taints": [
            {
                "code": "java.util.List<String> results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.query(sql,  new org.springframework.jdbc.core.RowMapper<String>() {\npublic String mapRow(java.sql.ResultSet rs, int rowNum) throws java.sql.SQLException {\ntry {\nreturn rs.getString(\"USERNAME\");\n} catch (java.sql.SQLException e) {\nif (org.owasp.benchmark.helpers.DatabaseHelper.hideSQLErrors) {\nreturn \"Error processing query.\";\n}\nelse throw e;\n}\n}\n});",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02641.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02641.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02641.java"
            },
            {
                "code": "String bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02641.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02641.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02641.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02641.java"
            }
        ],
        "id": "AXhfcMepV4OlGYpD2Gz7"
    },
    {
        "taints": [
            {
                "code": "= org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForRowSet(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02644.java"
            },
            {
                "code": "String sql = \"SELECT  * from USERS where USERNAME='foo' and PASSWORD='\"+ bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02644.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02644.java"
            },
            {
                "code": "String bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02644.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02644.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02644.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02644.java"
            }
        ],
        "id": "AXhfcMSOV4OlGYpD2GHo"
    },
    {
        "taints": [
            {
                "code": "= org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForRowSet(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02645.java"
            },
            {
                "code": "String sql = \"SELECT  * from USERS where USERNAME='foo' and PASSWORD='\"+ bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02645.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02645.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02645.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02645.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02645.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02645.java"
            }
        ],
        "id": "AXhfcMV0V4OlGYpD2GUd"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.batchUpdate(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02646.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02646.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02646.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02646.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02646.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02646.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02646.java"
            }
        ],
        "id": "AXhfcNVYV4OlGYpD2KB8"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, new int[] { 1, 2 } );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02649.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02649.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02649.java"
            },
            {
                "code": "String bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02649.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02649.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02649.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02649.java"
            }
        ],
        "id": "AXhfcNaMV4OlGYpD2KSl"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, new int[] { 1, 2 } );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02650.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02650.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02650.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02650.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02650.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02650.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02650.java"
            }
        ],
        "id": "AXhfcNQ_V4OlGYpD2Jwl"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, new String[] { \"username\", \"password\" } );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02651.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02651.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02651.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02651.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02651.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02651.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02651.java"
            }
        ],
        "id": "AXhfcMOoV4OlGYpD2F6G"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02653.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02653.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02653.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02653.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02653.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02653.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02653.java"
            }
        ],
        "id": "AXhfcNS1V4OlGYpD2J3f"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02654.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02654.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02654.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02654.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02654.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02654.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02654.java"
            }
        ],
        "id": "AXhfcMA2V4OlGYpD2FK7"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02655.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02655.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02655.java"
            },
            {
                "code": "String bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02655.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02655.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02655.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02655.java"
            }
        ],
        "id": "AXhfcOVuV4OlGYpD2Nr-"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, java.sql.Statement.RETURN_GENERATED_KEYS );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02656.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02656.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02656.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02656.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02656.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02656.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02656.java"
            }
        ],
        "id": "AXhfcM21V4OlGYpD2INH"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, new int[] {1,2} );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02657.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02657.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02657.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02657.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02657.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02657.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02657.java"
            }
        ],
        "id": "AXhfcL-nV4OlGYpD2FD4"
    },
    {
        "taints": [
            {
                "code": "= org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForRowSet(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00026.java"
            },
            {
                "code": "String sql = \"SELECT  * from USERS where USERNAME='foo' and PASSWORD='\"+ param + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00026.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest00026\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00026.java"
            }
        ],
        "id": "AXhfcMCfV4OlGYpD2FRJ"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.execute(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00032.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + param + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00032.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00032.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest00032\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00032.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00032.java"
            }
        ],
        "id": "AXhfcN2fV4OlGYpD2L91"
    },
    {
        "taints": [
            {
                "code": "= org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForRowSet(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00033.java"
            },
            {
                "code": "String sql = \"SELECT  * from USERS where USERNAME='foo' and PASSWORD='\"+ param + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00033.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00033.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest00033\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00033.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00033.java"
            }
        ],
        "id": "AXhfcL_KV4OlGYpD2FFU"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.batchUpdate(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00104.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00104.java"
            },
            {
                "code": "else bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00104.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00104.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00104.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00104.java"
            }
        ],
        "id": "AXhfcN8mV4OlGYpD2MU8"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.execute(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00195.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00195.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00195.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00195.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest00195\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00195.java"
            }
        ],
        "id": "AXhfcNofV4OlGYpD2LLz"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.execute(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00196.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00196.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00196.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00196.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest00196\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00196.java"
            }
        ],
        "id": "AXhfcMo4V4OlGYpD2Hag"
    },
    {
        "taints": [
            {
                "code": "= org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForRowSet(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00339.java"
            },
            {
                "code": "String sql = \"SELECT  * from USERS where USERNAME='foo' and PASSWORD='\"+ bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00339.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00339.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00339.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00339.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest00339\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00339.java"
            }
        ],
        "id": "AXhfcNQwV4OlGYpD2Jvp"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.batchUpdate(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00340.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00340.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00340.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00340.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00340.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest00340\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00340.java"
            }
        ],
        "id": "AXhfcN9SV4OlGYpD2MWv"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.batchUpdate(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00341.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00341.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00341.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00341.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00341.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest00341\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00341.java"
            }
        ],
        "id": "AXhfcNAWV4OlGYpD2Iwd"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.batchUpdate(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00434.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00434.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00434.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest00434\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00434.java"
            }
        ],
        "id": "AXhfcMl_V4OlGYpD2HQH"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.batchUpdate(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00600.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00600.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00600.java"
            },
            {
                "code": "param = name;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00600.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00600.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00600.java"
            }
        ],
        "id": "AXhfcOLnV4OlGYpD2NIC"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.batchUpdate(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00769.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00769.java"
            },
            {
                "code": "bar = (String)map29572.get(\"keyB-29572\"); // get it back out",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00769.java"
            },
            {
                "code": "param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00769.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest00769\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00769.java"
            }
        ],
        "id": "AXhfcMArV4OlGYpD2FJ8"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.batchUpdate(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00840.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00840.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00840.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00840.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00840.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00840.java"
            }
        ],
        "id": "AXhfcNr-V4OlGYpD2LXq"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.batchUpdate(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00841.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00841.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00841.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00841.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00841.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00841.java"
            }
        ],
        "id": "AXhfcMAJV4OlGYpD2FIE"
    },
    {
        "taints": [
            {
                "code": "= org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForRowSet(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00845.java"
            },
            {
                "code": "String sql = \"SELECT  * from USERS where USERNAME='foo' and PASSWORD='\"+ bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00845.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00845.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00845.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00845.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00845.java"
            }
        ],
        "id": "AXhfcNM5V4OlGYpD2Jhq"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.batchUpdate(sql);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00846.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00846.java"
            },
            {
                "code": "String bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00846.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00846.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00846.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00846.java"
            }
        ],
        "id": "AXhfcMSvV4OlGYpD2GJg"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00008.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00008.java"
            },
            {
                "code": "String sql = \"{call \" + param + \"}\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00008.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00008.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest00008\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00008.java"
            }
        ],
        "id": "AXhfcNS_V4OlGYpD2J34"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00018.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ param + \"')\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00018.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00018.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00018.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest00018\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00018.java"
            }
        ],
        "id": "AXhfcNhZV4OlGYpD2Kuy"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00024.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY,\njava.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00024.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ param +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00024.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest00024\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00024.java"
            }
        ],
        "id": "AXhfcNpQV4OlGYpD2LNy"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00027.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ param + \"')\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00027.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest00027\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00027.java"
            }
        ],
        "id": "AXhfcNHJV4OlGYpD2JK6"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, java.sql.Statement.RETURN_GENERATED_KEYS );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00034.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ param +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00034.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00034.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest00034\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00034.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00034.java"
            }
        ],
        "id": "AXhfcOS8V4OlGYpD2Ng6"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, new int[] {1,2} );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00043.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ param + \"')\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00043.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest00043\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00043.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AXhfcMwGV4OlGYpD2H0R"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00100.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY,\njava.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00100.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00100.java"
            },
            {
                "code": "bar = (String)map72344.get(\"keyB-72344\"); // get it back out",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00100.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00100.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00100.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00100.java"
            }
        ],
        "id": "AXhfcMnGV4OlGYpD2HUO"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, new String[] {\"USERNAME\",\"PASSWORD\"} );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00115.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00115.java"
            },
            {
                "code": "bar = (String)map11928.get(\"keyB-11928\"); // get it back out",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00115.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00115.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00115.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00115.java"
            }
        ],
        "id": "AXhfcNrfV4OlGYpD2LWN"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00191.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql, java.sql.ResultSet.TYPE_FORWARD_ONLY,\njava.sql.ResultSet.CONCUR_READ_ONLY );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00191.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00191.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00191.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00191.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest00191\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00191.java"
            }
        ],
        "id": "AXhfcMIdV4OlGYpD2FlQ"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00192.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00192.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00192.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00192.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00192.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest00192\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00192.java"
            }
        ],
        "id": "AXhfcOFZV4OlGYpD2M1Z"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00193.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql, new String[] {\"Column1\",\"Column2\"} );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00193.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00193.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00193.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00193.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest00193\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00193.java"
            }
        ],
        "id": "AXhfcMgiV4OlGYpD2G7i"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, new String[] {\"USERNAME\",\"PASSWORD\"} );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00203.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00203.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00203.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00203.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest00203\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00203.java"
            }
        ],
        "id": "AXhfcOYBV4OlGYpD2N0I"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, new String[] {\"USERNAME\",\"PASSWORD\"} );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00204.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00204.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00204.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00204.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest00204\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00204.java"
            }
        ],
        "id": "AXhfcMjiV4OlGYpD2HHI"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00328.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00328.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00328.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00328.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00328.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00328.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest00328\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00328.java"
            }
        ],
        "id": "AXhfcL3zV4OlGYpD2Eo6"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00329.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00329.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00329.java"
            },
            {
                "code": "else bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00329.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00329.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00329.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest00329\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00329.java"
            }
        ],
        "id": "AXhfcNh2V4OlGYpD2Kwt"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00333.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00333.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00333.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00333.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00333.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00333.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest00333\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00333.java"
            }
        ],
        "id": "AXhfcMsiV4OlGYpD2Hkn"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00335.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql, new int[] { 1, 2 } );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00335.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00335.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00335.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00335.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00335.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest00335\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00335.java"
            }
        ],
        "id": "AXhfcL4CV4OlGYpD2Ep3"
    },
    {
        "taints": [
            {
                "code": "Object results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql,new Object[]{}, String.class);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00337.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 USERNAME from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00337.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00337.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00337.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00337.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest00337\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00337.java"
            }
        ],
        "id": "AXhfcNtNV4OlGYpD2Lcy"
    },
    {
        "taints": [
            {
                "code": "Object results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql,new Object[]{}, String.class);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00338.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 USERNAME from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00338.java"
            },
            {
                "code": "else bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00338.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00338.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00338.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest00338\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00338.java"
            }
        ],
        "id": "AXhfcMFdV4OlGYpD2FbC"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, new String[] { \"username\", \"password\" } );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00342.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00342.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00342.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00342.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00342.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest00342\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00342.java"
            }
        ],
        "id": "AXhfcL77V4OlGYpD2E5P"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, new String[] { \"username\", \"password\" } );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00343.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00343.java"
            },
            {
                "code": "else bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00343.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00343.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00343.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest00343\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00343.java"
            }
        ],
        "id": "AXhfcNgIV4OlGYpD2KqZ"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00344.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00344.java"
            },
            {
                "code": "else bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00344.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00344.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00344.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest00344\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00344.java"
            }
        ],
        "id": "AXhfcMeGV4OlGYpD2Gyg"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00428.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00428.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00428.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00428.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest00428\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00428.java"
            }
        ],
        "id": "AXhfcMYAV4OlGYpD2Gch"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00429.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY,\njava.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00429.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00429.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00429.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest00429\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00429.java"
            }
        ],
        "id": "AXhfcNbMV4OlGYpD2KWm"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00430.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY,\njava.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00430.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00430.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00430.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest00430\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00430.java"
            }
        ],
        "id": "AXhfcMrQV4OlGYpD2HgA"
    },
    {
        "taints": [
            {
                "code": "java.util.List<String> results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.query(sql,  new org.springframework.jdbc.core.RowMapper<String>() {\npublic String mapRow(java.sql.ResultSet rs, int rowNum) throws java.sql.SQLException {\ntry {\nreturn rs.getString(\"USERNAME\");\n} catch (java.sql.SQLException e) {\nif (org.owasp.benchmark.helpers.DatabaseHelper.hideSQLErrors) {\nreturn \"Error processing query.\";\n}\nelse throw e;\n}\n}\n});",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00431.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00431.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00431.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest00431\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00431.java"
            }
        ],
        "id": "AXhfcOLjV4OlGYpD2NH5"
    },
    {
        "taints": [
            {
                "code": "int[] counts = statement.executeBatch();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00435.java"
            },
            {
                "code": "statement.addBatch( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00435.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00435.java"
            },
            {
                "code": "bar = (String)map86691.get(\"keyB-86691\"); // get it back out",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00435.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest00435\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00435.java"
            }
        ],
        "id": "AXhfcMblV4OlGYpD2GpU"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00436.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00436.java"
            },
            {
                "code": "else bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00436.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest00436\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00436.java"
            }
        ],
        "id": "AXhfcNUcV4OlGYpD2J9p"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, new int[] { 1, 2 } );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00437.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00437.java"
            },
            {
                "code": "else bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00437.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest00437\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00437.java"
            }
        ],
        "id": "AXhfcM-1V4OlGYpD2Iqh"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, new String[] { \"username\", \"password\" } );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00438.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00438.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00438.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest00438\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00438.java"
            }
        ],
        "id": "AXhfcOUzV4OlGYpD2Nog"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00439.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00439.java"
            },
            {
                "code": "String bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00439.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest00439\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00439.java"
            }
        ],
        "id": "AXhfcNbBV4OlGYpD2KV0"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, new int[] {1,2} );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00441.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00441.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00441.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest00441\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00441.java"
            }
        ],
        "id": "AXhfcN0XV4OlGYpD2L1k"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00510.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql, java.sql.ResultSet.TYPE_FORWARD_ONLY,\njava.sql.ResultSet.CONCUR_READ_ONLY, java.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00510.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00510.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00510.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00510.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest00510\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00510.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00510.java"
            }
        ],
        "id": "AXhfcNHlV4OlGYpD2JNe"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00512.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00512.java"
            },
            {
                "code": "String bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00512.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00512.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest00512\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00512.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00512.java"
            }
        ],
        "id": "AXhfcMTGV4OlGYpD2GK6"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00514.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00514.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00514.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00514.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest00514\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00514.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00514.java"
            }
        ],
        "id": "AXhfcNeWV4OlGYpD2Kjl"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, new int[] { 1, 2 } );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00515.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00515.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00515.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00515.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest00515\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00515.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00515.java"
            }
        ],
        "id": "AXhfcL7RV4OlGYpD2E2_"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, new int[] { 1, 2 } );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00516.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00516.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00516.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00516.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest00516\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00516.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00516.java"
            }
        ],
        "id": "AXhfcOTMV4OlGYpD2Nhl"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, new String[] { \"username\", \"password\" } );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00517.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00517.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00517.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00517.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest00517\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00517.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00517.java"
            }
        ],
        "id": "AXhfcMzMV4OlGYpD2IAR"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, new int[] {1,2} );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00518.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00518.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00518.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00518.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest00518\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00518.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00518.java"
            }
        ],
        "id": "AXhfcMWmV4OlGYpD2GXf"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00594.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql, new String[] {\"Column1\",\"Column2\"} );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00594.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00594.java"
            },
            {
                "code": "bar = (String)map29056.get(\"keyB-29056\"); // get it back out",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00594.java"
            },
            {
                "code": "param = name;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00594.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00594.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00594.java"
            }
        ],
        "id": "AXhfcNhhV4OlGYpD2KvL"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00672.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00672.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00672.java"
            },
            {
                "code": "else bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00672.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest00672\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00672.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AXhfcNWkV4OlGYpD2KGb"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00673.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00673.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00673.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00673.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest00673\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00673.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AXhfcM9CV4OlGYpD2Ijp"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00675.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql, new int[] { 1, 2 } );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00675.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00675.java"
            },
            {
                "code": "else bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00675.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest00675\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00675.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AXhfcMxPV4OlGYpD2H4S"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00676.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql, new String[] {\"Column1\",\"Column2\"} );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00676.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00676.java"
            },
            {
                "code": "else bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00676.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest00676\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00676.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AXhfcL1uV4OlGYpD2EhZ"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00681.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00681.java"
            },
            {
                "code": "String bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00681.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest00681\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00681.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AXhfcM-WV4OlGYpD2Ioo"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00682.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00682.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00682.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest00682\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00682.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AXhfcN9CV4OlGYpD2MWL"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00760.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00760.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00760.java"
            },
            {
                "code": "bar = (String)map18915.get(\"keyB-18915\"); // get it back out",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00760.java"
            },
            {
                "code": "param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00760.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest00760\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00760.java"
            }
        ],
        "id": "AXhfcN-5V4OlGYpD2Mci"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00761.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00761.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00761.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00761.java"
            },
            {
                "code": "param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00761.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest00761\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00761.java"
            }
        ],
        "id": "AXhfcMqkV4OlGYpD2HdT"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00762.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql, java.sql.ResultSet.TYPE_FORWARD_ONLY,\njava.sql.ResultSet.CONCUR_READ_ONLY, java.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00762.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00762.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00762.java"
            },
            {
                "code": "param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00762.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest00762\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00762.java"
            }
        ],
        "id": "AXhfcNo7V4OlGYpD2LM6"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00763.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql, new int[] { 1, 2 } );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00763.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00763.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00763.java"
            },
            {
                "code": "param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00763.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest00763\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00763.java"
            }
        ],
        "id": "AXhfcMF_V4OlGYpD2FdU"
    },
    {
        "taints": [
            {
                "code": "int[] counts = statement.executeBatch();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00770.java"
            },
            {
                "code": "statement.addBatch( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00770.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00770.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00770.java"
            },
            {
                "code": "param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00770.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest00770\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00770.java"
            }
        ],
        "id": "AXhfcMC8V4OlGYpD2FSy"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00771.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00771.java"
            },
            {
                "code": "bar = (String)map49960.get(\"keyB-49960\"); // get it back out",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00771.java"
            },
            {
                "code": "param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00771.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest00771\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00771.java"
            }
        ],
        "id": "AXhfcN4yV4OlGYpD2MGK"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00772.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00772.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00772.java"
            },
            {
                "code": "param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00772.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest00772\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00772.java"
            }
        ],
        "id": "AXhfcNFEV4OlGYpD2JD0"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, java.sql.Statement.RETURN_GENERATED_KEYS );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00774.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00774.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00774.java"
            },
            {
                "code": "param = values[0];",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00774.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest00774\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00774.java"
            }
        ],
        "id": "AXhfcNkwV4OlGYpD2K79"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00037.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY,\njava.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00037.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ param +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00037.java"
            },
            {
                "code": "param = name;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00037.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00037.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00037.java"
            }
        ],
        "id": "AXhfcNJGV4OlGYpD2JTr"
    },
    {
        "taints": [
            {
                "code": "java.util.List<String> results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.query(sql,  new org.springframework.jdbc.core.RowMapper<String>() {\npublic String mapRow(java.sql.ResultSet rs, int rowNum) throws java.sql.SQLException {\ntry {\nreturn rs.getString(\"USERNAME\");\n} catch (java.sql.SQLException e) {\nif (org.owasp.benchmark.helpers.DatabaseHelper.hideSQLErrors) {\nreturn \"Error processing query.\";\n}\nelse throw e;\n}\n}\n});",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00038.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + param + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00038.java"
            },
            {
                "code": "param = name;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00038.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00038.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00038.java"
            }
        ],
        "id": "AXhfcMRNV4OlGYpD2GEX"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00101.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql, new String[] {\"Column1\",\"Column2\"} );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00101.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00101.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00101.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00101.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00101.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00101.java"
            }
        ],
        "id": "AXhfcMLgV4OlGYpD2Fv7"
    },
    {
        "taints": [
            {
                "code": "Object results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql,new Object[]{}, String.class);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00103.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 USERNAME from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00103.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00103.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00103.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00103.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00103.java"
            }
        ],
        "id": "AXhfcMO1V4OlGYpD2F6n"
    },
    {
        "taints": [
            {
                "code": "int[] counts = statement.executeBatch();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00105.java"
            },
            {
                "code": "statement.addBatch( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00105.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00105.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00105.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00105.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00105.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00105.java"
            }
        ],
        "id": "AXhfcM-xV4OlGYpD2IqZ"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, java.sql.Statement.RETURN_GENERATED_KEYS );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00106.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00106.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00106.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00106.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00106.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00106.java"
            }
        ],
        "id": "AXhfcMCCV4OlGYpD2FPn"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, new int[] { 1, 2 } );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00108.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00108.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00108.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00108.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00108.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00108.java"
            }
        ],
        "id": "AXhfcNdpV4OlGYpD2Kf-"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00111.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00111.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00111.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00111.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00111.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00111.java"
            }
        ],
        "id": "AXhfcMxLV4OlGYpD2H4J"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00112.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00112.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00112.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00112.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00112.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00112.java"
            }
        ],
        "id": "AXhfcOWmV4OlGYpD2NvB"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, new int[] {1,2} );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00114.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00114.java"
            },
            {
                "code": "else bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00114.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00114.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00114.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00114.java"
            }
        ],
        "id": "AXhfcN-qV4OlGYpD2Mby"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00590.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql, java.sql.ResultSet.TYPE_FORWARD_ONLY,\njava.sql.ResultSet.CONCUR_READ_ONLY, java.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00590.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00590.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00590.java"
            },
            {
                "code": "param = name;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00590.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00590.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00590.java"
            }
        ],
        "id": "AXhfcNEvV4OlGYpD2JCf"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00591.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.Statement.RETURN_GENERATED_KEYS );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00591.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00591.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00591.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "param = name;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00591.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00591.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00591.java"
            }
        ],
        "id": "AXhfcOMbV4OlGYpD2NKm"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00593.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY,\njava.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00593.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00593.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00593.java"
            },
            {
                "code": "param = name;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00593.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00593.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00593.java"
            }
        ],
        "id": "AXhfcMduV4OlGYpD2GxT"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00595.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql, new String[] {\"Column1\",\"Column2\"} );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00595.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00595.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00595.java"
            },
            {
                "code": "param = name;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00595.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00595.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00595.java"
            }
        ],
        "id": "AXhfcMl4V4OlGYpD2HQA"
    },
    {
        "taints": [
            {
                "code": "int[] counts = statement.executeBatch();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00601.java"
            },
            {
                "code": "statement.addBatch( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00601.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00601.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00601.java"
            },
            {
                "code": "param = name;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00601.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00601.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00601.java"
            }
        ],
        "id": "AXhfcNLtV4OlGYpD2JdN"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, java.sql.Statement.RETURN_GENERATED_KEYS );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00603.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00603.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00603.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "param = name;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00603.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00603.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00603.java"
            }
        ],
        "id": "AXhfcMliV4OlGYpD2HOR"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00605.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00605.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00605.java"
            },
            {
                "code": "param = name;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00605.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00605.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00605.java"
            }
        ],
        "id": "AXhfcMJVV4OlGYpD2Fo-"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00606.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00606.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00606.java"
            },
            {
                "code": "param = name;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00606.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00606.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00606.java"
            }
        ],
        "id": "AXhfcM-4V4OlGYpD2Iqt"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00838.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY,\njava.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00838.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00838.java"
            },
            {
                "code": "bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00838.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00838.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00838.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00838.java"
            }
        ],
        "id": "AXhfcNtXV4OlGYpD2LdK"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00839.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql, new String[] {\"Column1\",\"Column2\"} );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00839.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00839.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00839.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00839.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00839.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00839.java"
            }
        ],
        "id": "AXhfcMQ8V4OlGYpD2GDX"
    },
    {
        "taints": [
            {
                "code": "int[] counts = statement.executeBatch();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00847.java"
            },
            {
                "code": "statement.addBatch( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00847.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00847.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00847.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00847.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00847.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00847.java"
            }
        ],
        "id": "AXhfcMvLV4OlGYpD2Hv-"
    },
    {
        "taints": [
            {
                "code": "int[] counts = statement.executeBatch();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00848.java"
            },
            {
                "code": "statement.addBatch( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00848.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00848.java"
            },
            {
                "code": "String bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00848.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00848.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00848.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00848.java"
            }
        ],
        "id": "AXhfcOS1V4OlGYpD2Ngi"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, new int[] { 1, 2 } );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00849.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00849.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00849.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00849.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00849.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00849.java"
            }
        ],
        "id": "AXhfcL-_V4OlGYpD2FE8"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery( sql );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00850.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00850.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00850.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00850.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00850.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00850.java"
            }
        ],
        "id": "AXhfcM-ZV4OlGYpD2Io0"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, new String[] {\"USERNAME\",\"PASSWORD\"} );",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00851.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00851.java"
            },
            {
                "code": "else bar = param;",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00851.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00851.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00851.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "Magni-PM_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00851.java"
            }
        ],
        "id": "AXhfcOCGV4OlGYpD2Mog"
    },
    {
        "taints": [
            {
                "code": "ResultSet rs = ps.executeQuery()) {",
                "file": "03-dmaap-datarouter-master-with-libs:datarouter-prov/src/main/java/org/onap/dmaap/datarouter/provisioning/StatisticsServlet.java"
            },
            {
                "code": "PreparedStatement ps = makePreparedStatement(map, conn);",
                "file": "03-dmaap-datarouter-master-with-libs:datarouter-prov/src/main/java/org/onap/dmaap/datarouter/provisioning/StatisticsServlet.java"
            },
            {
                "code": "return conn.prepareStatement(sql);",
                "file": "03-dmaap-datarouter-master-with-libs:datarouter-prov/src/main/java/org/onap/dmaap/datarouter/provisioning/StatisticsServlet.java"
            },
            {
                "code": "sql =  \"SELECT * FROM LOG_RECORDS WHERE id in(\" + feedids + \") and subid = \" + subid;",
                "file": "03-dmaap-datarouter-master-with-libs:datarouter-prov/src/main/java/org/onap/dmaap/datarouter/provisioning/StatisticsServlet.java"
            },
            {
                "code": "private void getRecordsForSQL(Map<String, String> map, String outputType, ServletOutputStream out,",
                "file": "03-dmaap-datarouter-master-with-libs:datarouter-prov/src/main/java/org/onap/dmaap/datarouter/provisioning/StatisticsServlet.java"
            },
            {
                "code": "this.getRecordsForSQL(map, outputType, resp.getOutputStream(), resp);",
                "file": "03-dmaap-datarouter-master-with-libs:datarouter-prov/src/main/java/org/onap/dmaap/datarouter/provisioning/StatisticsServlet.java"
            },
            {
                "code": "map.put(FEEDIDS, req.getParameter(FEEDID));",
                "file": "03-dmaap-datarouter-master-with-libs:datarouter-prov/src/main/java/org/onap/dmaap/datarouter/provisioning/StatisticsServlet.java"
            }
        ],
        "id": "AXhgYjYgkmxPzkmT2e2V"
    },
    {
        "taints": [
            {
                "code": "ResultSet rs = ps.executeQuery()) {",
                "file": "03-dmaap-datarouter-master-with-preparser-libs:datarouter-prov/src/main/java/org/onap/dmaap/datarouter/provisioning/StatisticsServlet.java"
            },
            {
                "code": "PreparedStatement ps = makePreparedStatement(map, conn);",
                "file": "03-dmaap-datarouter-master-with-preparser-libs:datarouter-prov/src/main/java/org/onap/dmaap/datarouter/provisioning/StatisticsServlet.java"
            },
            {
                "code": "return conn.prepareStatement(sql);",
                "file": "03-dmaap-datarouter-master-with-preparser-libs:datarouter-prov/src/main/java/org/onap/dmaap/datarouter/provisioning/StatisticsServlet.java"
            },
            {
                "code": "sql =  \"SELECT * FROM LOG_RECORDS WHERE id in(\" + feedids + \") and subid = \" + subid;",
                "file": "03-dmaap-datarouter-master-with-preparser-libs:datarouter-prov/src/main/java/org/onap/dmaap/datarouter/provisioning/StatisticsServlet.java"
            },
            {
                "code": "private void getRecordsForSQL(Map<String, String> map, String outputType, ServletOutputStream out,",
                "file": "03-dmaap-datarouter-master-with-preparser-libs:datarouter-prov/src/main/java/org/onap/dmaap/datarouter/provisioning/StatisticsServlet.java"
            },
            {
                "code": "this.getRecordsForSQL(map, outputType, resp.getOutputStream(), resp);",
                "file": "03-dmaap-datarouter-master-with-preparser-libs:datarouter-prov/src/main/java/org/onap/dmaap/datarouter/provisioning/StatisticsServlet.java"
            },
            {
                "code": "map.put(FEEDIDS, req.getParameter(FEEDID));",
                "file": "03-dmaap-datarouter-master-with-preparser-libs:datarouter-prov/src/main/java/org/onap/dmaap/datarouter/provisioning/StatisticsServlet.java"
            }
        ],
        "id": "AXhgYQjdefDvBbC-Ci74"
    },
    {
        "taints": [
            {
                "code": "return JDBC_TEMPLATE.query(sql, new BookMapper(), search.getBookYearOfPublicationMin(), search.getBookYearOfPublicationMax(), search.getAuthorYearOfBirthMin(), search.getAuthorYearOfBirthMax());",
                "file": "04-GodelTestTask-main-with-libs:src/main/java/com/kuropatin/library/repositories/SearchRepositoryImpl.java"
            },
            {
                "code": "String sql = \"SELECT * FROM books \" +\n\"WHERE LOWER(book_name) LIKE LOWER('\" + search.getBookName() + \"%') \" +\n\"AND year_of_publication BETWEEN ? AND ? \" +\n\"AND LOWER(publisher) LIKE LOWER('\" + search.getBookPublisher() + \"%') \" +\n\"AND id IN (\" +\n\"SELECT book_author.book_id \" +\n\"FROM authors, book_author \" +\n\"WHERE book_author.author_id = authors.id \" +\n\"AND LOWER(authors.first_name) LIKE LOWER('\" + search.getAuthorFirstName() + \"%') \" +\n\"AND LOWER(authors.last_name) LIKE LOWER('\" + search.getAuthorLastName() + \"%') \" +\n\"AND CAST(SUBSTRING(authors.birth_date, 7) as int) BETWEEN ? AND ? \" +\nsex +\n\") ORDER BY \" + search.getSortBy() + \" \" + searchDirection;",
                "file": "04-GodelTestTask-main-with-libs:src/main/java/com/kuropatin/library/repositories/SearchRepositoryImpl.java"
            },
            {
                "code": "public List<Book> findBooks(Search search, String sex, String searchDirection) {",
                "file": "04-GodelTestTask-main-with-libs:src/main/java/com/kuropatin/library/repositories/SearchRepositoryImpl.java"
            },
            {
                "code": "public List<Book> findBooks(Search search) {",
                "file": "04-GodelTestTask-main-with-libs:src/main/java/com/kuropatin/library/services/SearchService.java"
            }
        ],
        "id": "AXhgX5SHkmxPzkmT2eou"
    },
    {
        "taints": [
            {
                "code": "return JDBC_TEMPLATE.query(sql, new BookMapper(), search.getBookYearOfPublicationMin(), search.getBookYearOfPublicationMax(), search.getAuthorYearOfBirthMin(), search.getAuthorYearOfBirthMax());",
                "file": "04-GodelTestTask-main-with-preparser-libs:src/main/java/com/kuropatin/library/repositories/SearchRepositoryImpl.java"
            },
            {
                "code": "String sql = \"SELECT * FROM books \" +\n\"WHERE LOWER(book_name) LIKE LOWER('\" + search.getBookName() + \"%') \" +\n\"AND year_of_publication BETWEEN ? AND ? \" +\n\"AND LOWER(publisher) LIKE LOWER('\" + search.getBookPublisher() + \"%') \" +\n\"AND id IN (\" +\n\"SELECT book_author.book_id \" +\n\"FROM authors, book_author \" +\n\"WHERE book_author.author_id = authors.id \" +\n\"AND LOWER(authors.first_name) LIKE LOWER('\" + search.getAuthorFirstName() + \"%') \" +\n\"AND LOWER(authors.last_name) LIKE LOWER('\" + search.getAuthorLastName() + \"%') \" +\n\"AND CAST(SUBSTRING(authors.birth_date, 7) as int) BETWEEN ? AND ? \" +\nsex +\n\") ORDER BY \" + search.getSortBy() + \" \" + searchDirection;",
                "file": "04-GodelTestTask-main-with-preparser-libs:src/main/java/com/kuropatin/library/repositories/SearchRepositoryImpl.java"
            },
            {
                "code": "public List<Book> findBooks(Search search, String sex, String searchDirection) {",
                "file": "04-GodelTestTask-main-with-preparser-libs:src/main/java/com/kuropatin/library/repositories/SearchRepositoryImpl.java"
            },
            {
                "code": "public List<Book> findBooks(Search search) {",
                "file": "04-GodelTestTask-main-with-preparser-libs:src/main/java/com/kuropatin/library/services/SearchService.java"
            }
        ],
        "id": "AXhgX0Y7eE3ewwtg6LnD"
    },
    {
        "taints": [
            {
                "code": "ResultSet rs = st.executeQuery(check_existing_request);",
                "file": "07-orderms-master-with-libs:src/main/java/entreprisecorp/database/AdminDbHandler.java"
            },
            {
                "code": "String check_existing_request = \"SELECT * FROM \" + ADMIN_TABLE_NAME + \" WHERE `\" + ADMIN_DB_EMAIL + \"`='\" + admin.getEmail() + \"'\";",
                "file": "07-orderms-master-with-libs:src/main/java/entreprisecorp/database/AdminDbHandler.java"
            },
            {
                "code": "public boolean insertAdmin(Admin admin) {",
                "file": "07-orderms-master-with-libs:src/main/java/entreprisecorp/database/AdminDbHandler.java"
            },
            {
                "code": "boolean success = App.adminDbHandler.insertAdmin(createdAdmin);",
                "file": "07-orderms-master-with-libs:src/main/java/entreprisecorp/restservices/controllers/AdminController.java"
            },
            {
                "code": "public ResponseSuccess register(@RequestBody Admin admin)",
                "file": "07-orderms-master-with-libs:src/main/java/entreprisecorp/restservices/controllers/AdminController.java"
            }
        ],
        "id": "AXhgXrif6cIcccuxtHe6"
    },
    {
        "taints": [
            {
                "code": "ResultSet rs = st.executeQuery(sql)) {",
                "file": "07-orderms-master-with-libs:src/main/java/entreprisecorp/database/AdminDbHandler.java"
            },
            {
                "code": "String sql = \"SELECT * FROM \" + ADMIN_TABLE_NAME + \" WHERE `\" + ADMIN_DB_EMAIL + \"`='\" + email + \"'\";",
                "file": "07-orderms-master-with-libs:src/main/java/entreprisecorp/database/AdminDbHandler.java"
            },
            {
                "code": "public Admin connectAdmin(String email, String password) {",
                "file": "07-orderms-master-with-libs:src/main/java/entreprisecorp/database/AdminDbHandler.java"
            },
            {
                "code": "Admin connectedAdmin = App.adminDbHandler.connectAdmin(admin.getEmail(), admin.getPassword());",
                "file": "07-orderms-master-with-libs:src/main/java/entreprisecorp/restservices/controllers/AdminController.java"
            },
            {
                "code": "public Response login(@RequestBody Admin admin)",
                "file": "07-orderms-master-with-libs:src/main/java/entreprisecorp/restservices/controllers/AdminController.java"
            }
        ],
        "id": "AXhgXrif6cIcccuxtHe8"
    },
    {
        "taints": [
            {
                "code": "ResultSet rs = st.executeQuery(sql)) {",
                "file": "07-orderms-master-with-libs:src/main/java/entreprisecorp/database/AdminDbHandler.java"
            },
            {
                "code": "String sql = \"SELECT \" + ADMIN_DB_TABLE_NAME_FEATURES + \" FROM \" + ADMIN_TABLE_NAME + \" WHERE `\" + ADMIN_DB_APIKEY + \"`='\" + apiKey + \"'\";",
                "file": "07-orderms-master-with-libs:src/main/java/entreprisecorp/database/AdminDbHandler.java"
            },
            {
                "code": "public String getTableNameFromApiKey(String apiKey){",
                "file": "07-orderms-master-with-libs:src/main/java/entreprisecorp/database/AdminDbHandler.java"
            },
            {
                "code": "String tableNameFromApiKey = App.adminDbHandler.getTableNameFromApiKey(matchWithApiKey.getApiKey());",
                "file": "07-orderms-master-with-libs:src/main/java/entreprisecorp/restservices/controllers/ELOController.java"
            },
            {
                "code": "public ResponseSuccess returnResultMatch(@RequestBody MatchWithApiKey matchWithApiKey){",
                "file": "07-orderms-master-with-libs:src/main/java/entreprisecorp/restservices/controllers/ELOController.java"
            }
        ],
        "id": "AXhgXrif6cIcccuxtHe7"
    },
    {
        "taints": [
            {
                "code": "statement.executeUpdate(FEATURE_DB_SQL);",
                "file": "07-orderms-master-with-libs:src/main/java/entreprisecorp/database/FeaturesDbHandler.java"
            },
            {
                "code": "String FEATURE_DB_SQL = \"CREATE TABLE IF NOT EXISTS \" + nameTable + \"(id INT NOT NULL AUTO_INCREMENT, \"\n+ FEATURE_DB_TEXTFEATURE + \" VARCHAR(255), \" + FEATURE_DB_ELO + \" INT,\"\n+ FEATURE_DB_AUTHOR + \" VARCHAR(255),\"\n+\" PRIMARY KEY ( id ))\";",
                "file": "07-orderms-master-with-libs:src/main/java/entreprisecorp/database/FeaturesDbHandler.java"
            },
            {
                "code": "public void CreateTable(String nameTable) throws SQLException {",
                "file": "07-orderms-master-with-libs:src/main/java/entreprisecorp/database/FeaturesDbHandler.java"
            },
            {
                "code": "App.featuresDbHandler.CreateTable(admin.getTableFeatures());",
                "file": "07-orderms-master-with-libs:src/main/java/entreprisecorp/database/AdminDbHandler.java"
            },
            {
                "code": "public boolean insertAdmin(Admin admin) {",
                "file": "07-orderms-master-with-libs:src/main/java/entreprisecorp/database/AdminDbHandler.java"
            },
            {
                "code": "boolean success = App.adminDbHandler.insertAdmin(createdAdmin);",
                "file": "07-orderms-master-with-libs:src/main/java/entreprisecorp/restservices/controllers/AdminController.java"
            },
            {
                "code": "public ResponseSuccess register(@RequestBody Admin admin)",
                "file": "07-orderms-master-with-libs:src/main/java/entreprisecorp/restservices/controllers/AdminController.java"
            }
        ],
        "id": "AXhgXrkg6cIcccuxtHf-"
    },
    {
        "taints": [
            {
                "code": "ResultSet rs = st.executeQuery(sql)) {",
                "file": "07-orderms-master-with-libs:src/main/java/entreprisecorp/database/FeaturesDbHandler.java"
            },
            {
                "code": "String sql = \"SELECT * FROM \" + nameTable + \" WHERE `\" + FEATURE_DB_AUTHOR + \"`='\" + emailAuthor + \"'\";",
                "file": "07-orderms-master-with-libs:src/main/java/entreprisecorp/database/FeaturesDbHandler.java"
            },
            {
                "code": "public ListFeatures getFeatureByAuthor(String emailAuthor, String nameTable) {",
                "file": "07-orderms-master-with-libs:src/main/java/entreprisecorp/database/FeaturesDbHandler.java"
            },
            {
                "code": "ListFeatures listFeatures = App.featuresDbHandler.getFeatureByAuthor(featureAndTableName.getEmail(),featureAndTableName.getTableName());",
                "file": "07-orderms-master-with-libs:src/main/java/entreprisecorp/restservices/controllers/FeaturesController.java"
            },
            {
                "code": "public ListFeatures getFeaturesAuthor(@RequestBody FeatureAndTableName featureAndTableName){",
                "file": "07-orderms-master-with-libs:src/main/java/entreprisecorp/restservices/controllers/FeaturesController.java"
            }
        ],
        "id": "AXhgXrkg6cIcccuxtHf8"
    },
    {
        "taints": [
            {
                "code": "ResultSet rs = st.executeQuery(sql)) {",
                "file": "07-orderms-master-with-libs:src/main/java/entreprisecorp/database/FeaturesDbHandler.java"
            },
            {
                "code": "String sql = \"SELECT * FROM \" + nameTable + \" ORDER BY \" + FEATURE_DB_ELO;",
                "file": "07-orderms-master-with-libs:src/main/java/entreprisecorp/database/FeaturesDbHandler.java"
            },
            {
                "code": "public ListFeatures getFeatureByTable(String nameTable) {",
                "file": "07-orderms-master-with-libs:src/main/java/entreprisecorp/database/FeaturesDbHandler.java"
            },
            {
                "code": "ListFeatures listFeatures = App.featuresDbHandler.getFeatureByTable(featureAndTableName.getTableName());",
                "file": "07-orderms-master-with-libs:src/main/java/entreprisecorp/restservices/controllers/FeaturesController.java"
            },
            {
                "code": "public ListFeatures getFeaturesTable(@RequestBody FeatureAndTableName featureAndTableName){",
                "file": "07-orderms-master-with-libs:src/main/java/entreprisecorp/restservices/controllers/FeaturesController.java"
            }
        ],
        "id": "AXhgXrkg6cIcccuxtHf9"
    },
    {
        "taints": [
            {
                "code": "ResultSet rs = st.executeQuery(check_existing_request)){",
                "file": "07-orderms-master-with-libs:src/main/java/entreprisecorp/database/UserDbHandler.java"
            },
            {
                "code": "String check_existing_request = \"SELECT * FROM \" + USER_TABLE_NAME + \" WHERE `\" + USER_DB_EMAIL + \"`='\" + u.getEmail() + \"'\";",
                "file": "07-orderms-master-with-libs:src/main/java/entreprisecorp/database/UserDbHandler.java"
            },
            {
                "code": "public boolean insertUser(User u) {",
                "file": "07-orderms-master-with-libs:src/main/java/entreprisecorp/database/UserDbHandler.java"
            },
            {
                "code": "boolean success = App.userDbHandler.insertUser(user);",
                "file": "07-orderms-master-with-libs:src/main/java/entreprisecorp/restservices/controllers/RegisterController.java"
            },
            {
                "code": "@RequestBody User user)",
                "file": "07-orderms-master-with-libs:src/main/java/entreprisecorp/restservices/controllers/RegisterController.java"
            }
        ],
        "id": "AXhgXrkX6cIcccuxtHfj"
    },
    {
        "taints": [
            {
                "code": "ResultSet rs = st.executeQuery(sql)) {",
                "file": "07-orderms-master-with-libs:src/main/java/entreprisecorp/database/UserDbHandler.java"
            },
            {
                "code": "String sql = \"SELECT * FROM \" + USER_TABLE_NAME + \" WHERE `\" + USER_DB_EMAIL + \"`='\" + email + \"'\";",
                "file": "07-orderms-master-with-libs:src/main/java/entreprisecorp/database/UserDbHandler.java"
            },
            {
                "code": "public User connectUser(String email, String password) {",
                "file": "07-orderms-master-with-libs:src/main/java/entreprisecorp/database/UserDbHandler.java"
            },
            {
                "code": "User connectedUser = App.userDbHandler.connectUser(user.getEmail(), user.getPassword());",
                "file": "07-orderms-master-with-libs:src/main/java/entreprisecorp/restservices/controllers/LoginController.java"
            },
            {
                "code": "public Response login(@RequestBody User user)",
                "file": "07-orderms-master-with-libs:src/main/java/entreprisecorp/restservices/controllers/LoginController.java"
            }
        ],
        "id": "AXhgXrkX6cIcccuxtHfk"
    },
    {
        "taints": [
            {
                "code": "ResultSet rs = st.executeQuery(check_existing_request);",
                "file": "07-orderms-master-with-preparser-libs:src/main/java/entreprisecorp/database/AdminDbHandler.java"
            },
            {
                "code": "String check_existing_request = \"SELECT * FROM \" + ADMIN_TABLE_NAME + \" WHERE `\" + ADMIN_DB_EMAIL + \"`='\" + admin.getEmail() + \"'\";",
                "file": "07-orderms-master-with-preparser-libs:src/main/java/entreprisecorp/database/AdminDbHandler.java"
            },
            {
                "code": "public boolean insertAdmin(Admin admin) {",
                "file": "07-orderms-master-with-preparser-libs:src/main/java/entreprisecorp/database/AdminDbHandler.java"
            },
            {
                "code": "boolean success = App.adminDbHandler.insertAdmin(createdAdmin);",
                "file": "07-orderms-master-with-preparser-libs:src/main/java/entreprisecorp/restservices/controllers/AdminController.java"
            },
            {
                "code": "public ResponseSuccess register(@RequestBody Admin admin)",
                "file": "07-orderms-master-with-preparser-libs:src/main/java/entreprisecorp/restservices/controllers/AdminController.java"
            }
        ],
        "id": "AXhgXncS01lXSQw-8_pc"
    },
    {
        "taints": [
            {
                "code": "ResultSet rs = st.executeQuery(sql)) {",
                "file": "07-orderms-master-with-preparser-libs:src/main/java/entreprisecorp/database/AdminDbHandler.java"
            },
            {
                "code": "String sql = \"SELECT * FROM \" + ADMIN_TABLE_NAME + \" WHERE `\" + ADMIN_DB_EMAIL + \"`='\" + email + \"'\";",
                "file": "07-orderms-master-with-preparser-libs:src/main/java/entreprisecorp/database/AdminDbHandler.java"
            },
            {
                "code": "public Admin connectAdmin(String email, String password) {",
                "file": "07-orderms-master-with-preparser-libs:src/main/java/entreprisecorp/database/AdminDbHandler.java"
            },
            {
                "code": "Admin connectedAdmin = App.adminDbHandler.connectAdmin(admin.getEmail(), admin.getPassword());",
                "file": "07-orderms-master-with-preparser-libs:src/main/java/entreprisecorp/restservices/controllers/AdminController.java"
            },
            {
                "code": "public Response login(@RequestBody Admin admin)",
                "file": "07-orderms-master-with-preparser-libs:src/main/java/entreprisecorp/restservices/controllers/AdminController.java"
            }
        ],
        "id": "AXhgXncS01lXSQw-8_pd"
    },
    {
        "taints": [
            {
                "code": "ResultSet rs = st.executeQuery(sql)) {",
                "file": "07-orderms-master-with-preparser-libs:src/main/java/entreprisecorp/database/AdminDbHandler.java"
            },
            {
                "code": "String sql = \"SELECT \" + ADMIN_DB_TABLE_NAME_FEATURES + \" FROM \" + ADMIN_TABLE_NAME + \" WHERE `\" + ADMIN_DB_APIKEY + \"`='\" + apiKey + \"'\";",
                "file": "07-orderms-master-with-preparser-libs:src/main/java/entreprisecorp/database/AdminDbHandler.java"
            },
            {
                "code": "public String getTableNameFromApiKey(String apiKey){",
                "file": "07-orderms-master-with-preparser-libs:src/main/java/entreprisecorp/database/AdminDbHandler.java"
            },
            {
                "code": "String tableNameFromApiKey = App.adminDbHandler.getTableNameFromApiKey(matchWithApiKey.getApiKey());",
                "file": "07-orderms-master-with-preparser-libs:src/main/java/entreprisecorp/restservices/controllers/ELOController.java"
            },
            {
                "code": "public ResponseSuccess returnResultMatch(@RequestBody MatchWithApiKey matchWithApiKey){",
                "file": "07-orderms-master-with-preparser-libs:src/main/java/entreprisecorp/restservices/controllers/ELOController.java"
            }
        ],
        "id": "AXhgXncS01lXSQw-8_pb"
    },
    {
        "taints": [
            {
                "code": "statement.executeUpdate(FEATURE_DB_SQL);",
                "file": "07-orderms-master-with-preparser-libs:src/main/java/entreprisecorp/database/FeaturesDbHandler.java"
            },
            {
                "code": "String FEATURE_DB_SQL = \"CREATE TABLE IF NOT EXISTS \" + nameTable + \"(id INT NOT NULL AUTO_INCREMENT, \"\n+ FEATURE_DB_TEXTFEATURE + \" VARCHAR(255), \" + FEATURE_DB_ELO + \" INT,\"\n+ FEATURE_DB_AUTHOR + \" VARCHAR(255),\"\n+\" PRIMARY KEY ( id ))\";",
                "file": "07-orderms-master-with-preparser-libs:src/main/java/entreprisecorp/database/FeaturesDbHandler.java"
            },
            {
                "code": "public void CreateTable(String nameTable) throws SQLException {",
                "file": "07-orderms-master-with-preparser-libs:src/main/java/entreprisecorp/database/FeaturesDbHandler.java"
            },
            {
                "code": "App.featuresDbHandler.CreateTable(admin.getTableFeatures());",
                "file": "07-orderms-master-with-preparser-libs:src/main/java/entreprisecorp/database/AdminDbHandler.java"
            },
            {
                "code": "public boolean insertAdmin(Admin admin) {",
                "file": "07-orderms-master-with-preparser-libs:src/main/java/entreprisecorp/database/AdminDbHandler.java"
            },
            {
                "code": "boolean success = App.adminDbHandler.insertAdmin(createdAdmin);",
                "file": "07-orderms-master-with-preparser-libs:src/main/java/entreprisecorp/restservices/controllers/AdminController.java"
            },
            {
                "code": "public ResponseSuccess register(@RequestBody Admin admin)",
                "file": "07-orderms-master-with-preparser-libs:src/main/java/entreprisecorp/restservices/controllers/AdminController.java"
            }
        ],
        "id": "AXhgXneR01lXSQw-8_qd"
    },
    {
        "taints": [
            {
                "code": "ResultSet rs = st.executeQuery(sql)) {",
                "file": "07-orderms-master-with-preparser-libs:src/main/java/entreprisecorp/database/FeaturesDbHandler.java"
            },
            {
                "code": "String sql = \"SELECT * FROM \" + nameTable + \" WHERE `\" + FEATURE_DB_AUTHOR + \"`='\" + emailAuthor + \"'\";",
                "file": "07-orderms-master-with-preparser-libs:src/main/java/entreprisecorp/database/FeaturesDbHandler.java"
            },
            {
                "code": "public ListFeatures getFeatureByAuthor(String emailAuthor, String nameTable) {",
                "file": "07-orderms-master-with-preparser-libs:src/main/java/entreprisecorp/database/FeaturesDbHandler.java"
            },
            {
                "code": "ListFeatures listFeatures = App.featuresDbHandler.getFeatureByAuthor(featureAndTableName.getEmail(),featureAndTableName.getTableName());",
                "file": "07-orderms-master-with-preparser-libs:src/main/java/entreprisecorp/restservices/controllers/FeaturesController.java"
            },
            {
                "code": "public ListFeatures getFeaturesAuthor(@RequestBody FeatureAndTableName featureAndTableName){",
                "file": "07-orderms-master-with-preparser-libs:src/main/java/entreprisecorp/restservices/controllers/FeaturesController.java"
            }
        ],
        "id": "AXhgXneR01lXSQw-8_qf"
    },
    {
        "taints": [
            {
                "code": "ResultSet rs = st.executeQuery(sql)) {",
                "file": "07-orderms-master-with-preparser-libs:src/main/java/entreprisecorp/database/FeaturesDbHandler.java"
            },
            {
                "code": "String sql = \"SELECT * FROM \" + nameTable + \" ORDER BY \" + FEATURE_DB_ELO;",
                "file": "07-orderms-master-with-preparser-libs:src/main/java/entreprisecorp/database/FeaturesDbHandler.java"
            },
            {
                "code": "public ListFeatures getFeatureByTable(String nameTable) {",
                "file": "07-orderms-master-with-preparser-libs:src/main/java/entreprisecorp/database/FeaturesDbHandler.java"
            },
            {
                "code": "ListFeatures listFeatures = App.featuresDbHandler.getFeatureByTable(featureAndTableName.getTableName());",
                "file": "07-orderms-master-with-preparser-libs:src/main/java/entreprisecorp/restservices/controllers/FeaturesController.java"
            },
            {
                "code": "public ListFeatures getFeaturesTable(@RequestBody FeatureAndTableName featureAndTableName){",
                "file": "07-orderms-master-with-preparser-libs:src/main/java/entreprisecorp/restservices/controllers/FeaturesController.java"
            }
        ],
        "id": "AXhgXneR01lXSQw-8_qe"
    },
    {
        "taints": [
            {
                "code": "ResultSet rs = st.executeQuery(check_existing_request)){",
                "file": "07-orderms-master-with-preparser-libs:src/main/java/entreprisecorp/database/UserDbHandler.java"
            },
            {
                "code": "String check_existing_request = \"SELECT * FROM \" + USER_TABLE_NAME + \" WHERE `\" + USER_DB_EMAIL + \"`='\" + u.getEmail() + \"'\";",
                "file": "07-orderms-master-with-preparser-libs:src/main/java/entreprisecorp/database/UserDbHandler.java"
            },
            {
                "code": "public boolean insertUser(User u) {",
                "file": "07-orderms-master-with-preparser-libs:src/main/java/entreprisecorp/database/UserDbHandler.java"
            },
            {
                "code": "boolean success = App.userDbHandler.insertUser(user);",
                "file": "07-orderms-master-with-preparser-libs:src/main/java/entreprisecorp/restservices/controllers/RegisterController.java"
            },
            {
                "code": "@RequestBody User user)",
                "file": "07-orderms-master-with-preparser-libs:src/main/java/entreprisecorp/restservices/controllers/RegisterController.java"
            }
        ],
        "id": "AXhgXneI01lXSQw-8_qE"
    },
    {
        "taints": [
            {
                "code": "ResultSet rs = st.executeQuery(sql)) {",
                "file": "07-orderms-master-with-preparser-libs:src/main/java/entreprisecorp/database/UserDbHandler.java"
            },
            {
                "code": "String sql = \"SELECT * FROM \" + USER_TABLE_NAME + \" WHERE `\" + USER_DB_EMAIL + \"`='\" + email + \"'\";",
                "file": "07-orderms-master-with-preparser-libs:src/main/java/entreprisecorp/database/UserDbHandler.java"
            },
            {
                "code": "public User connectUser(String email, String password) {",
                "file": "07-orderms-master-with-preparser-libs:src/main/java/entreprisecorp/database/UserDbHandler.java"
            },
            {
                "code": "User connectedUser = App.userDbHandler.connectUser(user.getEmail(), user.getPassword());",
                "file": "07-orderms-master-with-preparser-libs:src/main/java/entreprisecorp/restservices/controllers/LoginController.java"
            },
            {
                "code": "public Response login(@RequestBody User user)",
                "file": "07-orderms-master-with-preparser-libs:src/main/java/entreprisecorp/restservices/controllers/LoginController.java"
            }
        ],
        "id": "AXhgXneI01lXSQw-8_qF"
    },
    {
        "taints": [
            {
                "code": "preparedStmt.close();",
                "file": "kobero98_TravelBook:src/main/java/travelbook/controller/AllQuery.java"
            },
            {
                "code": "preparedStmt.setInt (1,idtrip);",
                "file": "kobero98_TravelBook:src/main/java/travelbook/controller/AllQuery.java"
            },
            {
                "code": "String query = \"Delete from Trip where idTrip=? \";",
                "file": "kobero98_TravelBook:src/main/java/travelbook/controller/AllQuery.java"
            },
            {
                "code": "CityEntity city;",
                "file": "kobero98_TravelBook:src/main/java/travelbook/model/dao/CityDao.java"
            },
            {
                "code": "}",
                "file": "kobero98_TravelBook:src/main/java/travelbook/controller/ControllerSearch.java"
            },
            {
                "code": "results.add(singleResult);",
                "file": "kobero98_TravelBook:src/main/java/travelbook/controller/ControllerSearch.java"
            },
            {
                "code": "String query = (String) request.getParameter(\"search\");",
                "file": "kobero98_TravelBook:WebContent/autocomplete.jsp"
            },
            {
                "code": "{\tControllerSearch myController=new ControllerSearch();",
                "file": "kobero98_TravelBook:WebContent/autocomplete.jsp"
            }
        ],
        "id": "AXdQqAVLMzpneQ-0xhqy"
    },
    {
        "taints": [
            {
                "code": "final ResultSet resSet = prepStmt.executeQuery()) {",
                "file": "Silverpeas_Silverpeas-Core:core-services/pdc/src/main/java/org/silverpeas/core/pdc/classification/ClassifyEngine.java"
            },
            {
                "code": "try (final PreparedStatement prepStmt = connection.prepareStatement(sSQLStatement);",
                "file": "Silverpeas_Silverpeas-Core:core-services/pdc/src/main/java/org/silverpeas/core/pdc/classification/ClassifyEngine.java"
            },
            {
                "code": "final String sSQLStatement =\nsqlStatement.buildGetPertinentAxisStatementByJoin(alCriterias, nAxisId,\nsRootValue, instanceIds, todayFormatted);",
                "file": "Silverpeas_Silverpeas-Core:core-services/pdc/src/main/java/org/silverpeas/core/pdc/classification/ClassifyEngine.java"
            },
            {
                "code": "return buildGetPertinentAxisStatementByJoin(alCriterias, nAxisId,\nsRootValue, instanceIds, todayFormatted, true);",
                "file": "Silverpeas_Silverpeas-Core:core-services/pdc/src/main/java/org/silverpeas/core/pdc/classification/SQLStatement.java"
            },
            {
                "code": "return sSQLStatement.toString();",
                "file": "Silverpeas_Silverpeas-Core:core-services/pdc/src/main/java/org/silverpeas/core/pdc/classification/SQLStatement.java"
            },
            {
                "code": "private PertinentAxis getSinglePertinentAxisByJoin(final Connection connection,",
                "file": "Silverpeas_Silverpeas-Core:core-services/pdc/src/main/java/org/silverpeas/core/pdc/classification/ClassifyEngine.java"
            },
            {
                "code": "alPertinentAxis.add(getSinglePertinentAxisByJoin(connection,\nalCriterias, nAxisId, \"\", instanceIds, today));",
                "file": "Silverpeas_Silverpeas-Core:core-services/pdc/src/main/java/org/silverpeas/core/pdc/classification/ClassifyEngine.java"
            },
            {
                "code": "public List<PertinentAxis> getPertinentAxisByJoin(List<? extends Criteria> alGivenCriterias,",
                "file": "Silverpeas_Silverpeas-Core:core-services/pdc/src/main/java/org/silverpeas/core/pdc/classification/ClassifyEngine.java"
            },
            {
                "code": "return classifyEngine\n.getPertinentAxisByJoin(searchContext.getCriterias(), axisIds, instanceIds);",
                "file": "Silverpeas_Silverpeas-Core:core-services/pdc/src/main/java/org/silverpeas/core/pdc/pdc/service/DefaultPdcClassifyManager.java"
            },
            {
                "code": "public List<PertinentAxis> getPertinentAxis(SearchContext searchContext, List<Integer> axisIds,",
                "file": "Silverpeas_Silverpeas-Core:core-services/pdc/src/main/java/org/silverpeas/core/pdc/pdc/service/DefaultPdcClassifyManager.java"
            },
            {
                "code": "List<PertinentAxis> pertinentAxis = pdcClassifyManager.getPertinentAxis(searchContext, axisIds,\ninstanceIds);",
                "file": "Silverpeas_Silverpeas-Core:core-services/pdc/src/main/java/org/silverpeas/core/pdc/pdc/service/GlobalPdcManager.java"
            },
            {
                "code": "public List<SearchAxis> getPertinentAxisByInstanceIds(SearchContext searchContext,",
                "file": "Silverpeas_Silverpeas-Core:core-services/pdc/src/main/java/org/silverpeas/core/pdc/pdc/service/GlobalPdcManager.java"
            },
            {
                "code": "return getPertinentAxisByInstanceIds(searchContext, axisType, instanceIds);",
                "file": "Silverpeas_Silverpeas-Core:core-services/pdc/src/main/java/org/silverpeas/core/pdc/pdc/service/GlobalPdcManager.java"
            },
            {
                "code": "public List<SearchAxis> getPertinentAxisByInstanceId(SearchContext searchContext, String axisType,",
                "file": "Silverpeas_Silverpeas-Core:core-services/pdc/src/main/java/org/silverpeas/core/pdc/pdc/service/GlobalPdcManager.java"
            },
            {
                "code": "primaryAxis = pdc.getPertinentAxisByInstanceId(searchContext, \"P\", componentId);",
                "file": "Silverpeas_Silverpeas-Core:core-war/src/main/java/org/silverpeas/web/look/AjaxServletLookV5.java"
            },
            {
                "code": "private void getPertinentAxis(String spaceId, String componentId, String userId,",
                "file": "Silverpeas_Silverpeas-Core:core-war/src/main/java/org/silverpeas/web/look/AjaxServletLookV5.java"
            },
            {
                "code": "getPertinentAxis(spaceId, componentId, userId, mainSC, writer);",
                "file": "Silverpeas_Silverpeas-Core:core-war/src/main/java/org/silverpeas/web/look/AjaxServletLookV5.java"
            },
            {
                "code": "private void displayPDC(boolean displayPDC, String spaceId, String componentId, String userId,",
                "file": "Silverpeas_Silverpeas-Core:core-war/src/main/java/org/silverpeas/web/look/AjaxServletLookV5.java"
            },
            {
                "code": "displayPDC(displayPDC, spaceId, componentId, userId, mainSessionController, writer);",
                "file": "Silverpeas_Silverpeas-Core:core-war/src/main/java/org/silverpeas/web/look/AjaxServletLookV5.java"
            },
            {
                "code": "sSQLStatement.append(StringUtil.join(instanceIds, \"','\"));",
                "file": "Silverpeas_Silverpeas-Core:core-services/pdc/src/main/java/org/silverpeas/core/pdc/classification/SQLStatement.java"
            },
            {
                "code": "List<String> instanceIds) throws PdcException {",
                "file": "Silverpeas_Silverpeas-Core:core-services/pdc/src/main/java/org/silverpeas/core/pdc/pdc/service/DefaultPdcClassifyManager.java"
            },
            {
                "code": "@Override",
                "file": "Silverpeas_Silverpeas-Core:core-services/pdc/src/main/java/org/silverpeas/core/pdc/pdc/service/DefaultPdcClassifyManager.java"
            },
            {
                "code": "String axisType, List<String> instanceIds) throws PdcException {",
                "file": "Silverpeas_Silverpeas-Core:core-services/pdc/src/main/java/org/silverpeas/core/pdc/pdc/service/GlobalPdcManager.java"
            },
            {
                "code": "@Override",
                "file": "Silverpeas_Silverpeas-Core:core-services/pdc/src/main/java/org/silverpeas/core/pdc/pdc/service/GlobalPdcManager.java"
            },
            {
                "code": "List<String> instanceIds = new ArrayList<>();",
                "file": "Silverpeas_Silverpeas-Core:core-services/pdc/src/main/java/org/silverpeas/core/pdc/pdc/service/GlobalPdcManager.java"
            },
            {
                "code": "String componentId = request.getParameter(\"ComponentId\");",
                "file": "Silverpeas_Silverpeas-Core:core-war/src/main/java/org/silverpeas/web/look/AjaxServletLookV5.java"
            }
        ],
        "id": "AXdtfQc_9QOveX66izpx"
    },
    {
        "taints": [
            {
                "code": "final ResultSet resSet = prepStmt.executeQuery()) {",
                "file": "Silverpeas_Silverpeas-Core:core-services/pdc/src/main/java/org/silverpeas/core/pdc/classification/ClassifyEngine.java"
            },
            {
                "code": "try (final PreparedStatement prepStmt = connection.prepareStatement(sSQLStatement);",
                "file": "Silverpeas_Silverpeas-Core:core-services/pdc/src/main/java/org/silverpeas/core/pdc/classification/ClassifyEngine.java"
            },
            {
                "code": "String sSQLStatement = sqlStatement.buildGetObjectValuePairsByJoinStatement(alCriterias, this.\ngetPhysicalAxisId(nLogicalAxisId), instanceIds, today, true);",
                "file": "Silverpeas_Silverpeas-Core:core-services/pdc/src/main/java/org/silverpeas/core/pdc/classification/ClassifyEngine.java"
            },
            {
                "code": "return sSQLStatement.toString();",
                "file": "Silverpeas_Silverpeas-Core:core-services/pdc/src/main/java/org/silverpeas/core/pdc/classification/SQLStatement.java"
            },
            {
                "code": "public List<ObjectValuePair> getObjectValuePairsByJoin(List<? extends Criteria> alGivenCriterias,",
                "file": "Silverpeas_Silverpeas-Core:core-services/pdc/src/main/java/org/silverpeas/core/pdc/classification/ClassifyEngine.java"
            },
            {
                "code": "return classifyEngine.getObjectValuePairsByJoin(searchContext.getCriterias(), axisId,\ninstanceIds);",
                "file": "Silverpeas_Silverpeas-Core:core-services/pdc/src/main/java/org/silverpeas/core/pdc/pdc/service/DefaultPdcClassifyManager.java"
            },
            {
                "code": "public List<ObjectValuePair> getObjectValuePairs(SearchContext searchContext, int axisId,",
                "file": "Silverpeas_Silverpeas-Core:core-services/pdc/src/main/java/org/silverpeas/core/pdc/pdc/service/DefaultPdcClassifyManager.java"
            },
            {
                "code": "List<ObjectValuePair> allObjectValuePairs = pdcClassifyManager\n.getObjectValuePairs(searchContext, Integer.parseInt(axisId), instanceIds);",
                "file": "Silverpeas_Silverpeas-Core:core-services/pdc/src/main/java/org/silverpeas/core/pdc/pdc/service/GlobalPdcManager.java"
            },
            {
                "code": "private List<Value> filterValues(SearchContext searchContext, String axisId,",
                "file": "Silverpeas_Silverpeas-Core:core-services/pdc/src/main/java/org/silverpeas/core/pdc/pdc/service/GlobalPdcManager.java"
            },
            {
                "code": "return filterValues(searchContext, axisId, instanceIds);",
                "file": "Silverpeas_Silverpeas-Core:core-services/pdc/src/main/java/org/silverpeas/core/pdc/pdc/service/GlobalPdcManager.java"
            },
            {
                "code": "public List<Value> getPertinentDaughterValuesByInstanceIds(SearchContext searchContext,",
                "file": "Silverpeas_Silverpeas-Core:core-services/pdc/src/main/java/org/silverpeas/core/pdc/pdc/service/GlobalPdcManager.java"
            },
            {
                "code": "return getPertinentDaughterValuesByInstanceIds(searchContext, axisId, valueId, instanceIds);",
                "file": "Silverpeas_Silverpeas-Core:core-services/pdc/src/main/java/org/silverpeas/core/pdc/pdc/service/GlobalPdcManager.java"
            },
            {
                "code": "public List<Value> getPertinentDaughterValuesByInstanceId(SearchContext searchContext,",
                "file": "Silverpeas_Silverpeas-Core:core-services/pdc/src/main/java/org/silverpeas/core/pdc/pdc/service/GlobalPdcManager.java"
            },
            {
                "code": "daughters = pdc.getPertinentDaughterValuesByInstanceId(searchContext, axisId, valuePath,\ncomponentId);",
                "file": "Silverpeas_Silverpeas-Core:core-war/src/main/java/org/silverpeas/web/look/AjaxServletLookV5.java"
            },
            {
                "code": "private List<Value> getPertinentValues(String spaceId, String componentId, String userId,",
                "file": "Silverpeas_Silverpeas-Core:core-war/src/main/java/org/silverpeas/web/look/AjaxServletLookV5.java"
            },
            {
                "code": "getPertinentValues(spaceId, componentId, userId, axisId, valuePath, displayContextualPDC,\nmainSessionController, writer);",
                "file": "Silverpeas_Silverpeas-Core:core-war/src/main/java/org/silverpeas/web/look/AjaxServletLookV5.java"
            },
            {
                "code": "private void writePertinentValues(final MainSessionController mainSessionController,",
                "file": "Silverpeas_Silverpeas-Core:core-war/src/main/java/org/silverpeas/web/look/AjaxServletLookV5.java"
            },
            {
                "code": "writePertinentValues(mainSessionController, userId, spaceId, componentId, axisId, valuePath,\ndisplayContextualPDC, writer);",
                "file": "Silverpeas_Silverpeas-Core:core-war/src/main/java/org/silverpeas/web/look/AjaxServletLookV5.java"
            },
            {
                "code": "sSQLStatement.append(StringUtil.join(instanceIds, \"','\"));",
                "file": "Silverpeas_Silverpeas-Core:core-services/pdc/src/main/java/org/silverpeas/core/pdc/classification/SQLStatement.java"
            },
            {
                "code": "List<String> instanceIds) throws PdcException {",
                "file": "Silverpeas_Silverpeas-Core:core-services/pdc/src/main/java/org/silverpeas/core/pdc/pdc/service/DefaultPdcClassifyManager.java"
            },
            {
                "code": "@Override",
                "file": "Silverpeas_Silverpeas-Core:core-services/pdc/src/main/java/org/silverpeas/core/pdc/pdc/service/DefaultPdcClassifyManager.java"
            },
            {
                "code": "String axisId, String valueId, List<String> instanceIds) throws PdcException {",
                "file": "Silverpeas_Silverpeas-Core:core-services/pdc/src/main/java/org/silverpeas/core/pdc/pdc/service/GlobalPdcManager.java"
            },
            {
                "code": "@Override",
                "file": "Silverpeas_Silverpeas-Core:core-services/pdc/src/main/java/org/silverpeas/core/pdc/pdc/service/GlobalPdcManager.java"
            },
            {
                "code": "List<String> instanceIds = new ArrayList<>();",
                "file": "Silverpeas_Silverpeas-Core:core-services/pdc/src/main/java/org/silverpeas/core/pdc/pdc/service/GlobalPdcManager.java"
            },
            {
                "code": "String componentId = request.getParameter(\"ComponentId\");",
                "file": "Silverpeas_Silverpeas-Core:core-war/src/main/java/org/silverpeas/web/look/AjaxServletLookV5.java"
            }
        ],
        "id": "AXdtfQc_9QOveX66izpy"
    },
    {
        "taints": [
            {
                "code": "final ResultSet resSet = prepStmt.executeQuery()) {",
                "file": "Silverpeas_Silverpeas-Core:core-services/pdc/src/main/java/org/silverpeas/core/pdc/classification/ClassifyEngine.java"
            },
            {
                "code": "try (final PreparedStatement prepStmt = connection.prepareStatement(sSQLStatement.toString());",
                "file": "Silverpeas_Silverpeas-Core:core-services/pdc/src/main/java/org/silverpeas/core/pdc/classification/ClassifyEngine.java"
            },
            {
                "code": "try (final PreparedStatement prepStmt = connection.prepareStatement(sSQLStatement.toString());",
                "file": "Silverpeas_Silverpeas-Core:core-services/pdc/src/main/java/org/silverpeas/core/pdc/classification/ClassifyEngine.java"
            },
            {
                "code": "public List<Integer> getPertinentAxisByInstanceIds(List<String> instanceIds)",
                "file": "Silverpeas_Silverpeas-Core:core-services/pdc/src/main/java/org/silverpeas/core/pdc/classification/ClassifyEngine.java"
            },
            {
                "code": "List<Integer> ids = classifyEngine.getPertinentAxisByInstanceIds(instanceIds);",
                "file": "Silverpeas_Silverpeas-Core:core-services/pdc/src/main/java/org/silverpeas/core/pdc/pdc/service/DefaultPdcUtilizationService.java"
            },
            {
                "code": "public List<AxisHeader> getAxisHeaderUsedByInstanceIds(List<String> instanceIds)",
                "file": "Silverpeas_Silverpeas-Core:core-services/pdc/src/main/java/org/silverpeas/core/pdc/pdc/service/DefaultPdcUtilizationService.java"
            },
            {
                "code": "pdcUtilizationService.getAxisHeaderUsedByInstanceIds(instanceIds);",
                "file": "Silverpeas_Silverpeas-Core:core-services/pdc/src/main/java/org/silverpeas/core/pdc/pdc/service/GlobalPdcManager.java"
            },
            {
                "code": "public List<SearchAxis> getPertinentAxisByInstanceIds(SearchContext searchContext,",
                "file": "Silverpeas_Silverpeas-Core:core-services/pdc/src/main/java/org/silverpeas/core/pdc/pdc/service/GlobalPdcManager.java"
            },
            {
                "code": "return getPertinentAxisByInstanceIds(searchContext, axisType, instanceIds);",
                "file": "Silverpeas_Silverpeas-Core:core-services/pdc/src/main/java/org/silverpeas/core/pdc/pdc/service/GlobalPdcManager.java"
            },
            {
                "code": "public List<SearchAxis> getPertinentAxisByInstanceId(SearchContext searchContext, String axisType,",
                "file": "Silverpeas_Silverpeas-Core:core-services/pdc/src/main/java/org/silverpeas/core/pdc/pdc/service/GlobalPdcManager.java"
            },
            {
                "code": "primaryAxis = pdc.getPertinentAxisByInstanceId(searchContext, \"P\", componentId);",
                "file": "Silverpeas_Silverpeas-Core:core-war/src/main/java/org/silverpeas/web/look/AjaxServletLookV5.java"
            },
            {
                "code": "private void getPertinentAxis(String spaceId, String componentId, String userId,",
                "file": "Silverpeas_Silverpeas-Core:core-war/src/main/java/org/silverpeas/web/look/AjaxServletLookV5.java"
            },
            {
                "code": "getPertinentAxis(spaceId, componentId, userId, mainSC, writer);",
                "file": "Silverpeas_Silverpeas-Core:core-war/src/main/java/org/silverpeas/web/look/AjaxServletLookV5.java"
            },
            {
                "code": "private void displayPDC(boolean displayPDC, String spaceId, String componentId, String userId,",
                "file": "Silverpeas_Silverpeas-Core:core-war/src/main/java/org/silverpeas/web/look/AjaxServletLookV5.java"
            },
            {
                "code": "displayPDC(displayPDC, spaceId, componentId, userId, mainSessionController, writer);",
                "file": "Silverpeas_Silverpeas-Core:core-war/src/main/java/org/silverpeas/web/look/AjaxServletLookV5.java"
            },
            {
                "code": "String componentId = request.getParameter(\"ComponentId\");",
                "file": "Silverpeas_Silverpeas-Core:core-war/src/main/java/org/silverpeas/web/look/AjaxServletLookV5.java"
            }
        ],
        "id": "AXdtfQc_9QOveX66izpz"
    },
    {
        "taints": [
            {
                "code": "boolean isresult = stmt.execute();",
                "file": "fr.insee:arc:arc-utils/src/main/java/fr/insee/arc/utils/dao/UtilitaireDao.java"
            },
            {
                "code": "try(PreparedStatement stmt = connexionWrapper.getConnexion().prepareStatement(requete.getQuery().toString());)",
                "file": "fr.insee:arc:arc-utils/src/main/java/fr/insee/arc/utils/dao/UtilitaireDao.java"
            },
            {
                "code": "try(PreparedStatement stmt = connexionWrapper.getConnexion().prepareStatement(requete.getQuery().toString());)",
                "file": "fr.insee:arc:arc-utils/src/main/java/fr/insee/arc/utils/dao/UtilitaireDao.java"
            },
            {
                "code": "public <T> T executeRequest(Connection connexion, PreparedStatementBuilder requete, EntityProvider<T> entityProvider,",
                "file": "fr.insee:arc:arc-utils/src/main/java/fr/insee/arc/utils/dao/UtilitaireDao.java"
            },
            {
                "code": "return executeRequest(connexion, requete, EntityProvider.getArrayOfArrayProvider(), modes);",
                "file": "fr.insee:arc:arc-utils/src/main/java/fr/insee/arc/utils/dao/UtilitaireDao.java"
            },
            {
                "code": "public ArrayList<ArrayList<String>> executeRequest(Connection connexion, PreparedStatementBuilder requete,  ModeRequete... modes)",
                "file": "fr.insee:arc:arc-utils/src/main/java/fr/insee/arc/utils/dao/UtilitaireDao.java"
            },
            {
                "code": "HashMap<String,ArrayList<String>> g=new GenericBean(UtilitaireDao.get(\"arc\").executeRequest(connexion, new PreparedStatementBuilder(requete))).mapContent();",
                "file": "fr.insee:arc:arc-core/src/main/java/fr/insee/arc/core/dao/JeuDeRegleDao.java"
            },
            {
                "code": "public static ArrayList<JeuDeRegle> recupJeuDeRegle(Connection connexion, String tableJeuDeRegle) throws SQLException {",
                "file": "fr.insee:arc:arc-core/src/main/java/fr/insee/arc/core/dao/JeuDeRegleDao.java"
            },
            {
                "code": "ArrayList<JeuDeRegle> allRuleSets = JeuDeRegleDao.recupJeuDeRegle(connexion, anExecutionEnvironment + \".jeuderegle\");",
                "file": "fr.insee:arc:arc-core/src/main/java/fr/insee/arc/core/service/ApiInitialisationService.java"
            },
            {
                "code": "private static void applyExpressions(Connection connexion, String anExecutionEnvironment) throws Exception {",
                "file": "fr.insee:arc:arc-core/src/main/java/fr/insee/arc/core/service/ApiInitialisationService.java"
            },
            {
                "code": "applyExpressions(connexion, anExecutionEnvironment);",
                "file": "fr.insee:arc:arc-core/src/main/java/fr/insee/arc/core/service/ApiInitialisationService.java"
            },
            {
                "code": "public static void copyTablesToExecutionThrow(Connection connexion, String anParametersEnvironment, String anExecutionEnvironment) throws Exception {",
                "file": "fr.insee:arc:arc-core/src/main/java/fr/insee/arc/core/service/ApiInitialisationService.java"
            },
            {
                "code": "copyTablesToExecutionThrow(connexion, anParametersEnvironment, anExecutionEnvironment);",
                "file": "fr.insee:arc:arc-core/src/main/java/fr/insee/arc/core/service/ApiInitialisationService.java"
            },
            {
                "code": "public static void copyTablesToExecution(Connection connexion, String anParametersEnvironment, String anExecutionEnvironment) {",
                "file": "fr.insee:arc:arc-core/src/main/java/fr/insee/arc/core/service/ApiInitialisationService.java"
            },
            {
                "code": "copyTablesToExecution(connexion, envParameters, envExecution);",
                "file": "fr.insee:arc:arc-core/src/main/java/fr/insee/arc/core/service/ApiInitialisationService.java"
            },
            {
                "code": "public static void synchroniserSchemaExecution(Connection connexion, String envParameters, String envExecution) {",
                "file": "fr.insee:arc:arc-core/src/main/java/fr/insee/arc/core/service/ApiInitialisationService.java"
            },
            {
                "code": "ApiInitialisationService.synchroniserSchemaExecution(null, ApiService.IHM_SCHEMA, env);",
                "file": "fr.insee:arc:arc-ws/src/main/java/fr/insee/arc/ws/services/restServices/execute/ExecuteServiceController.java"
            },
            {
                "code": "@PathVariable String env",
                "file": "fr.insee:arc:arc-ws/src/main/java/fr/insee/arc/ws/services/restServices/execute/ExecuteServiceController.java"
            }
        ],
        "id": "AXbinhBQzjh7vi1yWqNA"
    },
    {
        "taints": [
            {
                "code": "ResultSet rs = ps.executeQuery()) {",
                "file": "onap_dmaap-datarouter:datarouter-prov/src/main/java/org/onap/dmaap/datarouter/provisioning/StatisticsServlet.java"
            },
            {
                "code": "PreparedStatement ps = conn.prepareStatement(filterQuery);",
                "file": "onap_dmaap-datarouter:datarouter-prov/src/main/java/org/onap/dmaap/datarouter/provisioning/StatisticsServlet.java"
            },
            {
                "code": "String filterQuery = this.queryGeneretor(map);",
                "file": "onap_dmaap-datarouter:datarouter-prov/src/main/java/org/onap/dmaap/datarouter/provisioning/StatisticsServlet.java"
            },
            {
                "code": "sql = SQL_SELECT_NAME + feedids + SQL_FEED_ID + SQL_SELECT_COUNT + feedids + SQL_TYPE_PUB\n+ SQL_SELECT_SUM\n+ feedids + SQL_PUBLISH_LENGTH + SQL_SUBSCRIBER_URL\n+ SQL_SUB_ID + SQL_DELIVERY_TIME + SQL_AVERAGE_DELAY + SQL_JOIN_RECORDS + feedids + \")\" + subid + SQL_STATUS_204\n+\" and e.event_time between \" + startInMillis + \" and \" + endInMillis + SQL_GROUP_SUB_ID;",
                "file": "onap_dmaap-datarouter:datarouter-prov/src/main/java/org/onap/dmaap/datarouter/provisioning/StatisticsServlet.java"
            },
            {
                "code": "private void getRecordsForSQL(Map<String, String> map, String outputType, ServletOutputStream out,",
                "file": "onap_dmaap-datarouter:datarouter-prov/src/main/java/org/onap/dmaap/datarouter/provisioning/StatisticsServlet.java"
            },
            {
                "code": "this.getRecordsForSQL(map, outputType, resp.getOutputStream(), resp);",
                "file": "onap_dmaap-datarouter:datarouter-prov/src/main/java/org/onap/dmaap/datarouter/provisioning/StatisticsServlet.java"
            },
            {
                "code": "map.put(OUTPUT_TYPE, req.getParameter(OUTPUT_TYPE));",
                "file": "onap_dmaap-datarouter:datarouter-prov/src/main/java/org/onap/dmaap/datarouter/provisioning/StatisticsServlet.java"
            }
        ],
        "id": "AW8V3S7J1zbPcHHqYupZ"
    },
    {
        "taints": [
            {
                "code": "return stmt.executeQuery(sql);",
                "file": "EnricoDAlessandro97_ET:trunk/src/logic/queries/SimpleQueries.java"
            },
            {
                "code": "String sql = \"SELECT email FROM Users WHERE Username = '\" + username + \"';\";",
                "file": "EnricoDAlessandro97_ET:trunk/src/logic/queries/SimpleQueries.java"
            },
            {
                "code": "public static ResultSet selectUserEmail(Statement stmt, String username) throws SQLException {",
                "file": "EnricoDAlessandro97_ET:trunk/src/logic/queries/SimpleQueries.java"
            },
            {
                "code": "ResultSet rs = SimpleQueries.selectUserEmail(stmt, username);",
                "file": "EnricoDAlessandro97_ET:trunk/src/logic/dao/UserDao.java"
            },
            {
                "code": "public static String getUserEmail(String username) throws SystemException {",
                "file": "EnricoDAlessandro97_ET:trunk/src/logic/dao/UserDao.java"
            },
            {
                "code": "String email = UserDao.getUserEmail(username);",
                "file": "EnricoDAlessandro97_ET:trunk/src/logic/controllers/LoginController.java"
            },
            {
                "code": "public void login(UserBean userBean) throws SystemException, LoginException {",
                "file": "EnricoDAlessandro97_ET:trunk/src/logic/controllers/LoginController.java"
            },
            {
                "code": "loginController.login(userBean);",
                "file": "EnricoDAlessandro97_ET:trunk/login.jsp"
            },
            {
                "code": "userBean.setAndValidateUsername(request.getParameter(\"username\"));",
                "file": "EnricoDAlessandro97_ET:trunk/login.jsp"
            }
        ],
        "id": "AXd-eCOl_YpKSihNVzT_"
    },
    {
        "taints": [
            {
                "code": "return stmt.executeQuery(sql);",
                "file": "EnricoDAlessandro97_ET:trunk/src/logic/queries/SimpleQueries.java"
            },
            {
                "code": "String sql = \"SELECT Username FROM Users WHERE Username = '\" + username + \"';\";",
                "file": "EnricoDAlessandro97_ET:trunk/src/logic/queries/SimpleQueries.java"
            },
            {
                "code": "public static ResultSet controlUniqueUsername(Statement stmt, String username) throws SQLException {",
                "file": "EnricoDAlessandro97_ET:trunk/src/logic/queries/SimpleQueries.java"
            },
            {
                "code": "rs = SimpleQueries.controlUniqueUsername(stmt, username);",
                "file": "EnricoDAlessandro97_ET:trunk/src/logic/dao/UserDao.java"
            },
            {
                "code": "public static void usernameChecker(String username) throws SystemException, DuplicateUsernameException {",
                "file": "EnricoDAlessandro97_ET:trunk/src/logic/dao/UserDao.java"
            },
            {
                "code": "UserDao.usernameChecker(newUsername);",
                "file": "EnricoDAlessandro97_ET:trunk/src/logic/controllers/ProfileController.java"
            },
            {
                "code": "public void changeUsername(String username, String newUsername) throws SystemException, UsernameException, DuplicateUsernameException {",
                "file": "EnricoDAlessandro97_ET:trunk/src/logic/controllers/ProfileController.java"
            },
            {
                "code": "profileController.changeUsername(oldUsername, request.getParameter(\"newUsername\"));",
                "file": "EnricoDAlessandro97_ET:trunk/modifyUserInfo.jsp"
            }
        ],
        "id": "AXd0tmatfj8BeTo9O6wx"
    },
    {
        "taints": [
            {
                "code": "return stmt.executeQuery(sql);",
                "file": "AlessDea_TestSC:trunk/src/logic/queries/SimpleQueries.java"
            },
            {
                "code": "String sql = \"SELECT Username FROM Users WHERE Username = '\" + username + \"';\";",
                "file": "AlessDea_TestSC:trunk/src/logic/queries/SimpleQueries.java"
            },
            {
                "code": "public static ResultSet controlUniqueUsername(Statement stmt, String username) throws SQLException {",
                "file": "AlessDea_TestSC:trunk/src/logic/queries/SimpleQueries.java"
            },
            {
                "code": "rs = SimpleQueries.controlUniqueUsername(stmt, username);",
                "file": "AlessDea_TestSC:trunk/src/logic/dao/UserDao.java"
            },
            {
                "code": "public static void usernameChecker(String username) throws SystemException, DuplicateUsernameException {",
                "file": "AlessDea_TestSC:trunk/src/logic/dao/UserDao.java"
            },
            {
                "code": "UserDao.usernameChecker(newUsername);",
                "file": "AlessDea_TestSC:trunk/src/logic/controllers/ProfileController.java"
            },
            {
                "code": "public void changeUsername(String username, String newUsername) throws SystemException, UsernameException, DuplicateUsernameException {",
                "file": "AlessDea_TestSC:trunk/src/logic/controllers/ProfileController.java"
            },
            {
                "code": "profileController.changeUsername(oldUsername, request.getParameter(\"newUsername\"));",
                "file": "AlessDea_TestSC:trunk/WebContent/modifyUserInfo.jsp"
            }
        ],
        "id": "AXd3C_p6zPaAchWyLZF1"
    },
    {
        "taints": [
            {
                "code": "return jdbcTemplate.query(query.toString(), new JobDTOMapper());",
                "file": "BC-13-Green-commute-BE:src/main/java/com/greencommute/job/dao/JobRepository.java"
            },
            {
                "code": "public List<JobDTO> getJobs(String[] skills, double[] locations, Integer maxDistanceInt, String[] jobTypes, String[] expLevels, String[] transportTypes, String datePosted, boolean hasGreenCommute) {",
                "file": "BC-13-Green-commute-BE:src/main/java/com/greencommute/job/dao/JobRepository.java"
            },
            {
                "code": "return jobRepository.getJobs(skills, locations, maxDistanceInt, jobTypes, expLevels, transportTypes, datePosted, hasGreenCommute);",
                "file": "BC-13-Green-commute-BE:src/main/java/com/greencommute/job/service/JobService.java"
            },
            {
                "code": "public List<JobDTO> getJobList(String[] skills, double[] locations, String maxDistance, String[] jobTypes, String[] expLevels, String[] transportTypes, String datePosted, boolean hasGreenCommute) {",
                "file": "BC-13-Green-commute-BE:src/main/java/com/greencommute/job/service/JobService.java"
            },
            {
                "code": "return jobService.getJobList(skills, locations, maxDistance, jobTypes, expLevels, transportTypes, datePosted, hasGreenCommute);",
                "file": "BC-13-Green-commute-BE:src/main/java/com/greencommute/job/controller/JobController.java"
            },
            {
                "code": "@RequestParam(value = \"exp_levels\", required = false) String[] expLevels,",
                "file": "BC-13-Green-commute-BE:src/main/java/com/greencommute/job/controller/JobController.java"
            },
            {
                "code": "@RequestParam(value = \"job_types\", required = false) String[] jobTypes,",
                "file": "BC-13-Green-commute-BE:src/main/java/com/greencommute/job/controller/JobController.java"
            }
        ],
        "id": "AXdYlIO_QX95O_1bdhdx"
    },
    {
        "taints": [
            {
                "code": "return jdbcTemplate.query(query.toString(), new JobDTOMapper());",
                "file": "BC-13-Green-commute-BE:src/main/java/com/greencommute/job/dao/JobRepository.java"
            },
            {
                "code": "public List<JobDTO> getSavedJobs(UUID userId, String[] jobTypes, String[] expLevels, String[] transportTypes, String datePosted, boolean hasGreenCommute) {",
                "file": "BC-13-Green-commute-BE:src/main/java/com/greencommute/job/dao/JobRepository.java"
            },
            {
                "code": "return jobRepository.getSavedJobs(userId, jobTypes, expLevels, transportTypes, datePosted, hasGreenCommute);",
                "file": "BC-13-Green-commute-BE:src/main/java/com/greencommute/job/service/JobService.java"
            },
            {
                "code": "public List<JobDTO> getSavedJobs(UUID userId, String[] jobTypes, String[] expLevels, String[] transportTypes, String datePosted, boolean hasGreenCommute) {",
                "file": "BC-13-Green-commute-BE:src/main/java/com/greencommute/job/service/JobService.java"
            },
            {
                "code": "return jobService.getSavedJobs(userId, jobTypes, expLevels, transportTypes, datePosted, hasGreenCommute);",
                "file": "BC-13-Green-commute-BE:src/main/java/com/greencommute/job/controller/UserJobController.java"
            },
            {
                "code": "@RequestParam(value = \"exp_levels\", required = false) String[] expLevels,",
                "file": "BC-13-Green-commute-BE:src/main/java/com/greencommute/job/controller/UserJobController.java"
            },
            {
                "code": "@RequestParam(value = \"job_types\", required = false) String[] jobTypes,",
                "file": "BC-13-Green-commute-BE:src/main/java/com/greencommute/job/controller/UserJobController.java"
            }
        ],
        "id": "AXdYlIO_QX95O_1bdhdw"
    },
    {
        "taints": [
            {
                "code": "Query query = session.createSQLQuery(sql.toString());",
                "file": "onap_portal:ecomp-portal-widget-ms/widget-ms/src/main/java/org/onap/portalapp/widget/service/impl/WidgetCatalogServiceImpl.java"
            },
            {
                "code": "widgetCatalog = widgetCatalogService.getUserWidgetCatalog(loginName);",
                "file": "onap_portal:ecomp-portal-widget-ms/widget-ms/src/main/java/org/onap/portalapp/widget/controller/WidgetsCatalogController.java"
            },
            {
                "code": "@Transactional",
                "file": "onap_portal:ecomp-portal-widget-ms/widget-ms/src/main/java/org/onap/portalapp/widget/service/impl/WidgetCatalogServiceImpl.java"
            }
        ],
        "id": "AXIMp1sJ8Y_K5k8sMwrW"
    },
    {
        "taints": [
            {
                "code": "final ResultSet rs = stmt.executeQuery(sql)) {",
                "file": "onap_portal-sdk:epsdk-analytics/src/main/java/org/onap/portalsdk/analytics/system/DbUtils.java"
            },
            {
                "code": "public static DataSet executeQuery(Connection con, final String sql, final int maxRowLimit)",
                "file": "onap_portal-sdk:epsdk-analytics/src/main/java/org/onap/portalsdk/analytics/system/DbUtils.java"
            },
            {
                "code": "return executeQuery(con, sql, maxRowLimit);",
                "file": "onap_portal-sdk:epsdk-analytics/src/main/java/org/onap/portalsdk/analytics/system/DbUtils.java"
            },
            {
                "code": "public static DataSet executeQuery(final String sql, final int maxRowLimit) throws ReportSQLException {",
                "file": "onap_portal-sdk:epsdk-analytics/src/main/java/org/onap/portalsdk/analytics/system/DbUtils.java"
            },
            {
                "code": "ds = DbUtils.executeQuery(sql, Globals.getDefaultPageSize() + 1);",
                "file": "onap_portal-sdk:epsdk-analytics/src/main/java/org/onap/portalsdk/analytics/system/ConnectionUtils.java"
            },
            {
                "code": "public static DataSet getDataSet(String sql, String remoteDbPrefix,",
                "file": "onap_portal-sdk:epsdk-analytics/src/main/java/org/onap/portalsdk/analytics/system/ConnectionUtils.java"
            },
            {
                "code": "ds = ConnectionUtils.getDataSet(sql, rdef.getDBInfo(), true);",
                "file": "onap_portal-sdk:epsdk-analytics/src/main/java/org/onap/portalsdk/analytics/system/fusion/web/RaptorControllerAsync.java"
            },
            {
                "code": "sql = Utils.replaceInString(sql, \"[USERID]\", userId);",
                "file": "onap_portal-sdk:epsdk-analytics/src/main/java/org/onap/portalsdk/analytics/system/fusion/web/RaptorControllerAsync.java"
            },
            {
                "code": "sql = Utils.replaceInString(sql, \"[LOGGED_USERID]\", userId);",
                "file": "onap_portal-sdk:epsdk-analytics/src/main/java/org/onap/portalsdk/analytics/system/fusion/web/RaptorControllerAsync.java"
            },
            {
                "code": "String sql = queryJSON.getQuery();",
                "file": "onap_portal-sdk:epsdk-analytics/src/main/java/org/onap/portalsdk/analytics/system/fusion/web/RaptorControllerAsync.java"
            },
            {
                "code": "@RequestBody QueryJSON queryJSON, HttpServletRequest request, HttpServletResponse response)",
                "file": "onap_portal-sdk:epsdk-analytics/src/main/java/org/onap/portalsdk/analytics/system/fusion/web/RaptorControllerAsync.java"
            }
        ],
        "id": "AW8Mku0Vm8eoEVQRW-lu"
    },
    {
        "taints": [
            {
                "code": "ResultSet rs = stmt.executeQuery(sql);){",
                "file": "onap_portal-sdk:epsdk-analytics/src/main/java/org/onap/portalsdk/analytics/system/RemDbUtils.java"
            },
            {
                "code": "public static DataSet executeQuery(Connection con, String sql, int maxRowLimit, String dbKey)",
                "file": "onap_portal-sdk:epsdk-analytics/src/main/java/org/onap/portalsdk/analytics/system/RemDbUtils.java"
            },
            {
                "code": "return executeQuery(con, sql, maxRowLimit,dbKey);",
                "file": "onap_portal-sdk:epsdk-analytics/src/main/java/org/onap/portalsdk/analytics/system/RemDbUtils.java"
            },
            {
                "code": "public static DataSet executeQuery(String sql, int maxRowLimit, String dbKey) throws ReportSQLException{",
                "file": "onap_portal-sdk:epsdk-analytics/src/main/java/org/onap/portalsdk/analytics/system/RemDbUtils.java"
            },
            {
                "code": "ds = RemDbUtils.executeQuery(sql, Globals.getDefaultPageSize() + 1,remoteDbPrefix);",
                "file": "onap_portal-sdk:epsdk-analytics/src/main/java/org/onap/portalsdk/analytics/system/ConnectionUtils.java"
            },
            {
                "code": "public static DataSet getDataSet(String sql, String remoteDbPrefix,",
                "file": "onap_portal-sdk:epsdk-analytics/src/main/java/org/onap/portalsdk/analytics/system/ConnectionUtils.java"
            },
            {
                "code": "ds = ConnectionUtils.getDataSet(sql, rdef.getDBInfo(), true);",
                "file": "onap_portal-sdk:epsdk-analytics/src/main/java/org/onap/portalsdk/analytics/system/fusion/web/RaptorControllerAsync.java"
            },
            {
                "code": "sql = Utils.replaceInString(sql, \"[USERID]\", userId);",
                "file": "onap_portal-sdk:epsdk-analytics/src/main/java/org/onap/portalsdk/analytics/system/fusion/web/RaptorControllerAsync.java"
            },
            {
                "code": "sql = Utils.replaceInString(sql, \"[LOGGED_USERID]\", userId);",
                "file": "onap_portal-sdk:epsdk-analytics/src/main/java/org/onap/portalsdk/analytics/system/fusion/web/RaptorControllerAsync.java"
            },
            {
                "code": "String sql = queryJSON.getQuery();",
                "file": "onap_portal-sdk:epsdk-analytics/src/main/java/org/onap/portalsdk/analytics/system/fusion/web/RaptorControllerAsync.java"
            },
            {
                "code": "@RequestBody QueryJSON queryJSON, HttpServletRequest request, HttpServletResponse response)",
                "file": "onap_portal-sdk:epsdk-analytics/src/main/java/org/onap/portalsdk/analytics/system/fusion/web/RaptorControllerAsync.java"
            }
        ],
        "id": "AW8Mku0Ym8eoEVQRW-l9"
    },
    {
        "taints": [
            {
                "code": "resultSet = preparedState.executeQuery();",
                "file": "org.apache.kylin:kylin:stream-receiver/src/main/java/org/apache/kylin/stream/server/rest/service/QueryService.java"
            },
            {
                "code": "PreparedStatement preparedState = conn.prepareStatement(sql);",
                "file": "org.apache.kylin:kylin:stream-receiver/src/main/java/org/apache/kylin/stream/server/rest/service/QueryService.java"
            },
            {
                "code": "private SQLResponse execute(String sql, SQLRequest sqlRequest) throws Exception {",
                "file": "org.apache.kylin:kylin:stream-receiver/src/main/java/org/apache/kylin/stream/server/rest/service/QueryService.java"
            },
            {
                "code": "return execute(correctedSql, sqlRequest);",
                "file": "org.apache.kylin:kylin:stream-receiver/src/main/java/org/apache/kylin/stream/server/rest/service/QueryService.java"
            },
            {
                "code": "if (correctedSql.equals(sqlRequest.getSql()) == false)",
                "file": "org.apache.kylin:kylin:stream-receiver/src/main/java/org/apache/kylin/stream/server/rest/service/QueryService.java"
            },
            {
                "code": "String correctedSql = QueryUtil.massageSql(sqlRequest);",
                "file": "org.apache.kylin:kylin:stream-receiver/src/main/java/org/apache/kylin/stream/server/rest/service/QueryService.java"
            },
            {
                "code": "private SQLResponse queryWithSqlMassage(SQLRequest sqlRequest) throws Exception {",
                "file": "org.apache.kylin:kylin:stream-receiver/src/main/java/org/apache/kylin/stream/server/rest/service/QueryService.java"
            },
            {
                "code": "return queryWithSqlMassage(sqlRequest);",
                "file": "org.apache.kylin:kylin:stream-receiver/src/main/java/org/apache/kylin/stream/server/rest/service/QueryService.java"
            },
            {
                "code": "public SQLResponse query(SQLRequest sqlRequest) throws Exception {",
                "file": "org.apache.kylin:kylin:stream-receiver/src/main/java/org/apache/kylin/stream/server/rest/service/QueryService.java"
            },
            {
                "code": "sqlResponse = queryService.query(sqlRequest);",
                "file": "org.apache.kylin:kylin:stream-receiver/src/main/java/org/apache/kylin/stream/server/rest/controller/QueryController.java"
            },
            {
                "code": "private SQLResponse doQueryWithCache(SQLRequest sqlRequest) {",
                "file": "org.apache.kylin:kylin:stream-receiver/src/main/java/org/apache/kylin/stream/server/rest/controller/QueryController.java"
            },
            {
                "code": "return doQueryWithCache(sqlRequest);",
                "file": "org.apache.kylin:kylin:stream-receiver/src/main/java/org/apache/kylin/stream/server/rest/controller/QueryController.java"
            },
            {
                "code": "public SQLResponse query(@RequestBody SQLRequest sqlRequest) {",
                "file": "org.apache.kylin:kylin:stream-receiver/src/main/java/org/apache/kylin/stream/server/rest/controller/QueryController.java"
            }
        ],
        "id": "AXWO8U_6zpLtv0cM_U3i"
    },
    {
        "taints": [
            {
                "code": "resultSet = stat.executeQuery(sql);",
                "file": "org.apache.kylin:kylin:stream-receiver/src/main/java/org/apache/kylin/stream/server/rest/service/QueryService.java"
            },
            {
                "code": "private SQLResponse execute(String sql, SQLRequest sqlRequest) throws Exception {",
                "file": "org.apache.kylin:kylin:stream-receiver/src/main/java/org/apache/kylin/stream/server/rest/service/QueryService.java"
            },
            {
                "code": "return execute(correctedSql, sqlRequest);",
                "file": "org.apache.kylin:kylin:stream-receiver/src/main/java/org/apache/kylin/stream/server/rest/service/QueryService.java"
            },
            {
                "code": "if (correctedSql.equals(sqlRequest.getSql()) == false)",
                "file": "org.apache.kylin:kylin:stream-receiver/src/main/java/org/apache/kylin/stream/server/rest/service/QueryService.java"
            },
            {
                "code": "String correctedSql = QueryUtil.massageSql(sqlRequest);",
                "file": "org.apache.kylin:kylin:stream-receiver/src/main/java/org/apache/kylin/stream/server/rest/service/QueryService.java"
            },
            {
                "code": "private SQLResponse queryWithSqlMassage(SQLRequest sqlRequest) throws Exception {",
                "file": "org.apache.kylin:kylin:stream-receiver/src/main/java/org/apache/kylin/stream/server/rest/service/QueryService.java"
            },
            {
                "code": "return queryWithSqlMassage(sqlRequest);",
                "file": "org.apache.kylin:kylin:stream-receiver/src/main/java/org/apache/kylin/stream/server/rest/service/QueryService.java"
            },
            {
                "code": "public SQLResponse query(SQLRequest sqlRequest) throws Exception {",
                "file": "org.apache.kylin:kylin:stream-receiver/src/main/java/org/apache/kylin/stream/server/rest/service/QueryService.java"
            },
            {
                "code": "sqlResponse = queryService.query(sqlRequest);",
                "file": "org.apache.kylin:kylin:stream-receiver/src/main/java/org/apache/kylin/stream/server/rest/controller/QueryController.java"
            },
            {
                "code": "private SQLResponse doQueryWithCache(SQLRequest sqlRequest) {",
                "file": "org.apache.kylin:kylin:stream-receiver/src/main/java/org/apache/kylin/stream/server/rest/controller/QueryController.java"
            },
            {
                "code": "return doQueryWithCache(sqlRequest);",
                "file": "org.apache.kylin:kylin:stream-receiver/src/main/java/org/apache/kylin/stream/server/rest/controller/QueryController.java"
            },
            {
                "code": "public SQLResponse query(@RequestBody SQLRequest sqlRequest) {",
                "file": "org.apache.kylin:kylin:stream-receiver/src/main/java/org/apache/kylin/stream/server/rest/controller/QueryController.java"
            }
        ],
        "id": "AXWO8U_6zpLtv0cM_U3j"
    },
    {
        "taints": [
            {
                "code": "resultSet = preparedStatement.executeQuery();",
                "file": "org.apache.kylin:kylin:server-base/src/main/java/org/apache/kylin/rest/service/QueryService.java"
            },
            {
                "code": "PreparedStatement preparedStatement = preparedContext.preparedStatement;",
                "file": "org.apache.kylin:kylin:server-base/src/main/java/org/apache/kylin/rest/service/QueryService.java"
            },
            {
                "code": "private SQLResponse executePrepareRequest(String correctedSql, PrepareSqlRequest sqlRequest,",
                "file": "org.apache.kylin:kylin:server-base/src/main/java/org/apache/kylin/rest/service/QueryService.java"
            },
            {
                "code": "return executePrepareRequest(correctedSql, prepareSqlRequest, preparedContext);",
                "file": "org.apache.kylin:kylin:server-base/src/main/java/org/apache/kylin/rest/service/QueryService.java"
            },
            {
                "code": "preparedContext = createPreparedContext(sqlRequest.getProject(), sqlRequest.getSql());",
                "file": "org.apache.kylin:kylin:server-base/src/main/java/org/apache/kylin/rest/service/QueryService.java"
            },
            {
                "code": "private SQLResponse queryWithSqlMassage(SQLRequest sqlRequest) throws Exception {",
                "file": "org.apache.kylin:kylin:server-base/src/main/java/org/apache/kylin/rest/service/QueryService.java"
            },
            {
                "code": "ret = queryWithSqlMassage(sqlRequest);",
                "file": "org.apache.kylin:kylin:server-base/src/main/java/org/apache/kylin/rest/service/QueryService.java"
            },
            {
                "code": "public SQLResponse query(SQLRequest sqlRequest, String queryId) throws Exception {",
                "file": "org.apache.kylin:kylin:server-base/src/main/java/org/apache/kylin/rest/service/QueryService.java"
            },
            {
                "code": "sqlResponse = query(sqlRequest, queryContext.getQueryId());",
                "file": "org.apache.kylin:kylin:server-base/src/main/java/org/apache/kylin/rest/service/QueryService.java"
            },
            {
                "code": "private SQLResponse queryAndUpdateCache(SQLRequest sqlRequest, boolean queryCacheEnabled) {",
                "file": "org.apache.kylin:kylin:server-base/src/main/java/org/apache/kylin/rest/service/QueryService.java"
            },
            {
                "code": "sqlResponse = queryAndUpdateCache(sqlRequest, isQueryCacheEnabled);",
                "file": "org.apache.kylin:kylin:server-base/src/main/java/org/apache/kylin/rest/service/QueryService.java"
            },
            {
                "code": "sqlResponse = new SQLResponse(null, null, 0, false, sqlRequest.getSql());",
                "file": "org.apache.kylin:kylin:server-base/src/main/java/org/apache/kylin/rest/service/QueryService.java"
            },
            {
                "code": "sql = result.getSecond();",
                "file": "org.apache.kylin:kylin:server-base/src/main/java/org/apache/kylin/rest/service/QueryService.java"
            },
            {
                "code": "public SQLResponse doQueryWithCache(SQLRequest sqlRequest, boolean isQueryInspect) {",
                "file": "org.apache.kylin:kylin:server-base/src/main/java/org/apache/kylin/rest/service/QueryService.java"
            },
            {
                "code": "return doQueryWithCache(sqlRequest, false);",
                "file": "org.apache.kylin:kylin:server-base/src/main/java/org/apache/kylin/rest/service/QueryService.java"
            },
            {
                "code": "public SQLResponse doQueryWithCache(SQLRequest sqlRequest) {",
                "file": "org.apache.kylin:kylin:server-base/src/main/java/org/apache/kylin/rest/service/QueryService.java"
            },
            {
                "code": "SQLResponse result = queryService.doQueryWithCache(sqlRequest);",
                "file": "org.apache.kylin:kylin:server-base/src/main/java/org/apache/kylin/rest/controller/QueryController.java"
            },
            {
                "code": "public void downloadQueryResult(@PathVariable String format, SQLRequest sqlRequest, HttpServletResponse response) {",
                "file": "org.apache.kylin:kylin:server-base/src/main/java/org/apache/kylin/rest/controller/QueryController.java"
            },
            {
                "code": "@RequestMapping(value = \"/query/format/{format}\", method = RequestMethod.GET, produces = { \"application/json\" })",
                "file": "org.apache.kylin:kylin:server-base/src/main/java/org/apache/kylin/rest/controller/QueryController.java"
            }
        ],
        "id": "AXQHObwY3TKraQdXWCK1"
    },
    {
        "taints": [
            {
                "code": "System.out.println(query);",
                "file": "UnimibSoftEngCourse2021_progetto-clup-1-gruppo-clup-1:src/main/webapp/DAO/UserDao.java"
            },
            {
                "code": "public int modifyUserPassword(String userName, String password, String email) {",
                "file": "UnimibSoftEngCourse2021_progetto-clup-1-gruppo-clup-1:src/main/webapp/DAO/UserDao.java"
            },
            {
                "code": "",
                "file": "UnimibSoftEngCourse2021_progetto-clup-1-gruppo-clup-1:src/main/webapp/DAO/UserDao.java"
            },
            {
                "code": "request.getRequestDispatcher(\"successSignUp.jsp\").forward(request, response);",
                "file": "UnimibSoftEngCourse2021_progetto-clup-1-gruppo-clup-1:src/main/webapp/web/ForgotPassword.java"
            },
            {
                "code": "System.out.println(e);",
                "file": "UnimibSoftEngCourse2021_progetto-clup-1-gruppo-clup-1:src/main/webapp/web/ForgotPassword.java"
            },
            {
                "code": "",
                "file": "UnimibSoftEngCourse2021_progetto-clup-1-gruppo-clup-1:src/main/webapp/web/ForgotPassword.java"
            },
            {
                "code": "} catch (Exception e) {",
                "file": "UnimibSoftEngCourse2021_progetto-clup-1-gruppo-clup-1:src/main/webapp/web/ForgotPassword.java"
            }
        ],
        "id": "AXc_Ow9vaqMtq6Sz43f5"
    },
    {
        "taints": [
            {
                "code": "",
                "file": "UnimibSoftEngCourse2021_progetto-clup-1-gruppo-clup-1:src/main/webapp/DAO/UserDao.java"
            },
            {
                "code": "//\t\t\t\t+ \"\\\"\" + \",\" + \" Email=\" + \"\\\"\" + email + \"\\\"\" + \",\" + \" Username=\" + \"\\\"\" + userName + \"\\\"\"\n//\t\t\t\t+ \" WHERE idUser=\" + idUser;\nint result = 0;\ntry (Connection con = DBConnection.createConnection();",
                "file": "UnimibSoftEngCourse2021_progetto-clup-1-gruppo-clup-1:src/main/webapp/DAO/UserDao.java"
            },
            {
                "code": "//\t\tString query = \"UPDATE user SET Name=\" + \"\\\"\" + name + \"\\\"\" + \",\" + \" Surname=\" + \"\\\"\" + surname + \"\\\"\" + \",\"",
                "file": "UnimibSoftEngCourse2021_progetto-clup-1-gruppo-clup-1:src/main/webapp/DAO/UserDao.java"
            },
            {
                "code": "request.setAttribute(\"successMsg\", \"Modifica dei dati completata con successo!\");",
                "file": "UnimibSoftEngCourse2021_progetto-clup-1-gruppo-clup-1:src/main/webapp/web/UserServlet.java"
            },
            {
                "code": "String userName = request.getParameter(\"username\").trim();",
                "file": "UnimibSoftEngCourse2021_progetto-clup-1-gruppo-clup-1:src/main/webapp/web/UserServlet.java"
            },
            {
                "code": "String email = request.getParameter(\"email\").trim();",
                "file": "UnimibSoftEngCourse2021_progetto-clup-1-gruppo-clup-1:src/main/webapp/web/UserServlet.java"
            }
        ],
        "id": "AXc7Mr3XL58JHXecylow"
    },
    {
        "taints": [
            {
                "code": "user.setSurname(resultSet.getString(\"Surname\"));",
                "file": "UnimibSoftEngCourse2021_progetto-clup-1-gruppo-clup-1:src/main/webapp/DAO/UserDao.java"
            },
            {
                "code": "try (ResultSet resultSet = preparedStatement.executeQuery()) {\nwhile (resultSet.next()) {\nuser = new User();\nuser.setBirthdayDate(resultSet.getDate(\"BirthdayDate\"));",
                "file": "UnimibSoftEngCourse2021_progetto-clup-1-gruppo-clup-1:src/main/webapp/DAO/UserDao.java"
            },
            {
                "code": "PreparedStatement preparedStatement = con.prepareStatement(query)) {",
                "file": "UnimibSoftEngCourse2021_progetto-clup-1-gruppo-clup-1:src/main/webapp/DAO/UserDao.java"
            },
            {
                "code": "request.getRequestDispatcher(\"/customerInformation.jsp\").forward(request, response);",
                "file": "UnimibSoftEngCourse2021_progetto-clup-1-gruppo-clup-1:src/main/webapp/web/UserServlet.java"
            },
            {
                "code": "}",
                "file": "UnimibSoftEngCourse2021_progetto-clup-1-gruppo-clup-1:src/main/webapp/web/UserServlet.java"
            },
            {
                "code": "}",
                "file": "UnimibSoftEngCourse2021_progetto-clup-1-gruppo-clup-1:src/main/webapp/web/UserServlet.java"
            },
            {
                "code": "}",
                "file": "UnimibSoftEngCourse2021_progetto-clup-1-gruppo-clup-1:src/main/webapp/web/UserServlet.java"
            }
        ],
        "id": "AXcqjdbfrWTuIHEk3a3Q"
    },
    {
        "taints": [
            {
                "code": "}",
                "file": "UnimibSoftEngCourse2021_progetto-clup-1-gruppo-clup-1:src/main/webapp/DAO/UserDao.java"
            },
            {
                "code": "} catch (Exception e) {\nlog.log(Level.FINE, e.toString());\n}\n",
                "file": "UnimibSoftEngCourse2021_progetto-clup-1-gruppo-clup-1:src/main/webapp/DAO/UserDao.java"
            },
            {
                "code": "User user = new User();",
                "file": "UnimibSoftEngCourse2021_progetto-clup-1-gruppo-clup-1:src/main/webapp/web/UserServlet.java"
            },
            {
                "code": "/**",
                "file": "UnimibSoftEngCourse2021_progetto-clup-1-gruppo-clup-1:src/main/webapp/web/UserServlet.java"
            },
            {
                "code": "",
                "file": "UnimibSoftEngCourse2021_progetto-clup-1-gruppo-clup-1:src/main/webapp/web/UserServlet.java"
            }
        ],
        "id": "AXcr8RQlPMMwbdX3GDbD"
    },
    {
        "taints": [
            {
                "code": "criteria.add(Restrictions.sqlRestriction(\"{alias}.nodeid in (select nodeid from snmpinterface where snmpcollect != 'D' and \" + snmpParameterName + \" = ?)\", snmpParmValue, new StringType()));",
                "file": "OpenNMS_opennms:opennms-web-api/src/main/java/org/opennms/web/svclayer/support/DefaultNodeListService.java"
            },
            {
                "code": "private static void addCriteriaForSnmpParm(OnmsCriteria criteria,",
                "file": "OpenNMS_opennms:opennms-web-api/src/main/java/org/opennms/web/svclayer/support/DefaultNodeListService.java"
            },
            {
                "code": "addCriteriaForSnmpParm(criteria, command.getSnmpParm(), command.getSnmpParmValue(), command.getSnmpParmMatchType());",
                "file": "OpenNMS_opennms:opennms-web-api/src/main/java/org/opennms/web/svclayer/support/DefaultNodeListService.java"
            },
            {
                "code": "private void addCriteriaForCommand(OnmsCriteria criteria, NodeListCommand command) {",
                "file": "OpenNMS_opennms:opennms-web-api/src/main/java/org/opennms/web/svclayer/support/DefaultNodeListService.java"
            },
            {
                "code": "addCriteriaForCommand(criteria, command);",
                "file": "OpenNMS_opennms:opennms-web-api/src/main/java/org/opennms/web/svclayer/support/DefaultNodeListService.java"
            },
            {
                "code": "public NodeListModel createNodeList(NodeListCommand command, boolean sanitizeLabels) {",
                "file": "OpenNMS_opennms:opennms-web-api/src/main/java/org/opennms/web/svclayer/support/DefaultNodeListService.java"
            },
            {
                "code": "return createNodeList(command, true);",
                "file": "OpenNMS_opennms:opennms-web-api/src/main/java/org/opennms/web/svclayer/support/DefaultNodeListService.java"
            },
            {
                "code": "public NodeListModel createNodeList(NodeListCommand command) {",
                "file": "OpenNMS_opennms:opennms-web-api/src/main/java/org/opennms/web/svclayer/support/DefaultNodeListService.java"
            },
            {
                "code": "NodeListModel model = m_nodeListService.createNodeList(command);",
                "file": "OpenNMS_opennms:opennms-webapp/src/main/java/org/opennms/web/controller/node/NodeListController.java"
            },
            {
                "code": "public ModelAndView handle(@ModelAttribute(\"command\") NodeListCommand command) {",
                "file": "OpenNMS_opennms:opennms-webapp/src/main/java/org/opennms/web/controller/node/NodeListController.java"
            }
        ],
        "id": "AXQ4BXRLvwTyH42sRNGA"
    },
    {
        "taints": [
            {
                "code": "java.util.Map<String, Object> results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForMap(sql);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00039.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + param + \"'\";",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00039.java"
            },
            {
                "code": "param = name;",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00039.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00039.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00039.java"
            }
        ],
        "id": "AXdMKesWXr7xRhcA7piM"
    },
    {
        "taints": [
            {
                "code": "java.util.Map<String, Object> results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForMap(sql);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00102.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00102.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00102.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00102.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00102.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00102.java"
            }
        ],
        "id": "AXdMKcc3Xr7xRhcA7nBj"
    },
    {
        "taints": [
            {
                "code": "java.util.List<java.util.Map<String, Object>> list = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForList(sql);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00433.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00433.java"
            },
            {
                "code": "bar = param;",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00433.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest00433\");",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00433.java"
            }
        ],
        "id": "AXdMKfb7Xr7xRhcA7qX5"
    },
    {
        "taints": [
            {
                "code": "java.util.List<java.util.Map<String, Object>> list = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForList(sql);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00596.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00596.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00596.java"
            },
            {
                "code": "param = name;",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00596.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00596.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00596.java"
            }
        ],
        "id": "AXdMKfatXr7xRhcA7qWQ"
    },
    {
        "taints": [
            {
                "code": "java.util.List<java.util.Map<String, Object>> list = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForList(sql);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00597.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00597.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00597.java"
            },
            {
                "code": "param = name;",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00597.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00597.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00597.java"
            }
        ],
        "id": "AXdMKcbNXr7xRhcA7m_-"
    },
    {
        "taints": [
            {
                "code": "java.util.Map<String, Object> results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForMap(sql);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00679.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00679.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00679.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest00679\");",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00679.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AXdMKgC-Xr7xRhcA7rEl"
    },
    {
        "taints": [
            {
                "code": "java.util.Map<String, Object> results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForMap(sql);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00768.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00768.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00768.java"
            },
            {
                "code": "param = values[0];",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00768.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest00768\");",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00768.java"
            }
        ],
        "id": "AXdMKeymXr7xRhcA7po4"
    },
    {
        "taints": [
            {
                "code": "java.util.Map<String, Object> results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForMap(sql);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01007.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01007.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01007.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01007.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01007.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01007.java"
            }
        ],
        "id": "AXdMKfe7Xr7xRhcA7qbw"
    },
    {
        "taints": [
            {
                "code": "java.util.List<java.util.Map<String, Object>> list = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForList(sql);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01389.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01389.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01389.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01389.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest01389\");",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01389.java"
            },
            {
                "code": "if (!map.isEmpty()) {",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01389.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01389.java"
            }
        ],
        "id": "AXdMKfUzXr7xRhcA7qPI"
    },
    {
        "taints": [
            {
                "code": "java.util.List<java.util.Map<String, Object>> list = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForList(sql);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01468.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01468.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01468.java"
            },
            {
                "code": "param = name;",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01468.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01468.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01468.java"
            }
        ],
        "id": "AXdMKZPBXr7xRhcA7jcM"
    },
    {
        "taints": [
            {
                "code": "java.util.Map<String, Object> results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForMap(sql);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01470.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01470.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01470.java"
            },
            {
                "code": "param = name;",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01470.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01470.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01470.java"
            }
        ],
        "id": "AXdMKZGUXr7xRhcA7jSu"
    },
    {
        "taints": [
            {
                "code": "java.util.List<java.util.Map<String, Object>> list = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForList(sql);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01554.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01554.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01554.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest01554\");",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01554.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AXdMKd2kXr7xRhcA7orM"
    },
    {
        "taints": [
            {
                "code": "java.util.List<java.util.Map<String, Object>> list = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForList(sql);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01724.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01724.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01724.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01724.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01724.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01724.java"
            }
        ],
        "id": "AXdMKa4TXr7xRhcA7lOz"
    },
    {
        "taints": [
            {
                "code": "java.util.List<java.util.Map<String, Object>> list = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForList(sql);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02178.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02178.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02178.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest02178\");",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02178.java"
            }
        ],
        "id": "AXdMKfPfXr7xRhcA7qJD"
    },
    {
        "taints": [
            {
                "code": "java.util.Map<String, Object> results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForMap(sql);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02181.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02181.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02181.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest02181\");",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02181.java"
            }
        ],
        "id": "AXdMKeZYXr7xRhcA7pOl"
    },
    {
        "taints": [
            {
                "code": "java.util.Map<String, Object> results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForMap(sql);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02281.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02281.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02281.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02281.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest02281\");",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02281.java"
            },
            {
                "code": "if (!map.isEmpty()) {",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02281.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02281.java"
            }
        ],
        "id": "AXdMKZXqXr7xRhcA7jln"
    },
    {
        "taints": [
            {
                "code": "java.util.List<java.util.Map<String, Object>> list = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForList(sql);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02358.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02358.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02358.java"
            },
            {
                "code": "param = name;",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02358.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02358.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02358.java"
            }
        ],
        "id": "AXdMKaFYXr7xRhcA7kXD"
    },
    {
        "taints": [
            {
                "code": "java.util.List<java.util.Map<String, Object>> list = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForList(sql);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02642.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02642.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02642.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02642.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02642.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02642.java"
            }
        ],
        "id": "AXdMKgUGXr7xRhcA7rYK"
    },
    {
        "taints": [
            {
                "code": "java.util.List<java.util.Map<String, Object>> list = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForList(sql);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02643.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02643.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02643.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02643.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02643.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02643.java"
            }
        ],
        "id": "AXdMKcnzXr7xRhcA7nNU"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Long.class);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00025.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + param + \"'\";",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00025.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest00025\");",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00025.java"
            }
        ],
        "id": "AXdMKdwVXr7xRhcA7oik"
    },
    {
        "taints": [
            {
                "code": "Integer results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Integer.class);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00198.java"
            },
            {
                "code": "String sql = \"SELECT  TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\"+ bar + \"'\" ;",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00198.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00198.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00198.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest00198\");",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00198.java"
            }
        ],
        "id": "AXdMKcDbXr7xRhcA7mlF"
    },
    {
        "taints": [
            {
                "code": "Integer results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Integer.class);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00199.java"
            },
            {
                "code": "String sql = \"SELECT  TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\"+ bar + \"'\" ;",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00199.java"
            },
            {
                "code": "bar = param;",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00199.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00199.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest00199\");",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00199.java"
            }
        ],
        "id": "AXdMKfg9Xr7xRhcA7qeq"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Long.class);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00336.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00336.java"
            },
            {
                "code": "else bar = param;",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00336.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00336.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00336.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest00336\");",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00336.java"
            }
        ],
        "id": "AXdMKdVtXr7xRhcA7oBM"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Long.class);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00678.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00678.java"
            },
            {
                "code": "bar = param;",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00678.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest00678\");",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00678.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AXdMKbLFXr7xRhcA7lke"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Long.class);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00764.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00764.java"
            },
            {
                "code": "String bar = param;",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00764.java"
            },
            {
                "code": "param = values[0];",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00764.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest00764\");",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00764.java"
            }
        ],
        "id": "AXdMKafhXr7xRhcA7k0g"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Long.class);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00765.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00765.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00765.java"
            },
            {
                "code": "param = values[0];",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00765.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest00765\");",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00765.java"
            }
        ],
        "id": "AXdMKfacXr7xRhcA7qV1"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Long.class);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00766.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00766.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00766.java"
            },
            {
                "code": "param = values[0];",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00766.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest00766\");",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00766.java"
            }
        ],
        "id": "AXdMKZA9Xr7xRhcA7jNm"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Long.class);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00767.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00767.java"
            },
            {
                "code": "bar = param;",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00767.java"
            },
            {
                "code": "param = values[0];",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00767.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest00767\");",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00767.java"
            }
        ],
        "id": "AXdMKdmEXr7xRhcA7oV1"
    },
    {
        "taints": [
            {
                "code": "Integer results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Integer.class);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00842.java"
            },
            {
                "code": "String sql = \"SELECT  TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\"+ bar + \"'\" ;",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00842.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00842.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00842.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00842.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00842.java"
            }
        ],
        "id": "AXdMKbz1Xr7xRhcA7mSj"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Long.class);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00843.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00843.java"
            },
            {
                "code": "bar = (String)map12983.get(\"keyB-12983\"); // get it back out",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00843.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00843.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00843.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00843.java"
            }
        ],
        "id": "AXdMKep_Xr7xRhcA7pfR"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Long.class);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01006.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01006.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01006.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01006.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01006.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01006.java"
            }
        ],
        "id": "AXdMKaLhXr7xRhcA7kdl"
    },
    {
        "taints": [
            {
                "code": "Integer results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Integer.class);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01087.java"
            },
            {
                "code": "String sql = \"SELECT  TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\"+ bar + \"'\" ;",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01087.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01087.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01087.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest01087\");",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01087.java"
            }
        ],
        "id": "AXdMKftCXr7xRhcA7qrP"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Long.class);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01088.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01088.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01088.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01088.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest01088\");",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01088.java"
            }
        ],
        "id": "AXdMKcHQXr7xRhcA7mpR"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Long.class);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01215.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01215.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01215.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01215.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01215.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest01215\");",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01215.java"
            }
        ],
        "id": "AXdMKa7KXr7xRhcA7lRO"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Long.class);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01308.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01308.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01308.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest01308\");",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01308.java"
            }
        ],
        "id": "AXdMKaoSXr7xRhcA7k9X"
    },
    {
        "taints": [
            {
                "code": "Integer results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Integer.class);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01387.java"
            },
            {
                "code": "String sql = \"SELECT  TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\"+ bar + \"'\" ;",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01387.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01387.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01387.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest01387\");",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01387.java"
            },
            {
                "code": "if (!map.isEmpty()) {",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01387.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01387.java"
            }
        ],
        "id": "AXdMKfx8Xr7xRhcA7qw5"
    },
    {
        "taints": [
            {
                "code": "Integer results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Integer.class);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01388.java"
            },
            {
                "code": "String sql = \"SELECT  TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\"+ bar + \"'\" ;",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01388.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01388.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01388.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest01388\");",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01388.java"
            },
            {
                "code": "if (!map.isEmpty()) {",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01388.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01388.java"
            }
        ],
        "id": "AXdMKYAVXr7xRhcA7iFn"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Long.class);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01390.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01390.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01390.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01390.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest01390\");",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01390.java"
            },
            {
                "code": "if (!map.isEmpty()) {",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01390.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01390.java"
            }
        ],
        "id": "AXdMKeiFXr7xRhcA7pXi"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Long.class);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01556.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01556.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01556.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest01556\");",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01556.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AXdMKfmXXr7xRhcA7qkJ"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Long.class);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01625.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01625.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01625.java"
            },
            {
                "code": "param = values[0];",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01625.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest01625\");",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01625.java"
            }
        ],
        "id": "AXdMKc0WXr7xRhcA7nbR"
    },
    {
        "taints": [
            {
                "code": "Integer results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Integer.class);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01723.java"
            },
            {
                "code": "String sql = \"SELECT  TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\"+ bar + \"'\" ;",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01723.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01723.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01723.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01723.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01723.java"
            }
        ],
        "id": "AXdMKZgqXr7xRhcA7jv6"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Long.class);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01965.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01965.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01965.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01965.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest01965\");",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01965.java"
            }
        ],
        "id": "AXdMKazGXr7xRhcA7lJI"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Long.class);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02179.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02179.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02179.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest02179\");",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02179.java"
            }
        ],
        "id": "AXdMKcFBXr7xRhcA7mm3"
    },
    {
        "taints": [
            {
                "code": "Integer results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Integer.class);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02275.java"
            },
            {
                "code": "String sql = \"SELECT  TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\"+ bar + \"'\" ;",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02275.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02275.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02275.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest02275\");",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02275.java"
            },
            {
                "code": "if (!map.isEmpty()) {",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02275.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02275.java"
            }
        ],
        "id": "AXdMKZeuXr7xRhcA7jt2"
    },
    {
        "taints": [
            {
                "code": "Integer results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Integer.class);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02276.java"
            },
            {
                "code": "String sql = \"SELECT  TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\"+ bar + \"'\" ;",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02276.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02276.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02276.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest02276\");",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02276.java"
            },
            {
                "code": "if (!map.isEmpty()) {",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02276.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02276.java"
            }
        ],
        "id": "AXdMKdG7Xr7xRhcA7nxR"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Long.class);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02279.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02279.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02279.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02279.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest02279\");",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02279.java"
            },
            {
                "code": "if (!map.isEmpty()) {",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02279.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02279.java"
            }
        ],
        "id": "AXdMKdf3Xr7xRhcA7oOu"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Long.class);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02280.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02280.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02280.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02280.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest02280\");",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02280.java"
            },
            {
                "code": "if (!map.isEmpty()) {",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02280.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02280.java"
            }
        ],
        "id": "AXdMKdHkXr7xRhcA7nyb"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Long.class);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02359.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02359.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02359.java"
            },
            {
                "code": "param = name;",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02359.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02359.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02359.java"
            }
        ],
        "id": "AXdMKcdmXr7xRhcA7nCc"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql, Long.class);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02360.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02360.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02360.java"
            },
            {
                "code": "param = name;",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02360.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02360.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "raa-appsec_Benchmark:src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02360.java"
            }
        ],
        "id": "AXdMKdfLXr7xRhcA7oNv"
    },
    {
        "taints": [
            {
                "code": "ResultSet result = stmt.executeQuery(query);",
                "file": "prabhavagrawal08_discoveri-happytrip:src/main/java/com/happytrip/dao/jdbc/JdbcCityDao.java"
            },
            {
                "code": "String query = \"select * from cities where cityname='\"+name+\"'\";",
                "file": "prabhavagrawal08_discoveri-happytrip:src/main/java/com/happytrip/dao/jdbc/JdbcCityDao.java"
            },
            {
                "code": "public City findCityByName(String name) {",
                "file": "prabhavagrawal08_discoveri-happytrip:src/main/java/com/happytrip/dao/jdbc/JdbcCityDao.java"
            },
            {
                "code": "return cityDao.findCityByName(name);",
                "file": "prabhavagrawal08_discoveri-happytrip:src/main/java/com/happytrip/services/impl/AdminServiceImpl.java"
            },
            {
                "code": "public City getCityByName(String name) {",
                "file": "prabhavagrawal08_discoveri-happytrip:src/main/java/com/happytrip/services/impl/AdminServiceImpl.java"
            },
            {
                "code": "route.setFromCity(adminService.getCityByName(route.getFromCity()\n.getCityName()));",
                "file": "prabhavagrawal08_discoveri-happytrip:src/main/java/com/happytrip/controllers/AdminController.java"
            },
            {
                "code": "route.setFromCity(adminService.getCityByName(route.getFromCity()",
                "file": "prabhavagrawal08_discoveri-happytrip:src/main/java/com/happytrip/controllers/AdminController.java"
            },
            {
                "code": "public String saveRoute(@ModelAttribute(\"AddRoute\") Route route,",
                "file": "prabhavagrawal08_discoveri-happytrip:src/main/java/com/happytrip/controllers/AdminController.java"
            }
        ],
        "id": "AXdDeJ_lIodurz7abstH"
    },
    {
        "taints": [
            {
                "code": "result = stmt.executeQuery(searchQuery);",
                "file": "prabhavagrawal08_discoveri-happytrip:src/main/java/com/happytrip/dao/jdbc/JdbcRouteDao.java"
            },
            {
                "code": "String searchQuery = \"select route0_.routeid,fromcity.cityname,tocity.cityname,fromcity.cityid,tocity.cityid from routes \"\n+ \"route0_,cities fromcity,cities tocity where route0_.fromcityid=fromcity.cityid and route0_.tocityid=tocity.cityid and \"\n+ \"fromcity.cityname='\"\n+ fromCity\n+ \"' and tocity.cityname='\"\n+ toCity + \"'\";",
                "file": "prabhavagrawal08_discoveri-happytrip:src/main/java/com/happytrip/dao/jdbc/JdbcRouteDao.java"
            },
            {
                "code": "public Route findByCityNames(String fromCity, String toCity) {",
                "file": "prabhavagrawal08_discoveri-happytrip:src/main/java/com/happytrip/dao/jdbc/JdbcRouteDao.java"
            },
            {
                "code": "System.out.println(routeDao.findByCityNames(searchData.getToCity(),searchData.getFromCity()));",
                "file": "prabhavagrawal08_discoveri-happytrip:src/main/java/com/happytrip/controllers/SearchController.java"
            },
            {
                "code": "System.out.println(routeDao.findByCityNames(searchData.getToCity(),searchData.getFromCity()));",
                "file": "prabhavagrawal08_discoveri-happytrip:src/main/java/com/happytrip/controllers/SearchController.java"
            },
            {
                "code": "@ModelAttribute(\"SearchData\") FlightSearchDto searchData,Model model) {",
                "file": "prabhavagrawal08_discoveri-happytrip:src/main/java/com/happytrip/controllers/SearchController.java"
            }
        ],
        "id": "AXdDeJ_xIodurz7absuK"
    },
    {
        "taints": [
            {
                "code": "stmt.executeUpdate(query);",
                "file": "prabhavagrawal08_discoveri-happytrip:src/main/java/com/happytrip/dao/jdbc/JdbcUserDao.java"
            },
            {
                "code": "String query = \"UPDATE users SET `username`='\"+user.getEmail()+\"', `fullname`='\"+user.getFullName()+\"', `gender`='\"+user.getGender()+\"', `password`='\"+user.getPassword()+\"' WHERE `user_id`=\"+user.getUserId()+\";\";",
                "file": "prabhavagrawal08_discoveri-happytrip:src/main/java/com/happytrip/dao/jdbc/JdbcUserDao.java"
            },
            {
                "code": "public void update(User user) {",
                "file": "prabhavagrawal08_discoveri-happytrip:src/main/java/com/happytrip/dao/jdbc/JdbcUserDao.java"
            },
            {
                "code": "this.userDao.update(user);",
                "file": "prabhavagrawal08_discoveri-happytrip:src/main/java/com/happytrip/services/impl/UserProfileServiceImpl.java"
            },
            {
                "code": "public void updateUser(User user) {",
                "file": "prabhavagrawal08_discoveri-happytrip:src/main/java/com/happytrip/services/impl/UserProfileServiceImpl.java"
            },
            {
                "code": "this.profileService.updateUser(userDB);",
                "file": "prabhavagrawal08_discoveri-happytrip:src/main/java/com/happytrip/controllers/ProfileController.java"
            },
            {
                "code": "String name = auth.getName();",
                "file": "prabhavagrawal08_discoveri-happytrip:src/main/java/com/happytrip/util/AuthenticatedUserUtil.java"
            }
        ],
        "id": "AXdDeJ_oIodurz7abstk"
    },
    {
        "taints": [
            {
                "code": "stmt.executeUpdate(query1);",
                "file": "prabhavagrawal08_discoveri-happytrip:src/main/java/com/happytrip/dao/jdbc/JdbcUserDao.java"
            },
            {
                "code": "query1 = \"UPDATE `happytrip_itr1`.`usercontactinformation` SET `address`='\"+user.getUserContact().getAddress()+\"', `mobileno`='\"+user.getUserContact().getMobileNo()+\"', `pincode`='\"+user.getUserContact().getPinCode()+\"', `cityid`=\"+user.getUserContact().getCity().getCityId()+\" WHERE `contactid`='\"+user.getUserContact().getUserId()+\"'\";",
                "file": "prabhavagrawal08_discoveri-happytrip:src/main/java/com/happytrip/dao/jdbc/JdbcUserDao.java"
            },
            {
                "code": "public void update(User user) {",
                "file": "prabhavagrawal08_discoveri-happytrip:src/main/java/com/happytrip/dao/jdbc/JdbcUserDao.java"
            },
            {
                "code": "this.userDao.update(user);",
                "file": "prabhavagrawal08_discoveri-happytrip:src/main/java/com/happytrip/services/impl/UserProfileServiceImpl.java"
            },
            {
                "code": "public void updateUser(User user) {",
                "file": "prabhavagrawal08_discoveri-happytrip:src/main/java/com/happytrip/services/impl/UserProfileServiceImpl.java"
            },
            {
                "code": "this.profileService.updateUser(userDB);",
                "file": "prabhavagrawal08_discoveri-happytrip:src/main/java/com/happytrip/controllers/ProfileController.java"
            },
            {
                "code": "public String saveProfileData(UserDto userProfile) throws IOException {",
                "file": "prabhavagrawal08_discoveri-happytrip:src/main/java/com/happytrip/controllers/ProfileController.java"
            },
            {
                "code": "return saveProfileData(userProfile);",
                "file": "prabhavagrawal08_discoveri-happytrip:src/main/java/com/happytrip/controllers/ProfileController.java"
            },
            {
                "code": "@ModelAttribute(\"UserProfile\") UserDto userProfile,",
                "file": "prabhavagrawal08_discoveri-happytrip:src/main/java/com/happytrip/controllers/ProfileController.java"
            }
        ],
        "id": "AXdDeJ_oIodurz7abstl"
    },
    {
        "taints": [
            {
                "code": "List<Article> allByTagsLike = jdbcTemplate.query(\nsql,\n(rs, rowNum) -> Article.builder()\n.aid(rs.getLong(\"aid\"))\n.uid(rs.getLong(\"uid\"))\n.title(rs.getString(\"title\"))\n.tags(rs.getString(\"tags\"))\n.imgUrl(rs.getString(\"img_url\"))\n.content(rs.getString(\"content\"))\n.createTime(rs.getTime(\"create_time\"))\n.hot(rs.getBoolean(\"hot\"))\n.build());",
                "file": "haohaolee_InSecurity:src/main/java/com/thoughtworks/security/insecurity/service/ArticleService.java"
            },
            {
                "code": "String sql = \"select * from article where title like '%\" + key + \"%';\";",
                "file": "haohaolee_InSecurity:src/main/java/com/thoughtworks/security/insecurity/service/ArticleService.java"
            },
            {
                "code": "public ResultDTO<List<ArticleResponseDTO>> listByKey(String key) {",
                "file": "haohaolee_InSecurity:src/main/java/com/thoughtworks/security/insecurity/service/ArticleService.java"
            },
            {
                "code": "return articleService.listByKey(key);",
                "file": "haohaolee_InSecurity:src/main/java/com/thoughtworks/security/insecurity/controller/ArticleController.java"
            },
            {
                "code": "public ResultDTO<List<ArticleResponseDTO>> listByKey(@RequestParam(\"key\") String key) {",
                "file": "haohaolee_InSecurity:src/main/java/com/thoughtworks/security/insecurity/controller/ArticleController.java"
            }
        ],
        "id": "AXaNMP9q8LKHpH7XkVBg"
    },
    {
        "taints": [
            {
                "code": "ResultSet rs = conn.createStatement().executeQuery(sql);",
                "file": "repoJFM_wvctf:src/main/java/com/julianfm/wvctf/model/repository/ProductRepository.java"
            },
            {
                "code": "sql = \"SELECT *\"\n+ \"FROM product \"\n+ \"WHERE LOWER( name ) LIKE '%\"\n+ nameQuery\n+ \"%'\";",
                "file": "repoJFM_wvctf:src/main/java/com/julianfm/wvctf/model/repository/ProductRepository.java"
            },
            {
                "code": "public default List<Product> findByName (String name) throws SQLException {",
                "file": "repoJFM_wvctf:src/main/java/com/julianfm/wvctf/model/repository/ProductRepository.java"
            },
            {
                "code": "List<Product> products = productRepository.findByName(name);",
                "file": "repoJFM_wvctf:src/main/java/com/julianfm/wvctf/model/service/ProductServiceImplementation.java"
            },
            {
                "code": "public List<ProductDTO> findByName(String name) throws SQLException {",
                "file": "repoJFM_wvctf:src/main/java/com/julianfm/wvctf/model/service/ProductServiceImplementation.java"
            },
            {
                "code": "return productService.findByName(name);",
                "file": "repoJFM_wvctf:src/main/java/com/julianfm/wvctf/controller/ProductController.java"
            },
            {
                "code": "public List<ProductDTO> findByName(@PathVariable String name) {",
                "file": "repoJFM_wvctf:src/main/java/com/julianfm/wvctf/controller/ProductController.java"
            }
        ],
        "id": "AXRL2ByGEX4aK-xQ7L6A"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, new String[] { \"username\", \"password\" } );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00109.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00109.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00109.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00109.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00109.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00109.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00109.java"
            }
        ],
        "id": "AXX0jxJNvwDCMN2jA79m"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.batchUpdate(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00194.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00194.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00194.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00194.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00194.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest00194\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00194.java"
            }
        ],
        "id": "AXX0jxU3vwDCMN2jA79y"
    },
    {
        "taints": [
            {
                "code": "java.util.Map results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForMap(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00598.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00598.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00598.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00598.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00598.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00598.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00598.java"
            }
        ],
        "id": "AXX0jxOFvwDCMN2jA79r"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00604.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00604.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00604.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00604.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00604.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00604.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00604.java"
            }
        ],
        "id": "AXX0jxHXvwDCMN2jA79k"
    },
    {
        "taints": [
            {
                "code": "java.util.List<String> results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.query(sql,  new org.springframework.jdbc.core.RowMapper<String>() {\npublic String mapRow(java.sql.ResultSet rs, int rowNum) throws java.sql.SQLException {\ntry {\nreturn rs.getString(\"USERNAME\");\n} catch (java.sql.SQLException e) {\nif (org.owasp.benchmark.helpers.DatabaseHelper.hideSQLErrors) {\nreturn \"Error processing query.\";\n}\nelse throw e;\n}\n}\n});",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00677.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00677.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00677.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00677.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest00677\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00677.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AXX0jxHOvwDCMN2jA79j"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00996.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00996.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00996.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00996.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00996.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00996.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00996.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00996.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00996.java"
            }
        ],
        "id": "AXX0jxPrvwDCMN2jA79t"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01000.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql, java.sql.ResultSet.TYPE_FORWARD_ONLY,\njava.sql.ResultSet.CONCUR_READ_ONLY, java.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01000.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01000.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01000.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01000.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01000.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01000.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01000.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01000.java"
            }
        ],
        "id": "AXX0jxJxvwDCMN2jA79n"
    },
    {
        "taints": [
            {
                "code": "= org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForRowSet(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01009.java"
            },
            {
                "code": "String sql = \"SELECT  * from USERS where USERNAME='foo' and PASSWORD='\"+ bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01009.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01009.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01009.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01009.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01009.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01009.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01009.java"
            }
        ],
        "id": "AXX0jxVbvwDCMN2jA79z"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, java.sql.Statement.RETURN_GENERATED_KEYS );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01221.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01221.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01221.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01221.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01221.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01221.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01221.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest01221\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01221.java"
            }
        ],
        "id": "AXX0jxE9vwDCMN2jA79h"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01302.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql, java.sql.ResultSet.TYPE_FORWARD_ONLY,\njava.sql.ResultSet.CONCUR_READ_ONLY, java.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01302.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01302.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01302.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01302.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01302.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest01302\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01302.java"
            }
        ],
        "id": "AXX0jxTQvwDCMN2jA79w"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01306.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql, new String[] {\"Column1\",\"Column2\"} );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01306.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01306.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01306.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01306.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01306.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest01306\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01306.java"
            }
        ],
        "id": "AXX0jxFzvwDCMN2jA79i"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, java.sql.Statement.RETURN_GENERATED_KEYS );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01474.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01474.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01474.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01474.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01474.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01474.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01474.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01474.java"
            }
        ],
        "id": "AXX0jxSEvwDCMN2jA79v"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, new int[] {1,2} );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01630.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01630.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01630.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01630.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01630.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01630.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest01630\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01630.java"
            }
        ],
        "id": "AXX0jxMfvwDCMN2jA79q"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01962.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql, new String[] {\"Column1\",\"Column2\"} );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01962.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01962.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01962.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01962.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01962.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01962.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest01962\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01962.java"
            }
        ],
        "id": "AXX0jxXNvwDCMN2jA791"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, new int[] { 1, 2 } );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02096.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02096.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02096.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02096.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02096.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02096.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02096.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest02096\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02096.java"
            }
        ],
        "id": "AXX0jxT6vwDCMN2jA79x"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02099.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02099.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02099.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02099.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02099.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02099.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02099.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest02099\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02099.java"
            }
        ],
        "id": "AXX0jw83vwDCMN2jA79e"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02170.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql, java.sql.ResultSet.TYPE_FORWARD_ONLY,\njava.sql.ResultSet.CONCUR_READ_ONLY, java.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02170.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02170.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02170.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02170.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02170.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest02170\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02170.java"
            }
        ],
        "id": "AXX0jxRnvwDCMN2jA79u"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02171.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02171.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02171.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02171.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02171.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02171.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest02171\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02171.java"
            }
        ],
        "id": "AXX0jw6TvwDCMN2jA79d"
    },
    {
        "taints": [
            {
                "code": "java.util.Map results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForMap(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02182.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02182.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02182.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02182.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02182.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest02182\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02182.java"
            }
        ],
        "id": "AXX0jxVsvwDCMN2jA790"
    },
    {
        "taints": [
            {
                "code": "java.util.List list = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForList(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02277.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02277.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02277.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02277.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02277.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02277.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest02277\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02277.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02277.java"
            }
        ],
        "id": "AXX0jxPgvwDCMN2jA79s"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02286.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02286.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02286.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02286.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02286.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02286.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest02286\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02286.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02286.java"
            }
        ],
        "id": "AXX0jw9RvwDCMN2jA79f"
    },
    {
        "taints": [
            {
                "code": "java.util.Map results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForMap(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02453.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02453.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02453.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02453.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02453.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest02453\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02453.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AXX0jxKcvwDCMN2jA79o"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02532.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02532.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02532.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02532.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02532.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02532.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02532.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest02532\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02532.java"
            }
        ],
        "id": "AXX0jxX8vwDCMN2jA792"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02535.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY,\njava.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02535.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02535.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02535.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02535.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02535.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02535.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest02535\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02535.java"
            }
        ],
        "id": "AXX0jxI4vwDCMN2jA79l"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02627.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql, java.sql.ResultSet.TYPE_FORWARD_ONLY,\njava.sql.ResultSet.CONCUR_READ_ONLY );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02627.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02627.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02627.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02627.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02627.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02627.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02627.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02627.java"
            }
        ],
        "id": "AXX0jxBLvwDCMN2jA79g"
    },
    {
        "taints": [
            {
                "code": "int[] counts = statement.executeBatch();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02647.java"
            },
            {
                "code": "statement.addBatch( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02647.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02647.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02647.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02647.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02647.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02647.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02647.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02647.java"
            }
        ],
        "id": "AXX0jxLEvwDCMN2jA79p"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00008.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00008.java"
            },
            {
                "code": "String sql = \"{call \" + param + \"}\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00008.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00008.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest00008\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00008.java"
            }
        ],
        "id": "AWyvhr5Pdg2jiL0y7dZN"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00018.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ param + \"')\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00018.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00018.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00018.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest00018\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00018.java"
            }
        ],
        "id": "AWyvhrsrdg2jiL0y7dVD"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00024.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY,\njava.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00024.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ param +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00024.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest00024\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00024.java"
            }
        ],
        "id": "AWyvhrxzdg2jiL0y7dWu"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForLong(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00025.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + param + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00025.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest00025\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00025.java"
            }
        ],
        "id": "AWyvhrsHdg2jiL0y7dU3"
    },
    {
        "taints": [
            {
                "code": "= org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForRowSet(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00026.java"
            },
            {
                "code": "String sql = \"SELECT  * from USERS where USERNAME='foo' and PASSWORD='\"+ param + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00026.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest00026\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00026.java"
            }
        ],
        "id": "AWyvhrmcdg2jiL0y7dTB"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00027.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ param + \"')\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00027.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest00027\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00027.java"
            }
        ],
        "id": "AWyvhrt8dg2jiL0y7dVc"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.execute(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00032.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + param + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00032.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00032.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest00032\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00032.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00032.java"
            }
        ],
        "id": "AWyvhrqQdg2jiL0y7dUR"
    },
    {
        "taints": [
            {
                "code": "= org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForRowSet(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00033.java"
            },
            {
                "code": "String sql = \"SELECT  * from USERS where USERNAME='foo' and PASSWORD='\"+ param + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00033.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00033.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest00033\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00033.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00033.java"
            }
        ],
        "id": "AWyvhrntdg2jiL0y7dTc"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, java.sql.Statement.RETURN_GENERATED_KEYS );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00034.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ param +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00034.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00034.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest00034\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00034.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00034.java"
            }
        ],
        "id": "AWyvhrtedg2jiL0y7dVR"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00037.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY,\njava.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00037.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ param +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00037.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00037.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00037.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00037.java"
            }
        ],
        "id": "AWyvhrxJdg2jiL0y7dWh"
    },
    {
        "taints": [
            {
                "code": "java.util.List<String> results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.query(sql,  new org.springframework.jdbc.core.RowMapper<String>() {\npublic String mapRow(java.sql.ResultSet rs, int rowNum) throws java.sql.SQLException {\ntry {\nreturn rs.getString(\"USERNAME\");\n} catch (java.sql.SQLException e) {\nif (org.owasp.benchmark.helpers.DatabaseHelper.hideSQLErrors) {\nreturn \"Error processing query.\";\n}\nelse throw e;\n}\n}\n});",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00038.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + param + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00038.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00038.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00038.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00038.java"
            }
        ],
        "id": "AWyvhrsfdg2jiL0y7dU_"
    },
    {
        "taints": [
            {
                "code": "java.util.Map results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForMap(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00039.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + param + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00039.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00039.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00039.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00039.java"
            }
        ],
        "id": "AWyvhrkRdg2jiL0y7dSR"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, new int[] {1,2} );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00043.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ param + \"')\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00043.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest00043\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00043.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AWyvhrgYdg2jiL0y7dQ8"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00100.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY,\njava.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00100.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00100.java"
            },
            {
                "code": "bar = (String)map72344.get(\"keyB-72344\"); // get it back out",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00100.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00100.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00100.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00100.java"
            }
        ],
        "id": "AWyvhrzmdg2jiL0y7dXU"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00101.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql, new String[] {\"Column1\",\"Column2\"} );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00101.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00101.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00101.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00101.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00101.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00101.java"
            }
        ],
        "id": "AWyvhrhbdg2jiL0y7dRS"
    },
    {
        "taints": [
            {
                "code": "java.util.Map results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForMap(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00102.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00102.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00102.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00102.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00102.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00102.java"
            }
        ],
        "id": "AWyvhrwxdg2jiL0y7dWZ"
    },
    {
        "taints": [
            {
                "code": "Object results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql,new Object[]{}, String.class);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00103.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 USERNAME from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00103.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00103.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00103.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00103.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00103.java"
            }
        ],
        "id": "AWyvhrpydg2jiL0y7dUJ"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, java.sql.Statement.RETURN_GENERATED_KEYS );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00106.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00106.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00106.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00106.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00106.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00106.java"
            }
        ],
        "id": "AWyvhr5Ddg2jiL0y7dZJ"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, new int[] { 1, 2 } );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00108.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00108.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00108.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00108.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00108.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00108.java"
            }
        ],
        "id": "AWyvhrhodg2jiL0y7dRW"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00111.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00111.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00111.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00111.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00111.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00111.java"
            }
        ],
        "id": "AWyvhrpfdg2jiL0y7dUC"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00112.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00112.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00112.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00112.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00112.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00112.java"
            }
        ],
        "id": "AWyvhrkFdg2jiL0y7dSN"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, new String[] {\"USERNAME\",\"PASSWORD\"} );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00115.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00115.java"
            },
            {
                "code": "bar = (String)map11928.get(\"keyB-11928\"); // get it back out",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00115.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00115.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00115.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00115.java"
            }
        ],
        "id": "AWyvhrf9dg2jiL0y7dQ1"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00192.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00192.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00192.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00192.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00192.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest00192\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00192.java"
            }
        ],
        "id": "AWyvhrxVdg2jiL0y7dWl"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00193.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql, new String[] {\"Column1\",\"Column2\"} );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00193.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00193.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00193.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00193.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest00193\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00193.java"
            }
        ],
        "id": "AWyvhr2mdg2jiL0y7dYV"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.execute(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00195.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00195.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00195.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00195.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest00195\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00195.java"
            }
        ],
        "id": "AWyvhrx5dg2jiL0y7dWw"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.execute(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00196.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00196.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00196.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00196.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest00196\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00196.java"
            }
        ],
        "id": "AWyvhrr0dg2jiL0y7dUx"
    },
    {
        "taints": [
            {
                "code": "int results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForInt(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00198.java"
            },
            {
                "code": "String sql = \"SELECT  TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\"+ bar + \"'\" ;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00198.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00198.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00198.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest00198\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00198.java"
            }
        ],
        "id": "AWyvhr0Kdg2jiL0y7dXg"
    },
    {
        "taints": [
            {
                "code": "int results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForInt(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00199.java"
            },
            {
                "code": "String sql = \"SELECT  TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\"+ bar + \"'\" ;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00199.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00199.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00199.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest00199\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00199.java"
            }
        ],
        "id": "AWyvhr5Jdg2jiL0y7dZL"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, new String[] {\"USERNAME\",\"PASSWORD\"} );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00203.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00203.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00203.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00203.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest00203\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00203.java"
            }
        ],
        "id": "AWyvhruUdg2jiL0y7dVk"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, new String[] {\"USERNAME\",\"PASSWORD\"} );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00204.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00204.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00204.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00204.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest00204\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00204.java"
            }
        ],
        "id": "AWyvhr5bdg2jiL0y7dZR"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00328.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00328.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00328.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00328.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00328.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00328.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest00328\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00328.java"
            }
        ],
        "id": "AWyvhr2-dg2jiL0y7dYc"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00335.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql, new int[] { 1, 2 } );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00335.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00335.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00335.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00335.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00335.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest00335\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00335.java"
            }
        ],
        "id": "AWyvhr43dg2jiL0y7dZE"
    },
    {
        "taints": [
            {
                "code": "Object results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql,new Object[]{}, String.class);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00337.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 USERNAME from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00337.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00337.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00337.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00337.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest00337\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00337.java"
            }
        ],
        "id": "AWyvhrovdg2jiL0y7dTw"
    },
    {
        "taints": [
            {
                "code": "= org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForRowSet(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00339.java"
            },
            {
                "code": "String sql = \"SELECT  * from USERS where USERNAME='foo' and PASSWORD='\"+ bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00339.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00339.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00339.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00339.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest00339\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00339.java"
            }
        ],
        "id": "AWyvhrxtdg2jiL0y7dWs"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.batchUpdate(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00341.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00341.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00341.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00341.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00341.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest00341\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00341.java"
            }
        ],
        "id": "AWyvhrhJdg2jiL0y7dRM"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, new String[] { \"username\", \"password\" } );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00342.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00342.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00342.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00342.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00342.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest00342\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00342.java"
            }
        ],
        "id": "AWyvhryvdg2jiL0y7dXC"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00428.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00428.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00428.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00428.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest00428\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00428.java"
            }
        ],
        "id": "AWyvhroXdg2jiL0y7dTp"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00429.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY,\njava.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00429.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00429.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00429.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest00429\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00429.java"
            }
        ],
        "id": "AWyvhrtkdg2jiL0y7dVT"
    },
    {
        "taints": [
            {
                "code": "java.util.List<String> results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.query(sql,  new org.springframework.jdbc.core.RowMapper<String>() {\npublic String mapRow(java.sql.ResultSet rs, int rowNum) throws java.sql.SQLException {\ntry {\nreturn rs.getString(\"USERNAME\");\n} catch (java.sql.SQLException e) {\nif (org.owasp.benchmark.helpers.DatabaseHelper.hideSQLErrors) {\nreturn \"Error processing query.\";\n}\nelse throw e;\n}\n}\n});",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00431.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00431.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00431.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest00431\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00431.java"
            }
        ],
        "id": "AWyvhrfxdg2jiL0y7dQw"
    },
    {
        "taints": [
            {
                "code": "java.util.List list = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForList(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00433.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00433.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00433.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest00433\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00433.java"
            }
        ],
        "id": "AWyvhr31dg2jiL0y7dYv"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.batchUpdate(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00434.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00434.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00434.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest00434\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00434.java"
            }
        ],
        "id": "AWyvhrkjdg2jiL0y7dSX"
    },
    {
        "taints": [
            {
                "code": "int[] counts = statement.executeBatch();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00435.java"
            },
            {
                "code": "statement.addBatch( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00435.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00435.java"
            },
            {
                "code": "bar = (String)map86691.get(\"keyB-86691\"); // get it back out",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00435.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest00435\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00435.java"
            }
        ],
        "id": "AWyvhro7dg2jiL0y7dT1"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, new String[] { \"username\", \"password\" } );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00438.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00438.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00438.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest00438\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00438.java"
            }
        ],
        "id": "AWyvhrgkdg2jiL0y7dRA"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00439.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00439.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00439.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest00439\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00439.java"
            }
        ],
        "id": "AWyvhrz-dg2jiL0y7dXb"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, new int[] {1,2} );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00441.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00441.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00441.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest00441\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00441.java"
            }
        ],
        "id": "AWyvhr1Gdg2jiL0y7dX2"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00510.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql, java.sql.ResultSet.TYPE_FORWARD_ONLY,\njava.sql.ResultSet.CONCUR_READ_ONLY, java.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00510.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00510.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00510.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00510.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest00510\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00510.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00510.java"
            }
        ],
        "id": "AWyvhriGdg2jiL0y7dRg"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00512.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00512.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00512.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00512.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest00512\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00512.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00512.java"
            }
        ],
        "id": "AWyvhruOdg2jiL0y7dVi"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, new int[] { 1, 2 } );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00515.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00515.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00515.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00515.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest00515\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00515.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00515.java"
            }
        ],
        "id": "AWyvhrvpdg2jiL0y7dWB"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, new int[] { 1, 2 } );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00516.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00516.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00516.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00516.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest00516\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00516.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00516.java"
            }
        ],
        "id": "AWyvhr1Tdg2jiL0y7dX6"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, new int[] {1,2} );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00518.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00518.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00518.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00518.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest00518\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00518.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00518.java"
            }
        ],
        "id": "AWyvhrlmdg2jiL0y7dSt"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00590.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql, java.sql.ResultSet.TYPE_FORWARD_ONLY,\njava.sql.ResultSet.CONCUR_READ_ONLY, java.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00590.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00590.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00590.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00590.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00590.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00590.java"
            }
        ],
        "id": "AWyvhrvvdg2jiL0y7dWD"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00591.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.Statement.RETURN_GENERATED_KEYS );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00591.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00591.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00591.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00591.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00591.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00591.java"
            }
        ],
        "id": "AWyvhr4rdg2jiL0y7dZB"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00593.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY,\njava.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00593.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00593.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00593.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00593.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00593.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00593.java"
            }
        ],
        "id": "AWyvhrm8dg2jiL0y7dTL"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00594.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql, new String[] {\"Column1\",\"Column2\"} );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00594.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00594.java"
            },
            {
                "code": "bar = (String)map29056.get(\"keyB-29056\"); // get it back out",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00594.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00594.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00594.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00594.java"
            }
        ],
        "id": "AWyvhrtLdg2jiL0y7dVM"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00595.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql, new String[] {\"Column1\",\"Column2\"} );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00595.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00595.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00595.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00595.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00595.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00595.java"
            }
        ],
        "id": "AWyvhrnhdg2jiL0y7dTY"
    },
    {
        "taints": [
            {
                "code": "java.util.List list = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForList(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00596.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00596.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00596.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00596.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00596.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00596.java"
            }
        ],
        "id": "AWyvhri2dg2jiL0y7dRx"
    },
    {
        "taints": [
            {
                "code": "java.util.List list = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForList(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00597.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00597.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00597.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00597.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00597.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00597.java"
            }
        ],
        "id": "AWyvhr3Kdg2jiL0y7dYg"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.batchUpdate(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00600.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00600.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00600.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00600.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00600.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00600.java"
            }
        ],
        "id": "AWyvhrf3dg2jiL0y7dQy"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, java.sql.Statement.RETURN_GENERATED_KEYS );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00603.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00603.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00603.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00603.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00603.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00603.java"
            }
        ],
        "id": "AWyvhrladg2jiL0y7dSp"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00606.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00606.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00606.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00606.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00606.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00606.java"
            }
        ],
        "id": "AWyvhryLdg2jiL0y7dW2"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00673.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00673.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00673.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00673.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest00673\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00673.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AWyvhruIdg2jiL0y7dVg"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForLong(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00678.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00678.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00678.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest00678\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00678.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AWyvhrpZdg2jiL0y7dT_"
    },
    {
        "taints": [
            {
                "code": "java.util.Map results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForMap(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00679.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00679.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00679.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest00679\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00679.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AWyvhrl4dg2jiL0y7dS0"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00681.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00681.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00681.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest00681\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00681.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AWyvhr06dg2jiL0y7dXx"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00760.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00760.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00760.java"
            },
            {
                "code": "bar = (String)map18915.get(\"keyB-18915\"); // get it back out",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00760.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00760.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest00760\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00760.java"
            }
        ],
        "id": "AWyvhr4Zdg2jiL0y7dY7"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00761.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00761.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00761.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00761.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00761.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest00761\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00761.java"
            }
        ],
        "id": "AWyvhrkvdg2jiL0y7dSb"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00762.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql, java.sql.ResultSet.TYPE_FORWARD_ONLY,\njava.sql.ResultSet.CONCUR_READ_ONLY, java.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00762.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00762.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00762.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00762.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest00762\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00762.java"
            }
        ],
        "id": "AWyvhroddg2jiL0y7dTr"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForLong(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00764.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00764.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00764.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00764.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest00764\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00764.java"
            }
        ],
        "id": "AWyvhrlydg2jiL0y7dSy"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForLong(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00765.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00765.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00765.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00765.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest00765\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00765.java"
            }
        ],
        "id": "AWyvhriAdg2jiL0y7dRe"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForLong(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00767.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00767.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00767.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00767.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest00767\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00767.java"
            }
        ],
        "id": "AWyvhryRdg2jiL0y7dW4"
    },
    {
        "taints": [
            {
                "code": "java.util.Map results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForMap(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00768.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00768.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00768.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00768.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest00768\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00768.java"
            }
        ],
        "id": "AWyvhrqddg2jiL0y7dUV"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.batchUpdate(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00769.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00769.java"
            },
            {
                "code": "bar = (String)map29572.get(\"keyB-29572\"); // get it back out",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00769.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00769.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest00769\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00769.java"
            }
        ],
        "id": "AWyvhrpBdg2jiL0y7dT3"
    },
    {
        "taints": [
            {
                "code": "int[] counts = statement.executeBatch();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00770.java"
            },
            {
                "code": "statement.addBatch( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00770.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00770.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00770.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00770.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest00770\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00770.java"
            }
        ],
        "id": "AWyvhrridg2jiL0y7dUr"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00771.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00771.java"
            },
            {
                "code": "bar = (String)map49960.get(\"keyB-49960\"); // get it back out",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00771.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00771.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest00771\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00771.java"
            }
        ],
        "id": "AWyvhrnbdg2jiL0y7dTW"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00839.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql, new String[] {\"Column1\",\"Column2\"} );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00839.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00839.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00839.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00839.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00839.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00839.java"
            }
        ],
        "id": "AWyvhrsTdg2jiL0y7dU7"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.batchUpdate(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00840.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00840.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00840.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00840.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00840.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00840.java"
            }
        ],
        "id": "AWyvhri8dg2jiL0y7dRz"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.batchUpdate(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00841.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00841.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00841.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00841.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00841.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00841.java"
            }
        ],
        "id": "AWyvhrq2dg2jiL0y7dUd"
    },
    {
        "taints": [
            {
                "code": "int results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForInt(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00842.java"
            },
            {
                "code": "String sql = \"SELECT  TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\"+ bar + \"'\" ;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00842.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00842.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00842.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00842.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00842.java"
            }
        ],
        "id": "AWyvhryFdg2jiL0y7dW0"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForLong(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00843.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00843.java"
            },
            {
                "code": "bar = (String)map12983.get(\"keyB-12983\"); // get it back out",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00843.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00843.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00843.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00843.java"
            }
        ],
        "id": "AWyvhrypdg2jiL0y7dXA"
    },
    {
        "taints": [
            {
                "code": "= org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForRowSet(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00845.java"
            },
            {
                "code": "String sql = \"SELECT  * from USERS where USERNAME='foo' and PASSWORD='\"+ bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00845.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00845.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00845.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00845.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00845.java"
            }
        ],
        "id": "AWyvhrxbdg2jiL0y7dWn"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.batchUpdate(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00846.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00846.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00846.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00846.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00846.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00846.java"
            }
        ],
        "id": "AWyvhrqKdg2jiL0y7dUP"
    },
    {
        "taints": [
            {
                "code": "int[] counts = statement.executeBatch();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00847.java"
            },
            {
                "code": "statement.addBatch( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00847.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00847.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00847.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00847.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00847.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00847.java"
            }
        ],
        "id": "AWyvhrjOdg2jiL0y7dR5"
    },
    {
        "taints": [
            {
                "code": "int[] counts = statement.executeBatch();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00848.java"
            },
            {
                "code": "statement.addBatch( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00848.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00848.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00848.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00848.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00848.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00848.java"
            }
        ],
        "id": "AWyvhrkLdg2jiL0y7dSP"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, new int[] { 1, 2 } );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00849.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00849.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00849.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00849.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00849.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00849.java"
            }
        ],
        "id": "AWyvhr4Bdg2jiL0y7dY0"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00850.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00850.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00850.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00850.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00850.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00850.java"
            }
        ],
        "id": "AWyvhr2Ddg2jiL0y7dYJ"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00997.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql, java.sql.ResultSet.TYPE_FORWARD_ONLY,\njava.sql.ResultSet.CONCUR_READ_ONLY );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00997.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00997.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00997.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00997.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00997.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00997.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00997.java"
            }
        ],
        "id": "AWyvhrnOdg2jiL0y7dTS"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00998.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql, java.sql.ResultSet.TYPE_FORWARD_ONLY,\njava.sql.ResultSet.CONCUR_READ_ONLY );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00998.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00998.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00998.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00998.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00998.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00998.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest00998.java"
            }
        ],
        "id": "AWyvhriqdg2jiL0y7dRt"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01002.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql, new int[] { 1, 2 } );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01002.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01002.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01002.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01002.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01002.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01002.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01002.java"
            }
        ],
        "id": "AWyvhr1Adg2jiL0y7dX0"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01003.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql, new String[] {\"Column1\",\"Column2\"} );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01003.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01003.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01003.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01003.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01003.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01003.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01003.java"
            }
        ],
        "id": "AWyvhr36dg2jiL0y7dYy"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01004.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql, new String[] {\"Column1\",\"Column2\"} );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01004.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01004.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01004.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01004.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01004.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01004.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01004.java"
            }
        ],
        "id": "AWyvhr0Edg2jiL0y7dXe"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.batchUpdate(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01005.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01005.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01005.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01005.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01005.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01005.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01005.java"
            }
        ],
        "id": "AWyvhrvddg2jiL0y7dV9"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForLong(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01006.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01006.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01006.java"
            },
            {
                "code": "bar = (String)map36088.get(\"keyB-36088\"); // get it back out",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01006.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01006.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01006.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01006.java"
            }
        ],
        "id": "AWyvhrrVdg2jiL0y7dUo"
    },
    {
        "taints": [
            {
                "code": "java.util.Map results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForMap(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01007.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01007.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01007.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01007.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01007.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01007.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01007.java"
            }
        ],
        "id": "AWyvhrlsdg2jiL0y7dSw"
    },
    {
        "taints": [
            {
                "code": "= org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForRowSet(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01008.java"
            },
            {
                "code": "String sql = \"SELECT  * from USERS where USERNAME='foo' and PASSWORD='\"+ bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01008.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01008.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01008.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01008.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01008.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01008.java"
            }
        ],
        "id": "AWyvhr2gdg2jiL0y7dYT"
    },
    {
        "taints": [
            {
                "code": "int[] counts = statement.executeBatch();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01011.java"
            },
            {
                "code": "statement.addBatch( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01011.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01011.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01011.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01011.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01011.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01011.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01011.java"
            }
        ],
        "id": "AWyvhr0Wdg2jiL0y7dXl"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01083.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01083.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01083.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01083.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01083.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01083.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest01083\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01083.java"
            }
        ],
        "id": "AWyvhr2Jdg2jiL0y7dYL"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01084.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql, new String[] {\"Column1\",\"Column2\"} );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01084.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01084.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01084.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01084.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01084.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest01084\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01084.java"
            }
        ],
        "id": "AWyvhrwTdg2jiL0y7dWO"
    },
    {
        "taints": [
            {
                "code": "int results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForInt(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01087.java"
            },
            {
                "code": "String sql = \"SELECT  TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\"+ bar + \"'\" ;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01087.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01087.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01087.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01087.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest01087\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01087.java"
            }
        ],
        "id": "AWyvhrs_dg2jiL0y7dVI"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForLong(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01088.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01088.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01088.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01088.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01088.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest01088\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01088.java"
            }
        ],
        "id": "AWyvhr1ldg2jiL0y7dX_"
    },
    {
        "taints": [
            {
                "code": "int[] counts = statement.executeBatch();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01090.java"
            },
            {
                "code": "statement.addBatch( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01090.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01090.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01090.java"
            },
            {
                "code": "bar = (String)map12212.get(\"keyB-12212\"); // get it back out",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01090.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01090.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest01090\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01090.java"
            }
        ],
        "id": "AWyvhr3udg2jiL0y7dYt"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01091.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01091.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01091.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01091.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01091.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest01091\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01091.java"
            }
        ],
        "id": "AWyvhrvjdg2jiL0y7dV_"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, new int[] { 1, 2 } );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01093.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01093.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01093.java"
            },
            {
                "code": "bar = (String)map18142.get(\"keyB-18142\"); // get it back out",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01093.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01093.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest01093\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01093.java"
            }
        ],
        "id": "AWyvhrrodg2jiL0y7dUt"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, new String[] { \"username\", \"password\" } );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01094.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01094.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01094.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01094.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01094.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest01094\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01094.java"
            }
        ],
        "id": "AWyvhru4dg2jiL0y7dVw"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01097.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01097.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01097.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01097.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01097.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest01097\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01097.java"
            }
        ],
        "id": "AWyvhr0Qdg2jiL0y7dXi"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01208.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql, java.sql.ResultSet.TYPE_FORWARD_ONLY,\njava.sql.ResultSet.CONCUR_READ_ONLY, java.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01208.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01208.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01208.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01208.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01208.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01208.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest01208\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01208.java"
            }
        ],
        "id": "AWyvhrhudg2jiL0y7dRY"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01209.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.Statement.RETURN_GENERATED_KEYS );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01209.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01209.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01209.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01209.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01209.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01209.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest01209\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01209.java"
            }
        ],
        "id": "AWyvhrwfdg2jiL0y7dWS"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01210.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01210.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01210.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01210.java"
            },
            {
                "code": "bar = (String)map86576.get(\"keyB-86576\"); // get it back out",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01210.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01210.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01210.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest01210\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01210.java"
            }
        ],
        "id": "AWyvhrxPdg2jiL0y7dWj"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01211.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY,\njava.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01211.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01211.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01211.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01211.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01211.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01211.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest01211\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01211.java"
            }
        ],
        "id": "AWyvhrjadg2jiL0y7dR9"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.batchUpdate(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01214.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01214.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01214.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01214.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01214.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01214.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest01214\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01214.java"
            }
        ],
        "id": "AWyvhropdg2jiL0y7dTu"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, java.sql.Statement.RETURN_GENERATED_KEYS );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01222.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01222.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01222.java"
            },
            {
                "code": "bar = (String)map25738.get(\"keyB-25738\"); // get it back out",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01222.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01222.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01222.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest01222\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01222.java"
            }
        ],
        "id": "AWyvhrsBdg2jiL0y7dU1"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01304.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY,\njava.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01304.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01304.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01304.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01304.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest01304\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01304.java"
            }
        ],
        "id": "AWyvhrmKdg2jiL0y7dS6"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForLong(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01308.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01308.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01308.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01308.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest01308\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01308.java"
            }
        ],
        "id": "AWyvhr3Edg2jiL0y7dYe"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01311.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01311.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01311.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01311.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest01311\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01311.java"
            }
        ],
        "id": "AWyvhrzfdg2jiL0y7dXR"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, new String[] { \"username\", \"password\" } );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01312.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01312.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01312.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01312.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest01312\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01312.java"
            }
        ],
        "id": "AWyvhrgGdg2jiL0y7dQ3"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01313.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01313.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01313.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01313.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest01313\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01313.java"
            }
        ],
        "id": "AWyvhrm2dg2jiL0y7dTJ"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01314.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01314.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01314.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01314.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest01314\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01314.java"
            }
        ],
        "id": "AWyvhryjdg2jiL0y7dW-"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01379.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql, java.sql.ResultSet.TYPE_FORWARD_ONLY,\njava.sql.ResultSet.CONCUR_READ_ONLY, java.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01379.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01379.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01379.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01379.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01379.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest01379\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01379.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01379.java"
            }
        ],
        "id": "AWyvhrn5dg2jiL0y7dTf"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01381.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.Statement.RETURN_GENERATED_KEYS );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01381.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01381.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01381.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01381.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01381.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest01381\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01381.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01381.java"
            }
        ],
        "id": "AWyvhrw9dg2jiL0y7dWd"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01382.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.Statement.RETURN_GENERATED_KEYS );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01382.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01382.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01382.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01382.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01382.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest01382\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01382.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01382.java"
            }
        ],
        "id": "AWyvhrwBdg2jiL0y7dWJ"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01383.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01383.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01383.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01383.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01383.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01383.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest01383\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01383.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01383.java"
            }
        ],
        "id": "AWyvhr2Vdg2jiL0y7dYO"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01384.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql, new int[] { 1, 2 } );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01384.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01384.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01384.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01384.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01384.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest01384\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01384.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01384.java"
            }
        ],
        "id": "AWyvhrlUdg2jiL0y7dSn"
    },
    {
        "taints": [
            {
                "code": "int results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForInt(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01388.java"
            },
            {
                "code": "String sql = \"SELECT  TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\"+ bar + \"'\" ;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01388.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01388.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01388.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01388.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest01388\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01388.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01388.java"
            }
        ],
        "id": "AWyvhr0odg2jiL0y7dXs"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForLong(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01390.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01390.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01390.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01390.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01390.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest01390\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01390.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01390.java"
            }
        ],
        "id": "AWyvhr5hdg2jiL0y7dZT"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01391.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01391.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01391.java"
            },
            {
                "code": "bar = (String)map24596.get(\"keyB-24596\"); // get it back out",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01391.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01391.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest01391\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01391.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01391.java"
            }
        ],
        "id": "AWyvhrjgdg2jiL0y7dR_"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, new int[] {1,2} );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01394.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01394.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01394.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01394.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01394.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest01394\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01394.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01394.java"
            }
        ],
        "id": "AWyvhrgedg2jiL0y7dQ-"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, new String[] {\"USERNAME\",\"PASSWORD\"} );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01395.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01395.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01395.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01395.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01395.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest01395\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01395.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01395.java"
            }
        ],
        "id": "AWyvhr1xdg2jiL0y7dYD"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, new String[] {\"USERNAME\",\"PASSWORD\"} );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01396.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01396.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01396.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01396.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01396.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest01396\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01396.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01396.java"
            }
        ],
        "id": "AWyvhrumdg2jiL0y7dVr"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01460.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql, java.sql.ResultSet.TYPE_FORWARD_ONLY,\njava.sql.ResultSet.CONCUR_READ_ONLY );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01460.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01460.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01460.java"
            },
            {
                "code": "bar = (String)map72098.get(\"keyB-72098\"); // get it back out",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01460.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01460.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01460.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01460.java"
            }
        ],
        "id": "AWyvhr1fdg2jiL0y7dX9"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01462.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql, java.sql.ResultSet.TYPE_FORWARD_ONLY,\njava.sql.ResultSet.CONCUR_READ_ONLY, java.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01462.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01462.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01462.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01462.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01462.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01462.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01462.java"
            }
        ],
        "id": "AWyvhrjzdg2jiL0y7dSG"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01463.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql, java.sql.ResultSet.TYPE_FORWARD_ONLY,\njava.sql.ResultSet.CONCUR_READ_ONLY, java.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01463.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01463.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01463.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01463.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01463.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01463.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01463.java"
            }
        ],
        "id": "AWyvhrprdg2jiL0y7dUG"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01464.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY,\njava.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01464.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01464.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01464.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01464.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01464.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01464.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01464.java"
            }
        ],
        "id": "AWyvhrqjdg2jiL0y7dUX"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.execute(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01465.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01465.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01465.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01465.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01465.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01465.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01465.java"
            }
        ],
        "id": "AWyvhryXdg2jiL0y7dW6"
    },
    {
        "taints": [
            {
                "code": "java.util.List<String> results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.query(sql,  new org.springframework.jdbc.core.RowMapper<String>() {\npublic String mapRow(java.sql.ResultSet rs, int rowNum) throws java.sql.SQLException {\ntry {\nreturn rs.getString(\"USERNAME\");\n} catch (java.sql.SQLException e) {\nif (org.owasp.benchmark.helpers.DatabaseHelper.hideSQLErrors) {\nreturn \"Error processing query.\";\n}\nelse throw e;\n}\n}\n});",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01466.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01466.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01466.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01466.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01466.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01466.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01466.java"
            }
        ],
        "id": "AWyvhrhDdg2jiL0y7dRK"
    },
    {
        "taints": [
            {
                "code": "java.util.Map results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForMap(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01470.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01470.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01470.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01470.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01470.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01470.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01470.java"
            }
        ],
        "id": "AWyvhriSdg2jiL0y7dRk"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.batchUpdate(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01471.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01471.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01471.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01471.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01471.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01471.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01471.java"
            }
        ],
        "id": "AWyvhrpTdg2jiL0y7dT9"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, new int[] { 1, 2 } );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01473.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01473.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01473.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01473.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01473.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01473.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01473.java"
            }
        ],
        "id": "AWyvhrhVdg2jiL0y7dRP"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, java.sql.Statement.RETURN_GENERATED_KEYS );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01475.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01475.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01475.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01475.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01475.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01475.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01475.java"
            }
        ],
        "id": "AWyvhryddg2jiL0y7dW8"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, new String[] {\"USERNAME\",\"PASSWORD\"} );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01476.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01476.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01476.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01476.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01476.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01476.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01476.java"
            }
        ],
        "id": "AWyvhrnCdg2jiL0y7dTN"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, new String[] {\"USERNAME\",\"PASSWORD\"} );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01477.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01477.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01477.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01477.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01477.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01477.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01477.java"
            }
        ],
        "id": "AWyvhrh6dg2jiL0y7dRc"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01552.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY,\njava.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01552.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01552.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01552.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01552.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest01552\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01552.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AWyvhr3Qdg2jiL0y7dYi"
    },
    {
        "taints": [
            {
                "code": "java.util.List list = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForList(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01554.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01554.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01554.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01554.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest01554\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01554.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AWyvhrt2dg2jiL0y7dVa"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, java.sql.Statement.RETURN_GENERATED_KEYS );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01557.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01557.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01557.java"
            },
            {
                "code": "bar = (String)map20581.get(\"keyB-20581\"); // get it back out",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01557.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest01557\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01557.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AWyvhr3odg2jiL0y7dYr"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, java.sql.Statement.RETURN_GENERATED_KEYS );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01558.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01558.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01558.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01558.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest01558\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01558.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AWyvhrvRdg2jiL0y7dV4"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, new int[] { 1, 2 } );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01559.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01559.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01559.java"
            },
            {
                "code": "bar = (String)map31651.get(\"keyB-31651\"); // get it back out",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01559.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest01559\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01559.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AWyvhrkpdg2jiL0y7dSZ"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, java.sql.Statement.RETURN_GENERATED_KEYS );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01560.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01560.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01560.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01560.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest01560\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01560.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AWyvhrj5dg2jiL0y7dSI"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01620.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01620.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01620.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01620.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01620.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01620.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest01620\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01620.java"
            }
        ],
        "id": "AWyvhrmpdg2jiL0y7dTF"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01621.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql, java.sql.ResultSet.TYPE_FORWARD_ONLY,\njava.sql.ResultSet.CONCUR_READ_ONLY );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01621.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01621.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01621.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01621.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01621.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest01621\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01621.java"
            }
        ],
        "id": "AWyvhrk7dg2jiL0y7dSg"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01623.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql, java.sql.ResultSet.TYPE_FORWARD_ONLY,\njava.sql.ResultSet.CONCUR_READ_ONLY, java.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01623.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01623.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01623.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01623.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01623.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest01623\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01623.java"
            }
        ],
        "id": "AWyvhrvXdg2jiL0y7dV6"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.batchUpdate(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01624.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01624.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01624.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01624.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01624.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest01624\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01624.java"
            }
        ],
        "id": "AWyvhrkXdg2jiL0y7dST"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForLong(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01625.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01625.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01625.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01625.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01625.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest01625\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01625.java"
            }
        ],
        "id": "AWyvhrrJdg2jiL0y7dUj"
    },
    {
        "taints": [
            {
                "code": "int[] counts = statement.executeBatch();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01626.java"
            },
            {
                "code": "statement.addBatch( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01626.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01626.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01626.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01626.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01626.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest01626\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01626.java"
            }
        ],
        "id": "AWyvhrvEdg2jiL0y7dV0"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, new String[] { \"username\", \"password\" } );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01627.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01627.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01627.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01627.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01627.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest01627\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01627.java"
            }
        ],
        "id": "AWyvhry7dg2jiL0y7dXG"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, new String[] {\"USERNAME\",\"PASSWORD\"} );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01631.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01631.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01631.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01631.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01631.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest01631\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01631.java"
            }
        ],
        "id": "AWyvhrlgdg2jiL0y7dSr"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01712.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01712.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01712.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01712.java"
            },
            {
                "code": "bar = (String)map6261.get(\"keyB-6261\"); // get it back out",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01712.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01712.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01712.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01712.java"
            }
        ],
        "id": "AWyvhrv7dg2jiL0y7dWH"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01715.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01715.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01715.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01715.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01715.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01715.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01715.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01715.java"
            }
        ],
        "id": "AWyvhrnIdg2jiL0y7dTP"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01716.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01716.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01716.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01716.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01716.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01716.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01716.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01716.java"
            }
        ],
        "id": "AWyvhrsldg2jiL0y7dVB"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01718.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY,\njava.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01718.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01718.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01718.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01718.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01718.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01718.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01718.java"
            }
        ],
        "id": "AWyvhriYdg2jiL0y7dRm"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.execute(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01720.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01720.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01720.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01720.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01720.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01720.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01720.java"
            }
        ],
        "id": "AWyvhr3cdg2jiL0y7dYn"
    },
    {
        "taints": [
            {
                "code": "java.util.List<String> results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.query(sql,  new org.springframework.jdbc.core.RowMapper<String>() {\npublic String mapRow(java.sql.ResultSet rs, int rowNum) throws java.sql.SQLException {\ntry {\nreturn rs.getString(\"USERNAME\");\n} catch (java.sql.SQLException e) {\nif (org.owasp.benchmark.helpers.DatabaseHelper.hideSQLErrors) {\nreturn \"Error processing query.\";\n}\nelse throw e;\n}\n}\n});",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01721.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01721.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01721.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01721.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01721.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01721.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01721.java"
            }
        ],
        "id": "AWyvhriwdg2jiL0y7dRv"
    },
    {
        "taints": [
            {
                "code": "int results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForInt(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01723.java"
            },
            {
                "code": "String sql = \"SELECT  TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\"+ bar + \"'\" ;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01723.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01723.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01723.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01723.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01723.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01723.java"
            }
        ],
        "id": "AWyvhrr7dg2jiL0y7dUz"
    },
    {
        "taints": [
            {
                "code": "java.util.List list = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForList(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01724.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01724.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01724.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01724.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01724.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01724.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01724.java"
            }
        ],
        "id": "AWyvhrmWdg2jiL0y7dS_"
    },
    {
        "taints": [
            {
                "code": "Object results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql,new Object[]{}, String.class);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01725.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 USERNAME from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01725.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01725.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01725.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01725.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01725.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01725.java"
            }
        ],
        "id": "AWyvhrgxdg2jiL0y7dRE"
    },
    {
        "taints": [
            {
                "code": "= org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForRowSet(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01726.java"
            },
            {
                "code": "String sql = \"SELECT  * from USERS where USERNAME='foo' and PASSWORD='\"+ bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01726.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01726.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01726.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01726.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01726.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01726.java"
            }
        ],
        "id": "AWyvhr3idg2jiL0y7dYp"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.batchUpdate(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01727.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01727.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01727.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01727.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01727.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01727.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01727.java"
            }
        ],
        "id": "AWyvhrwldg2jiL0y7dWU"
    },
    {
        "taints": [
            {
                "code": "int[] counts = statement.executeBatch();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01728.java"
            },
            {
                "code": "statement.addBatch( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01728.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01728.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01728.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01728.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01728.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01728.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01728.java"
            }
        ],
        "id": "AWyvhrjmdg2jiL0y7dSB"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, java.sql.Statement.RETURN_GENERATED_KEYS );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01730.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01730.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01730.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01730.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01730.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01730.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01730.java"
            }
        ],
        "id": "AWyvhrqwdg2jiL0y7dUb"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, new String[] { \"username\", \"password\" } );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01731.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01731.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01731.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01731.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01731.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01731.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01731.java"
            }
        ],
        "id": "AWyvhrnndg2jiL0y7dTa"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, new String[] {\"USERNAME\",\"PASSWORD\"} );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01733.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01733.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01733.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01733.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01733.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01733.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01733.java"
            }
        ],
        "id": "AWyvhrzBdg2jiL0y7dXI"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.batchUpdate(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01881.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01881.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01881.java"
            },
            {
                "code": "bar = (String)map20027.get(\"keyB-20027\"); // get it back out",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01881.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01881.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01881.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01881.java"
            }
        ],
        "id": "AWyvhruadg2jiL0y7dVn"
    },
    {
        "taints": [
            {
                "code": "java.util.List<String> results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.query(sql,  new org.springframework.jdbc.core.RowMapper<String>() {\npublic String mapRow(java.sql.ResultSet rs, int rowNum) throws java.sql.SQLException {\ntry {\nreturn rs.getString(\"USERNAME\");\n} catch (java.sql.SQLException e) {\nif (org.owasp.benchmark.helpers.DatabaseHelper.hideSQLErrors) {\nreturn \"Error processing query.\";\n}\nelse throw e;\n}\n}\n});",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01882.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01882.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01882.java"
            },
            {
                "code": "bar = (String)map67948.get(\"keyB-67948\"); // get it back out",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01882.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01882.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01882.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01882.java"
            }
        ],
        "id": "AWyvhro1dg2jiL0y7dTz"
    },
    {
        "taints": [
            {
                "code": "= org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForRowSet(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01883.java"
            },
            {
                "code": "String sql = \"SELECT  * from USERS where USERNAME='foo' and PASSWORD='\"+ bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01883.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01883.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01883.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01883.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01883.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01883.java"
            }
        ],
        "id": "AWyvhrjtdg2jiL0y7dSE"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01887.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01887.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01887.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01887.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01887.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01887.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01887.java"
            }
        ],
        "id": "AWyvhrmQdg2jiL0y7dS9"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01888.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01888.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01888.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01888.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01888.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01888.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01888.java"
            }
        ],
        "id": "AWyvhrtwdg2jiL0y7dVY"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, new int[] {1,2} );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01889.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01889.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01889.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01889.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01889.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01889.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01889.java"
            }
        ],
        "id": "AWyvhr0idg2jiL0y7dXq"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, new String[] {\"USERNAME\",\"PASSWORD\"} );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01890.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01890.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01890.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01890.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01890.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01890.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01890.java"
            }
        ],
        "id": "AWyvhrk1dg2jiL0y7dSe"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, new String[] {\"USERNAME\",\"PASSWORD\"} );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01891.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01891.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01891.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01891.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01891.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01891.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01891.java"
            }
        ],
        "id": "AWyvhr3Wdg2jiL0y7dYl"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.batchUpdate(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01963.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01963.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01963.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01963.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01963.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest01963\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01963.java"
            }
        ],
        "id": "AWyvhrwZdg2jiL0y7dWQ"
    },
    {
        "taints": [
            {
                "code": "java.util.List<String> results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.query(sql,  new org.springframework.jdbc.core.RowMapper<String>() {\npublic String mapRow(java.sql.ResultSet rs, int rowNum) throws java.sql.SQLException {\ntry {\nreturn rs.getString(\"USERNAME\");\n} catch (java.sql.SQLException e) {\nif (org.owasp.benchmark.helpers.DatabaseHelper.hideSQLErrors) {\nreturn \"Error processing query.\";\n}\nelse throw e;\n}\n}\n});",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01964.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01964.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01964.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01964.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01964.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest01964\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01964.java"
            }
        ],
        "id": "AWyvhrwHdg2jiL0y7dWL"
    },
    {
        "taints": [
            {
                "code": "int[] counts = statement.executeBatch();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01970.java"
            },
            {
                "code": "statement.addBatch( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01970.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01970.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01970.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01970.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01970.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest01970\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01970.java"
            }
        ],
        "id": "AWyvhr0cdg2jiL0y7dXn"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, new int[] { 1, 2 } );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01971.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01971.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01971.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01971.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01971.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest01971\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01971.java"
            }
        ],
        "id": "AWyvhrw3dg2jiL0y7dWb"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, new String[] { \"username\", \"password\" } );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01972.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01972.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01972.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01972.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01972.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest01972\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest01972.java"
            }
        ],
        "id": "AWyvhrpNdg2jiL0y7dT7"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02087.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.Statement.RETURN_GENERATED_KEYS );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02087.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02087.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02087.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02087.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02087.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02087.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest02087\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02087.java"
            }
        ],
        "id": "AWyvhroFdg2jiL0y7dTj"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02088.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02088.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02088.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02088.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02088.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02088.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02088.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest02088\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02088.java"
            }
        ],
        "id": "AWyvhrlHdg2jiL0y7dSk"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.execute(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02090.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02090.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02090.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02090.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02090.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02090.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest02090\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02090.java"
            }
        ],
        "id": "AWyvhrtRdg2jiL0y7dVO"
    },
    {
        "taints": [
            {
                "code": "java.util.List<String> results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.query(sql,  new org.springframework.jdbc.core.RowMapper<String>() {\npublic String mapRow(java.sql.ResultSet rs, int rowNum) throws java.sql.SQLException {\ntry {\nreturn rs.getString(\"USERNAME\");\n} catch (java.sql.SQLException e) {\nif (org.owasp.benchmark.helpers.DatabaseHelper.hideSQLErrors) {\nreturn \"Error processing query.\";\n}\nelse throw e;\n}\n}\n});",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02091.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02091.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02091.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02091.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02091.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02091.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest02091\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02091.java"
            }
        ],
        "id": "AWyvhrzOdg2jiL0y7dXM"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02092.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02092.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02092.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02092.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02092.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02092.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest02092\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02092.java"
            }
        ],
        "id": "AWyvhrg3dg2jiL0y7dRG"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02094.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02094.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02094.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02094.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02094.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02094.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest02094\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02094.java"
            }
        ],
        "id": "AWyvhrqpdg2jiL0y7dUZ"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02169.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql, java.sql.ResultSet.TYPE_FORWARD_ONLY,\njava.sql.ResultSet.CONCUR_READ_ONLY );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02169.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02169.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02169.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02169.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest02169\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02169.java"
            }
        ],
        "id": "AWyvhrtqdg2jiL0y7dVV"
    },
    {
        "taints": [
            {
                "code": "java.util.List<String> results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.query(sql,  new org.springframework.jdbc.core.RowMapper<String>() {\npublic String mapRow(java.sql.ResultSet rs, int rowNum) throws java.sql.SQLException {\ntry {\nreturn rs.getString(\"USERNAME\");\n} catch (java.sql.SQLException e) {\nif (org.owasp.benchmark.helpers.DatabaseHelper.hideSQLErrors) {\nreturn \"Error processing query.\";\n}\nelse throw e;\n}\n}\n});",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02177.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02177.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02177.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02177.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest02177\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02177.java"
            }
        ],
        "id": "AWyvhrnVdg2jiL0y7dTU"
    },
    {
        "taints": [
            {
                "code": "java.util.List list = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForList(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02178.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02178.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02178.java"
            },
            {
                "code": "bar = (String)map38026.get(\"keyB-38026\"); // get it back out",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02178.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest02178\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02178.java"
            }
        ],
        "id": "AWyvhrjCdg2jiL0y7dR1"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForLong(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02179.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02179.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02179.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02179.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest02179\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02179.java"
            }
        ],
        "id": "AWyvhrz4dg2jiL0y7dXZ"
    },
    {
        "taints": [
            {
                "code": "java.util.Map results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForMap(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02181.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02181.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02181.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02181.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest02181\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02181.java"
            }
        ],
        "id": "AWyvhr13dg2jiL0y7dYF"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02186.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02186.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02186.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02186.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest02186\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02186.java"
            }
        ],
        "id": "AWyvhrmEdg2jiL0y7dS4"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02187.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02187.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02187.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02187.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest02187\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02187.java"
            }
        ],
        "id": "AWyvhrugdg2jiL0y7dVp"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02264.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02264.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02264.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02264.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02264.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02264.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest02264\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02264.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02264.java"
            }
        ],
        "id": "AWyvhrl-dg2jiL0y7dS2"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02269.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY,\njava.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02269.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02269.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02269.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02269.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02269.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest02269\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02269.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02269.java"
            }
        ],
        "id": "AWyvhroRdg2jiL0y7dTn"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02270.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY,\njava.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02270.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02270.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02270.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02270.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02270.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest02270\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02270.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02270.java"
            }
        ],
        "id": "AWyvhrq9dg2jiL0y7dUf"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.batchUpdate(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02272.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02272.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02272.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02272.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02272.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest02272\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02272.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02272.java"
            }
        ],
        "id": "AWyvhr2adg2jiL0y7dYQ"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.batchUpdate(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02273.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02273.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02273.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02273.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02273.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest02273\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02273.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02273.java"
            }
        ],
        "id": "AWyvhruydg2jiL0y7dVu"
    },
    {
        "taints": [
            {
                "code": "int results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForInt(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02275.java"
            },
            {
                "code": "String sql = \"SELECT  TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\"+ bar + \"'\" ;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02275.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02275.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02275.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02275.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest02275\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02275.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02275.java"
            }
        ],
        "id": "AWyvhrg9dg2jiL0y7dRI"
    },
    {
        "taints": [
            {
                "code": "java.util.Map results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForMap(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02281.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02281.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02281.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02281.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02281.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest02281\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02281.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02281.java"
            }
        ],
        "id": "AWyvhrx_dg2jiL0y7dWy"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, new String[] { \"username\", \"password\" } );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02284.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02284.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02284.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02284.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02284.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest02284\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02284.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02284.java"
            }
        ],
        "id": "AWyvhrs5dg2jiL0y7dVG"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, new String[] {\"USERNAME\",\"PASSWORD\"} );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02287.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02287.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02287.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02287.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02287.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest02287\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02287.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02287.java"
            }
        ],
        "id": "AWyvhrwrdg2jiL0y7dWW"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, new String[] {\"USERNAME\",\"PASSWORD\"} );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02288.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02288.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02288.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02288.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02288.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest02288\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02288.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02288.java"
            }
        ],
        "id": "AWyvhrqEdg2jiL0y7dUN"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02354.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql, new int[] { 1, 2 } );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02354.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02354.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02354.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02354.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02354.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02354.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02354.java"
            }
        ],
        "id": "AWyvhrjIdg2jiL0y7dR3"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02355.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql, new String[] {\"Column1\",\"Column2\"} );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02355.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02355.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02355.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02355.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02355.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02355.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02355.java"
            }
        ],
        "id": "AWyvhrzsdg2jiL0y7dXW"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.execute(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02356.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02356.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02356.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02356.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02356.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02356.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02356.java"
            }
        ],
        "id": "AWyvhrtFdg2jiL0y7dVK"
    },
    {
        "taints": [
            {
                "code": "java.util.List<String> results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.query(sql,  new org.springframework.jdbc.core.RowMapper<String>() {\npublic String mapRow(java.sql.ResultSet rs, int rowNum) throws java.sql.SQLException {\ntry {\nreturn rs.getString(\"USERNAME\");\n} catch (java.sql.SQLException e) {\nif (org.owasp.benchmark.helpers.DatabaseHelper.hideSQLErrors) {\nreturn \"Error processing query.\";\n}\nelse throw e;\n}\n}\n});",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02357.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02357.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02357.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02357.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02357.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02357.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02357.java"
            }
        ],
        "id": "AWyvhr1Ndg2jiL0y7dX4"
    },
    {
        "taints": [
            {
                "code": "java.util.List list = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForList(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02358.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02358.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02358.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02358.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02358.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02358.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02358.java"
            }
        ],
        "id": "AWyvhrh0dg2jiL0y7dRa"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForLong(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02359.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02359.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02359.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02359.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02359.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02359.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02359.java"
            }
        ],
        "id": "AWyvhrsZdg2jiL0y7dU9"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForLong(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02360.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02360.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02360.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02360.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02360.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02360.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02360.java"
            }
        ],
        "id": "AWyvhrpldg2jiL0y7dUE"
    },
    {
        "taints": [
            {
                "code": "= org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForRowSet(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02362.java"
            },
            {
                "code": "String sql = \"SELECT  * from USERS where USERNAME='foo' and PASSWORD='\"+ bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02362.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02362.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02362.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02362.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02362.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02362.java"
            }
        ],
        "id": "AWyvhrlBdg2jiL0y7dSi"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02364.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02364.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02364.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02364.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02364.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02364.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02364.java"
            }
        ],
        "id": "AWyvhr19dg2jiL0y7dYH"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, new int[] {1,2} );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02369.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02369.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02369.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02369.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02369.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02369.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02369.java"
            }
        ],
        "id": "AWyvhr4fdg2jiL0y7dY9"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02449.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql, java.sql.ResultSet.TYPE_FORWARD_ONLY,\njava.sql.ResultSet.CONCUR_READ_ONLY, java.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02449.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02449.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02449.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02449.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest02449\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02449.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AWyvhrvKdg2jiL0y7dV2"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.execute(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02451.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02451.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02451.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02451.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest02451\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02451.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AWyvhrrPdg2jiL0y7dUl"
    },
    {
        "taints": [
            {
                "code": "int[] counts = statement.executeBatch();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02454.java"
            },
            {
                "code": "statement.addBatch( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02454.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02454.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02454.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02454.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest02454\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02454.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AWyvhr4ldg2jiL0y7dY_"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02455.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02455.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02455.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02455.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest02455\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02455.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AWyvhriMdg2jiL0y7dRi"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02528.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02528.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02528.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02528.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02528.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02528.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest02528\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02528.java"
            }
        ],
        "id": "AWyvhrqXdg2jiL0y7dUT"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02530.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql, java.sql.ResultSet.TYPE_FORWARD_ONLY,\njava.sql.ResultSet.CONCUR_READ_ONLY, java.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02530.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02530.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02530.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02530.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02530.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest02530\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02530.java"
            }
        ],
        "id": "AWyvhrikdg2jiL0y7dRq"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02531.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.Statement.RETURN_GENERATED_KEYS );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02531.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02531.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02531.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02531.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02531.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest02531\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02531.java"
            }
        ],
        "id": "AWyvhrkddg2jiL0y7dSV"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02533.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY,\njava.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02533.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02533.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02533.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02533.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02533.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest02533\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02533.java"
            }
        ],
        "id": "AWyvhrzTdg2jiL0y7dXO"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02534.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY,\njava.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02534.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02534.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02534.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02534.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02534.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest02534\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02534.java"
            }
        ],
        "id": "AWyvhrgqdg2jiL0y7dRC"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.batchUpdate(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02537.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02537.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02537.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02537.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02537.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest02537\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02537.java"
            }
        ],
        "id": "AWyvhrjUdg2jiL0y7dR7"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02542.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02542.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02542.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02542.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02542.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest02542\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02542.java"
            }
        ],
        "id": "AWyvhrmjdg2jiL0y7dTD"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, java.sql.Statement.RETURN_GENERATED_KEYS );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02543.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02543.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02543.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02543.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02543.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest02543\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02543.java"
            }
        ],
        "id": "AWyvhru-dg2jiL0y7dVy"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02545.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02545.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02545.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02545.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02545.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest02545\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02545.java"
            }
        ],
        "id": "AWyvhr49dg2jiL0y7dZG"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02625.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02625.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02625.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02625.java"
            },
            {
                "code": "bar = (String)map82391.get(\"keyB-82391\"); // get it back out",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02625.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02625.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02625.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02625.java"
            }
        ],
        "id": "AWyvhrpHdg2jiL0y7dT5"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02628.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql, java.sql.ResultSet.TYPE_FORWARD_ONLY,\njava.sql.ResultSet.CONCUR_READ_ONLY );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02628.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02628.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02628.java"
            },
            {
                "code": "bar = (String)map23653.get(\"keyB-23653\"); // get it back out",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02628.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02628.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02628.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02628.java"
            }
        ],
        "id": "AWyvhr0udg2jiL0y7dXu"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02630.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql, java.sql.ResultSet.TYPE_FORWARD_ONLY,\njava.sql.ResultSet.CONCUR_READ_ONLY, java.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02630.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02630.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02630.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02630.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02630.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02630.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02630.java"
            }
        ],
        "id": "AWyvhrzIdg2jiL0y7dXK"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02632.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02632.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02632.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02632.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02632.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02632.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02632.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02632.java"
            }
        ],
        "id": "AWyvhrn_dg2jiL0y7dTh"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02635.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY,\njava.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02635.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02635.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02635.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02635.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02635.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02635.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02635.java"
            }
        ],
        "id": "AWyvhr1rdg2jiL0y7dYB"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.batchUpdate(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02638.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02638.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02638.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02638.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02638.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02638.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02638.java"
            }
        ],
        "id": "AWyvhrgSdg2jiL0y7dQ6"
    },
    {
        "taints": [
            {
                "code": "java.util.List<String> results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.query(sql,  new org.springframework.jdbc.core.RowMapper<String>() {\npublic String mapRow(java.sql.ResultSet rs, int rowNum) throws java.sql.SQLException {\ntry {\nreturn rs.getString(\"USERNAME\");\n} catch (java.sql.SQLException e) {\nif (org.owasp.benchmark.helpers.DatabaseHelper.hideSQLErrors) {\nreturn \"Error processing query.\";\n}\nelse throw e;\n}\n}\n});",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02641.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02641.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02641.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02641.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02641.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02641.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02641.java"
            }
        ],
        "id": "AWyvhroLdg2jiL0y7dTl"
    },
    {
        "taints": [
            {
                "code": "java.util.List list = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForList(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02642.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02642.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02642.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02642.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02642.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02642.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02642.java"
            }
        ],
        "id": "AWyvhrj_dg2jiL0y7dSK"
    },
    {
        "taints": [
            {
                "code": "java.util.List list = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForList(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02643.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02643.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02643.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02643.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02643.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02643.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02643.java"
            }
        ],
        "id": "AWyvhr5Vdg2jiL0y7dZP"
    },
    {
        "taints": [
            {
                "code": "= org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForRowSet(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02644.java"
            },
            {
                "code": "String sql = \"SELECT  * from USERS where USERNAME='foo' and PASSWORD='\"+ bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02644.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02644.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02644.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02644.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02644.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02644.java"
            }
        ],
        "id": "AWyvhrxDdg2jiL0y7dWf"
    },
    {
        "taints": [
            {
                "code": "= org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForRowSet(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02645.java"
            },
            {
                "code": "String sql = \"SELECT  * from USERS where USERNAME='foo' and PASSWORD='\"+ bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02645.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02645.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02645.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02645.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02645.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02645.java"
            }
        ],
        "id": "AWyvhriedg2jiL0y7dRo"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.batchUpdate(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02646.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02646.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02646.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02646.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02646.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02646.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02646.java"
            }
        ],
        "id": "AWyvhrmwdg2jiL0y7dTH"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, new int[] { 1, 2 } );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02649.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02649.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02649.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02649.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02649.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02649.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02649.java"
            }
        ],
        "id": "AWyvhr2ydg2jiL0y7dYZ"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, new int[] { 1, 2 } );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02650.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02650.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02650.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02650.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02650.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02650.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02650.java"
            }
        ],
        "id": "AWyvhr4Ndg2jiL0y7dY3"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, new String[] { \"username\", \"password\" } );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02651.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02651.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02651.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02651.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02651.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02651.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02651.java"
            }
        ],
        "id": "AWyvhrv1dg2jiL0y7dWF"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02653.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02653.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02653.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02653.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02653.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02653.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02653.java"
            }
        ],
        "id": "AWyvhrrDdg2jiL0y7dUh"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02654.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02654.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02654.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02654.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02654.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02654.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02654.java"
            }
        ],
        "id": "AWyvhruCdg2jiL0y7dVe"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02655.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02655.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02655.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02655.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02655.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02655.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02655.java"
            }
        ],
        "id": "AWyvhry1dg2jiL0y7dXE"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, java.sql.Statement.RETURN_GENERATED_KEYS );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02656.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02656.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02656.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02656.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02656.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02656.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/issueexpected/BenchmarkTest02656.java"
            }
        ],
        "id": "AWyvhr4Tdg2jiL0y7dY5"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.batchUpdate(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00104.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00104.java"
            },
            {
                "code": "else bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00104.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00104.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00104.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00104.java"
            }
        ],
        "id": "AWyvhsKPdg2jiL0y7dcx"
    },
    {
        "taints": [
            {
                "code": "int[] counts = statement.executeBatch();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00105.java"
            },
            {
                "code": "statement.addBatch( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00105.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00105.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00105.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00105.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00105.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00105.java"
            }
        ],
        "id": "AWyvhsMJdg2jiL0y7ddb"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, new int[] {1,2} );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00114.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00114.java"
            },
            {
                "code": "else bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00114.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00114.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00114.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00114.java"
            }
        ],
        "id": "AWyvhsIsdg2jiL0y7dcq"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00191.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql, java.sql.ResultSet.TYPE_FORWARD_ONLY,\njava.sql.ResultSet.CONCUR_READ_ONLY );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00191.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00191.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00191.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00191.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest00191\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00191.java"
            }
        ],
        "id": "AWyvhsOodg2jiL0y7deS"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00329.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00329.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00329.java"
            },
            {
                "code": "else bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00329.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00329.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00329.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest00329\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00329.java"
            }
        ],
        "id": "AWyvhsQCdg2jiL0y7dew"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00333.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00333.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00333.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00333.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00333.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00333.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest00333\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00333.java"
            }
        ],
        "id": "AWyvhsIfdg2jiL0y7dck"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForLong(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00336.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00336.java"
            },
            {
                "code": "else bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00336.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00336.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00336.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest00336\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00336.java"
            }
        ],
        "id": "AWyvhsO6dg2jiL0y7deY"
    },
    {
        "taints": [
            {
                "code": "Object results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql,new Object[]{}, String.class);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00338.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 USERNAME from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00338.java"
            },
            {
                "code": "else bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00338.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00338.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00338.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest00338\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00338.java"
            }
        ],
        "id": "AWyvhsPSdg2jiL0y7deg"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.batchUpdate(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00340.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00340.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00340.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00340.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00340.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest00340\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00340.java"
            }
        ],
        "id": "AWyvhsKVdg2jiL0y7dcz"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, new String[] { \"username\", \"password\" } );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00343.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00343.java"
            },
            {
                "code": "else bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00343.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00343.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00343.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest00343\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00343.java"
            }
        ],
        "id": "AWyvhsOKdg2jiL0y7deI"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00344.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00344.java"
            },
            {
                "code": "else bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00344.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00344.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00344.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest00344\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00344.java"
            }
        ],
        "id": "AWyvhsQmdg2jiL0y7de8"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00430.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY,\njava.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00430.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00430.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00430.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest00430\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00430.java"
            }
        ],
        "id": "AWyvhsQIdg2jiL0y7dey"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00436.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00436.java"
            },
            {
                "code": "else bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00436.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest00436\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00436.java"
            }
        ],
        "id": "AWyvhsOQdg2jiL0y7deK"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, new int[] { 1, 2 } );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00437.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00437.java"
            },
            {
                "code": "else bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00437.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest00437\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00437.java"
            }
        ],
        "id": "AWyvhsLYdg2jiL0y7ddJ"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00514.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00514.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00514.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00514.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest00514\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00514.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00514.java"
            }
        ],
        "id": "AWyvhsPGdg2jiL0y7dec"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, new String[] { \"username\", \"password\" } );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00517.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00517.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00517.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00517.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest00517\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00517.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00517.java"
            }
        ],
        "id": "AWyvhsKhdg2jiL0y7dc3"
    },
    {
        "taints": [
            {
                "code": "int[] counts = statement.executeBatch();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00601.java"
            },
            {
                "code": "statement.addBatch( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00601.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00601.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00601.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00601.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00601.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00601.java"
            }
        ],
        "id": "AWyvhsMDdg2jiL0y7ddY"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00605.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00605.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00605.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00605.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00605.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00605.java"
            }
        ],
        "id": "AWyvhsOWdg2jiL0y7deM"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00672.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00672.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00672.java"
            },
            {
                "code": "else bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00672.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest00672\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00672.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AWyvhsPedg2jiL0y7dek"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00675.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql, new int[] { 1, 2 } );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00675.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00675.java"
            },
            {
                "code": "else bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00675.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest00675\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00675.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AWyvhsKIdg2jiL0y7dcu"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00676.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql, new String[] {\"Column1\",\"Column2\"} );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00676.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00676.java"
            },
            {
                "code": "else bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00676.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest00676\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00676.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AWyvhsNsdg2jiL0y7dd-"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00682.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00682.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00682.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest00682\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00682.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AWyvhsIYdg2jiL0y7dci"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00763.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql, new int[] { 1, 2 } );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00763.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00763.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00763.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00763.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest00763\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00763.java"
            }
        ],
        "id": "AWyvhsN-dg2jiL0y7deE"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForLong(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00766.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00766.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00766.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00766.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest00766\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00766.java"
            }
        ],
        "id": "AWyvhsMidg2jiL0y7ddj"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00772.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00772.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00772.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00772.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest00772\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00772.java"
            }
        ],
        "id": "AWyvhsMWdg2jiL0y7ddf"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, java.sql.Statement.RETURN_GENERATED_KEYS );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00774.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00774.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00774.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00774.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest00774\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00774.java"
            }
        ],
        "id": "AWyvhsP8dg2jiL0y7deu"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00838.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY,\njava.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00838.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00838.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00838.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00838.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00838.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00838.java"
            }
        ],
        "id": "AWyvhsChdg2jiL0y7dbM"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, new String[] {\"USERNAME\",\"PASSWORD\"} );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00851.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00851.java"
            },
            {
                "code": "else bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00851.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00851.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00851.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00851.java"
            }
        ],
        "id": "AWyvhsEkdg2jiL0y7dbo"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00999.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql, java.sql.ResultSet.TYPE_FORWARD_ONLY,\njava.sql.ResultSet.CONCUR_READ_ONLY );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00999.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00999.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00999.java"
            },
            {
                "code": "else bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00999.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00999.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00999.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest00999.java"
            }
        ],
        "id": "AWyvhsL9dg2jiL0y7ddW"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01001.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01001.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01001.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01001.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01001.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01001.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01001.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01001.java"
            }
        ],
        "id": "AWyvhsMudg2jiL0y7ddo"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.execute(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01086.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01086.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01086.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01086.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01086.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest01086\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01086.java"
            }
        ],
        "id": "AWyvhsN4dg2jiL0y7deC"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01092.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01092.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01092.java"
            },
            {
                "code": "else bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01092.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01092.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest01092\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01092.java"
            }
        ],
        "id": "AWyvhsH8dg2jiL0y7dca"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, new String[] { \"username\", \"password\" } );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01095.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01095.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01095.java"
            },
            {
                "code": "else bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01095.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01095.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest01095\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01095.java"
            }
        ],
        "id": "AWyvhsLqdg2jiL0y7ddP"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01096.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01096.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01096.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01096.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01096.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest01096\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01096.java"
            }
        ],
        "id": "AWyvhsLedg2jiL0y7ddL"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01213.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql, new String[] {\"Column1\",\"Column2\"} );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01213.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01213.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01213.java"
            },
            {
                "code": "else bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01213.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01213.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01213.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest01213\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01213.java"
            }
        ],
        "id": "AWyvhsNZdg2jiL0y7dd3"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForLong(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01215.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01215.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01215.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01215.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01215.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01215.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest01215\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01215.java"
            }
        ],
        "id": "AWyvhsKCdg2jiL0y7dcs"
    },
    {
        "taints": [
            {
                "code": "int[] counts = statement.executeBatch();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01218.java"
            },
            {
                "code": "statement.addBatch( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01218.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01218.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01218.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01218.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01218.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01218.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest01218\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01218.java"
            }
        ],
        "id": "AWyvhsKtdg2jiL0y7dc7"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01220.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01220.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01220.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01220.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01220.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01220.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest01220\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01220.java"
            }
        ],
        "id": "AWyvhsNBdg2jiL0y7ddu"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01305.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql, new int[] { 1, 2 } );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01305.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01305.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01305.java"
            },
            {
                "code": "else bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01305.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest01305\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01305.java"
            }
        ],
        "id": "AWyvhsPMdg2jiL0y7dee"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01307.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql, new String[] {\"Column1\",\"Column2\"} );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01307.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01307.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01307.java"
            },
            {
                "code": "else bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01307.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest01307\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01307.java"
            }
        ],
        "id": "AWyvhsLAdg2jiL0y7ddB"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, java.sql.Statement.RETURN_GENERATED_KEYS );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01315.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01315.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01315.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01315.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest01315\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01315.java"
            }
        ],
        "id": "AWyvhsHpdg2jiL0y7dcU"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01380.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql, java.sql.ResultSet.TYPE_FORWARD_ONLY,\njava.sql.ResultSet.CONCUR_READ_ONLY, java.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01380.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01380.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01380.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01380.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01380.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest01380\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01380.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01380.java"
            }
        ],
        "id": "AWyvhsPYdg2jiL0y7dei"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01385.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql, new String[] {\"Column1\",\"Column2\"} );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01385.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01385.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01385.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01385.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01385.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest01385\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01385.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01385.java"
            }
        ],
        "id": "AWyvhsQUdg2jiL0y7de2"
    },
    {
        "taints": [
            {
                "code": "int results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForInt(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01387.java"
            },
            {
                "code": "String sql = \"SELECT  TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\"+ bar + \"'\" ;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01387.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01387.java"
            },
            {
                "code": "else bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01387.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01387.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest01387\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01387.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01387.java"
            }
        ],
        "id": "AWyvhsLMdg2jiL0y7ddF"
    },
    {
        "taints": [
            {
                "code": "java.util.List list = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForList(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01389.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01389.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01389.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01389.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01389.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest01389\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01389.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01389.java"
            }
        ],
        "id": "AWyvhsK0dg2jiL0y7dc9"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01392.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01392.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01392.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01392.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01392.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest01392\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01392.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01392.java"
            }
        ],
        "id": "AWyvhsQzdg2jiL0y7dfA"
    },
    {
        "taints": [
            {
                "code": "java.util.List list = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForList(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01468.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01468.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01468.java"
            },
            {
                "code": "else bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01468.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01468.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01468.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01468.java"
            }
        ],
        "id": "AWyvhsPAdg2jiL0y7dea"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForLong(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01556.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01556.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01556.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01556.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest01556\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01556.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AWyvhsL3dg2jiL0y7ddT"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, new String[] { \"username\", \"password\" } );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01628.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01628.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01628.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01628.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01628.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest01628\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01628.java"
            }
        ],
        "id": "AWyvhsLGdg2jiL0y7ddD"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, java.sql.Statement.RETURN_GENERATED_KEYS );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01629.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01629.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01629.java"
            },
            {
                "code": "else bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01629.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01629.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest01629\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01629.java"
            }
        ],
        "id": "AWyvhsM1dg2jiL0y7ddq"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01714.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql, java.sql.ResultSet.TYPE_FORWARD_ONLY,\njava.sql.ResultSet.CONCUR_READ_ONLY );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01714.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01714.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01714.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01714.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01714.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01714.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01714.java"
            }
        ],
        "id": "AWyvhsHEdg2jiL0y7dcL"
    },
    {
        "taints": [
            {
                "code": "int[] counts = statement.executeBatch();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01729.java"
            },
            {
                "code": "statement.addBatch( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01729.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01729.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01729.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01729.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01729.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01729.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01729.java"
            }
        ],
        "id": "AWyvhsBedg2jiL0y7da9"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01732.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01732.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01732.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01732.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01732.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01732.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01732.java"
            }
        ],
        "id": "AWyvhr9Udg2jiL0y7daF"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01877.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql, java.sql.ResultSet.TYPE_FORWARD_ONLY,\njava.sql.ResultSet.CONCUR_READ_ONLY );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01877.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01877.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01877.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01877.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01877.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01877.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01877.java"
            }
        ],
        "id": "AWyvhsNTdg2jiL0y7dd1"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01878.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.Statement.RETURN_GENERATED_KEYS );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01878.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01878.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01878.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01878.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01878.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01878.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01878.java"
            }
        ],
        "id": "AWyvhsImdg2jiL0y7dcn"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.batchUpdate(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01884.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01884.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01884.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01884.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01884.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(theCookie.getValue(), \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01884.java"
            },
            {
                "code": "javax.servlet.http.Cookie[] theCookies = request.getCookies();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01884.java"
            }
        ],
        "id": "AWyvhsNfdg2jiL0y7dd6"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForLong(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01965.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01965.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01965.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01965.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01965.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest01965\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01965.java"
            }
        ],
        "id": "AWyvhsILdg2jiL0y7dce"
    },
    {
        "taints": [
            {
                "code": "Object results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql,new Object[]{}, String.class);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01966.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 USERNAME from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01966.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01966.java"
            },
            {
                "code": "else bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01966.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01966.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest01966\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01966.java"
            }
        ],
        "id": "AWyvhsOEdg2jiL0y7deG"
    },
    {
        "taints": [
            {
                "code": "Object results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql,new Object[]{}, String.class);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01967.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 USERNAME from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01967.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01967.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01967.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01967.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest01967\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01967.java"
            }
        ],
        "id": "AWyvhsMcdg2jiL0y7ddh"
    },
    {
        "taints": [
            {
                "code": "int[] counts = statement.executeBatch();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01969.java"
            },
            {
                "code": "statement.addBatch( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01969.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01969.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01969.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01969.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01969.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest01969\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01969.java"
            }
        ],
        "id": "AWyvhsP2dg2jiL0y7des"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01973.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01973.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01973.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01973.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01973.java"
            },
            {
                "code": "param = request.getHeader(\"BenchmarkTest01973\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest01973.java"
            }
        ],
        "id": "AWyvhsOidg2jiL0y7deQ"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02089.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02089.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02089.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02089.java"
            },
            {
                "code": "else bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02089.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02089.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02089.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest02089\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02089.java"
            }
        ],
        "id": "AWyvhsLxdg2jiL0y7ddR"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02093.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02093.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02093.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02093.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02093.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02093.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest02093\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02093.java"
            }
        ],
        "id": "AWyvhsQsdg2jiL0y7de-"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02098.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02098.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02098.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02098.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02098.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02098.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"BenchmarkTest02098\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02098.java"
            }
        ],
        "id": "AWyvhsQadg2jiL0y7de4"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02172.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02172.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02172.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02172.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02172.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest02172\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02172.java"
            }
        ],
        "id": "AWyvhsOcdg2jiL0y7deO"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02173.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02173.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02173.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02173.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02173.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest02173\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02173.java"
            }
        ],
        "id": "AWyvhsLkdg2jiL0y7ddN"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.batchUpdate(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02174.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02174.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02174.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02174.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest02174\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02174.java"
            }
        ],
        "id": "AWyvhsHvdg2jiL0y7dcW"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.execute(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02176.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02176.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02176.java"
            },
            {
                "code": "else bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02176.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest02176\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02176.java"
            }
        ],
        "id": "AWyvhsNNdg2jiL0y7ddy"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02266.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql, java.sql.ResultSet.TYPE_FORWARD_ONLY,\njava.sql.ResultSet.CONCUR_READ_ONLY, java.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02266.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02266.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02266.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02266.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02266.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest02266\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02266.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02266.java"
            }
        ],
        "id": "AWyvhsNydg2jiL0y7deA"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02271.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql, new int[] { 1, 2 } );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02271.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02271.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02271.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02271.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02271.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest02271\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02271.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02271.java"
            }
        ],
        "id": "AWyvhsIRdg2jiL0y7dcg"
    },
    {
        "taints": [
            {
                "code": "java.util.List<String> results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.query(sql,  new org.springframework.jdbc.core.RowMapper<String>() {\npublic String mapRow(java.sql.ResultSet rs, int rowNum) throws java.sql.SQLException {\ntry {\nreturn rs.getString(\"USERNAME\");\n} catch (java.sql.SQLException e) {\nif (org.owasp.benchmark.helpers.DatabaseHelper.hideSQLErrors) {\nreturn \"Error processing query.\";\n}\nelse throw e;\n}\n}\n});",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02274.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02274.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02274.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02274.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02274.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest02274\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02274.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02274.java"
            }
        ],
        "id": "AWyvhsPwdg2jiL0y7deq"
    },
    {
        "taints": [
            {
                "code": "int results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForInt(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02276.java"
            },
            {
                "code": "String sql = \"SELECT  TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\"+ bar + \"'\" ;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02276.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02276.java"
            },
            {
                "code": "else bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02276.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02276.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest02276\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02276.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02276.java"
            }
        ],
        "id": "AWyvhsOudg2jiL0y7deU"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForLong(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02279.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02279.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02279.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02279.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02279.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest02279\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02279.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02279.java"
            }
        ],
        "id": "AWyvhsO0dg2jiL0y7deW"
    },
    {
        "taints": [
            {
                "code": "Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForLong(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02280.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02280.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02280.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02280.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02280.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest02280\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02280.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02280.java"
            }
        ],
        "id": "AWyvhsNHdg2jiL0y7ddw"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.batchUpdate(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02282.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02282.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02282.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02282.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02282.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest02282\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02282.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02282.java"
            }
        ],
        "id": "AWyvhsQgdg2jiL0y7de6"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, new String[] { \"username\", \"password\" } );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02285.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02285.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02285.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02285.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02285.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest02285\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02285.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02285.java"
            }
        ],
        "id": "AWyvhsIEdg2jiL0y7dcc"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02353.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.Statement.RETURN_GENERATED_KEYS );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02353.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02353.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02353.java"
            },
            {
                "code": "else bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02353.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02353.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02353.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02353.java"
            }
        ],
        "id": "AWyvhsPkdg2jiL0y7dem"
    },
    {
        "taints": [
            {
                "code": "Object results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql,new Object[]{}, String.class);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02361.java"
            },
            {
                "code": "String sql = \"SELECT TOP 1 USERNAME from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02361.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02361.java"
            },
            {
                "code": "else bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02361.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02361.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02361.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02361.java"
            }
        ],
        "id": "AWyvhsKbdg2jiL0y7dc1"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, java.sql.Statement.RETURN_GENERATED_KEYS );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02366.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02366.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02366.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02366.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02366.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02366.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02366.java"
            }
        ],
        "id": "AWyvhsNmdg2jiL0y7dd8"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, java.sql.Statement.RETURN_GENERATED_KEYS );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02368.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02368.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02368.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02368.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02368.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02368.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02368.java"
            }
        ],
        "id": "AWyvhsH2dg2jiL0y7dcY"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02450.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql,\njava.sql.Statement.RETURN_GENERATED_KEYS );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02450.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02450.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02450.java"
            },
            {
                "code": "else bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02450.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest02450\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02450.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AWyvhsPqdg2jiL0y7deo"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, new String[] {\"USERNAME\",\"PASSWORD\"} );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02456.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02456.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02456.java"
            },
            {
                "code": "else bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02456.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest02456\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02456.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AWyvhsModg2jiL0y7ddl"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.batchUpdate(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02536.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02536.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02536.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02536.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02536.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest02536\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02536.java"
            }
        ],
        "id": "AWyvhsK6dg2jiL0y7dc_"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.batchUpdate(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02540.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02540.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02540.java"
            },
            {
                "code": "else bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02540.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02540.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest02540\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02540.java"
            }
        ],
        "id": "AWyvhsKndg2jiL0y7dc5"
    },
    {
        "taints": [
            {
                "code": "int[] counts = statement.executeBatch();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02541.java"
            },
            {
                "code": "statement.addBatch( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02541.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02541.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02541.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02541.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02541.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest02541\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02541.java"
            }
        ],
        "id": "AWyvhsQOdg2jiL0y7de0"
    },
    {
        "taints": [
            {
                "code": "statement.execute( sql, new int[] { 1, 2 } );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02544.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02544.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02544.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02544.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02544.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest02544\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02544.java"
            }
        ],
        "id": "AWyvhsMQdg2jiL0y7ddd"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, new int[] {1,2} );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02546.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02546.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02546.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02546.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02546.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest02546\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02546.java"
            }
        ],
        "id": "AWyvhsM7dg2jiL0y7dds"
    },
    {
        "taints": [
            {
                "code": "java.sql.ResultSet rs = statement.executeQuery();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02626.java"
            },
            {
                "code": "java.sql.CallableStatement statement = connection.prepareCall( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02626.java"
            },
            {
                "code": "String sql = \"{call \" + bar + \"}\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02626.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02626.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02626.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02626.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02626.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02626.java"
            }
        ],
        "id": "AWyvhr_edg2jiL0y7dai"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02631.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02631.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02631.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02631.java"
            },
            {
                "code": "else bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02631.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02631.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02631.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02631.java"
            }
        ],
        "id": "AWyvhsDtdg2jiL0y7dbb"
    },
    {
        "taints": [
            {
                "code": "statement.execute();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02637.java"
            },
            {
                "code": "java.sql.PreparedStatement statement = connection.prepareStatement( sql, new String[] {\"Column1\",\"Column2\"} );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02637.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME=? and PASSWORD='\"+ bar +\"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02637.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02637.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02637.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02637.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02637.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02637.java"
            }
        ],
        "id": "AWyvhr69dg2jiL0y7dZl"
    },
    {
        "taints": [
            {
                "code": "org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.execute(sql);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02640.java"
            },
            {
                "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\" + bar + \"'\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02640.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02640.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02640.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02640.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02640.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02640.java"
            }
        ],
        "id": "AWyvhr-ndg2jiL0y7daV"
    },
    {
        "taints": [
            {
                "code": "int count = statement.executeUpdate( sql, new int[] {1,2} );",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02657.java"
            },
            {
                "code": "String sql = \"INSERT INTO users (username, password) VALUES ('foo','\"+ bar + \"')\";",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02657.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02657.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02657.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02657.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02657.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/sqli/noissueexpected_discarded/pathsensitivity/BenchmarkTest02657.java"
            }
        ],
        "id": "AWyvhsBkdg2jiL0y7da_"
    },
    {
        "taints": [
            {
                "code": "os.write(qrCode.getBytes());",
                "file": "tamararankovic_isa2020-2021_pharmacies_backend:src/main/java/isa/tim28/pharmacies/controller/PatientController.java"
            }
        ],
        "id": "AXeDwpnOXyA96Xzl3FWE"
    },
    {
        "taints": [
            {
                "code": "dataType: \"json\",",
                "file": "kobero98_TravelBook:WebContent/add.jsp"
            },
            {
                "code": "(function NotifyMes() {",
                "file": "kobero98_TravelBook:WebContent/add.jsp"
            },
            {
                "code": "location.replace(\"explore.jsp\");",
                "file": "kobero98_TravelBook:WebContent/add.jsp"
            },
            {
                "code": "String s=(String)images.get(j);",
                "file": "kobero98_TravelBook:WebContent/add.jsp"
            }
        ],
        "id": "AXdj8mpDzxqi2sh1vbPS"
    },
    {
        "taints": [
            {
                "code": "method:\"get\",",
                "file": "kobero98_TravelBook:WebContent/add.jsp"
            },
            {
                "code": "String s=(String)images.get(j);",
                "file": "kobero98_TravelBook:WebContent/add.jsp"
            }
        ],
        "id": "AXdj8mpDzxqi2sh1vbPT"
    },
    {
        "taints": [
            {
                "code": "{",
                "file": "kobero98_TravelBook:WebContent/add.jsp"
            },
            {
                "code": "String s=(String)images.get(j);",
                "file": "kobero98_TravelBook:WebContent/add.jsp"
            }
        ],
        "id": "AXdj8mpDzxqi2sh1vbPU"
    },
    {
        "taints": [
            {
                "code": "function goToProfile()",
                "file": "kobero98_TravelBook:WebContent/add.jsp"
            },
            {
                "code": "String s=(String)images.get(j);",
                "file": "kobero98_TravelBook:WebContent/add.jsp"
            }
        ],
        "id": "AXdj8mpDzxqi2sh1vbPV"
    },
    {
        "taints": [
            {
                "code": "$('#searchPlace').autocomplete(",
                "file": "kobero98_TravelBook:WebContent/add.jsp"
            },
            {
                "code": "String s=(String)images.get(j);",
                "file": "kobero98_TravelBook:WebContent/add.jsp"
            }
        ],
        "id": "AXdj8mpDzxqi2sh1vbPW"
    },
    {
        "taints": [
            {
                "code": "<input name=\"name1\" id=\"name1\" readonly=\"readonly\" value=\"<%=nome1 %>\" readonly=\"readonly\" type=\"text\"></h4>",
                "file": "matteo-coni_myGarage:src/logic/view/web/WebContent/ListOfMechanic.jsp"
            },
            {
                "code": "",
                "file": "matteo-coni_myGarage:src/logic/view/web/WebContent/ListOfMechanic.jsp"
            }
        ],
        "id": "AXeD7W0LpwiNktG5khaJ"
    },
    {
        "taints": [
            {
                "code": "<input name=\"name2\"  id=\"name2\" value=\"<%=nome2%>\" readonly=\"readonly\" type=\"text\"></h4>",
                "file": "matteo-coni_myGarage:src/logic/view/web/WebContent/ListOfMechanic.jsp"
            },
            {
                "code": "//nome2 = request.getParameter(\"name2\");",
                "file": "matteo-coni_myGarage:src/logic/view/web/WebContent/ListOfMechanic.jsp"
            }
        ],
        "id": "AXeD4c3A6uXPh2W70r7z"
    },
    {
        "taints": [
            {
                "code": "<input name=\"name3\" id=\"name3\" value=\"<%=nome3%>\" readonly=\"readonly\" type=\"text\"></h4>",
                "file": "matteo-coni_myGarage:src/logic/view/web/WebContent/ListOfMechanic.jsp"
            },
            {
                "code": "//nome3 = request.getParameter(\"name3\");",
                "file": "matteo-coni_myGarage:src/logic/view/web/WebContent/ListOfMechanic.jsp"
            }
        ],
        "id": "AXeD4c3A6uXPh2W70r70"
    },
    {
        "taints": [
            {
                "code": "<td style=\"width: 31px; height: 43px; text-align: center; margin-left: 147px;\">",
                "file": "matteo-coni_myGarage:src/logic/view/web/WebContent/ListOfMechanic.jsp"
            },
            {
                "code": "indirizzo2 = (String)session.getAttribute(\"indirizzo2\");",
                "file": "matteo-coni_myGarage:src/logic/view/web/WebContent/ListOfMechanic.jsp"
            }
        ],
        "id": "AXeDv3j7QyRUj9UJLvUS"
    },
    {
        "taints": [
            {
                "code": "bookingBean.setDataPrenotazione(date);",
                "file": "matteo-coni_myGarage:src/logic/view/web/WebContent/ListOfMechanic.jsp"
            },
            {
                "code": "nome2 = (String)session.getAttribute(\"nome2\");",
                "file": "matteo-coni_myGarage:src/logic/view/web/WebContent/ListOfMechanic.jsp"
            }
        ],
        "id": "AXeDZw7wfj8BeTo9ihLn"
    },
    {
        "taints": [
            {
                "code": "<input type=\"hidden\" name=\"Translation\" value=\"<%=translation%>\">",
                "file": "Silverpeas_Silverpeas-Components:kmelia/kmelia-war/src/main/webapp/kmelia/jsp/kmax_addPositionToAxis.jsp"
            },
            {
                "code": "String translation = request.getParameter(\"Translation\");",
                "file": "Silverpeas_Silverpeas-Components:kmelia/kmelia-war/src/main/webapp/kmelia/jsp/kmax_addPositionToAxis.jsp"
            }
        ],
        "id": "AXZEAzXL-NnJaEJMI8Wc"
    },
    {
        "taints": [
            {
                "code": "<TD><input type=\"hidden\" name=\"AxisId\" value=\"<%=axisId%>\">",
                "file": "Silverpeas_Silverpeas-Components:kmelia/kmelia-war/src/main/webapp/kmelia/jsp/kmax_addPositionToAxis.jsp"
            },
            {
                "code": "String axisId = request.getParameter(\"AxisId\");",
                "file": "Silverpeas_Silverpeas-Components:kmelia/kmelia-war/src/main/webapp/kmelia/jsp/kmax_addPositionToAxis.jsp"
            }
        ],
        "id": "AXZEAzXL-NnJaEJMI8Wd"
    },
    {
        "taints": [
            {
                "code": "<input type=\"hidden\" name=\"Translation\" value=\"<%=translation%>\">",
                "file": "Silverpeas_Silverpeas-Components:kmelia/kmelia-war/src/main/webapp/kmelia/jsp/kmax_addPositionToPosition.jsp"
            },
            {
                "code": "String translation = request.getParameter(\"Translation\");",
                "file": "Silverpeas_Silverpeas-Components:kmelia/kmelia-war/src/main/webapp/kmelia/jsp/kmax_addPositionToPosition.jsp"
            }
        ],
        "id": "AXZEAzWg-NnJaEJMI8Wb"
    },
    {
        "taints": [
            {
                "code": "<TD><input type=\"hidden\" name=\"AxisId\" value=\"<%=axisId%>\"><input type=\"text\" id=\"nodeNameValue\" name=\"Name\" value=\"\" size=\"60\" maxlength=\"60\"> <img border=\"0\" src=\"<%=mandatoryField%>\" width=\"5\" height=\"5\"></TD></TR>",
                "file": "Silverpeas_Silverpeas-Components:kmelia/kmelia-war/src/main/webapp/kmelia/jsp/kmax_addPositionToPosition.jsp"
            },
            {
                "code": "String axisId = request.getParameter(\"AxisId\");",
                "file": "Silverpeas_Silverpeas-Components:kmelia/kmelia-war/src/main/webapp/kmelia/jsp/kmax_addPositionToPosition.jsp"
            }
        ],
        "id": "AXZEAzWg-NnJaEJMI8Wa"
    },
    {
        "taints": [
            {
                "code": "out.println(displayAxisManageView(kmeliaScc, gef, axisId, mandatoryFieldSrc, resources, translation));",
                "file": "Silverpeas_Silverpeas-Components:kmelia/kmelia-war/src/main/webapp/kmelia/jsp/kmax_axisManager.jsp"
            },
            {
                "code": "return result.toString();",
                "file": "Silverpeas_Silverpeas-Components:kmelia/kmelia-war/src/main/webapp/kmelia/jsp/kmax_axisReport.jsp"
            },
            {
                "code": "String axisId = (String) request.getParameter(\"AxisId\");",
                "file": "Silverpeas_Silverpeas-Components:kmelia/kmelia-war/src/main/webapp/kmelia/jsp/kmax_axisManager.jsp"
            }
        ],
        "id": "AXZEAzVD-NnJaEJMI8WZ"
    },
    {
        "taints": [
            {
                "code": "out.println(displayComponentManageView(kmeliaScc, gef, positionId, pathStr, mandatoryFieldSrc, resources, translation));",
                "file": "Silverpeas_Silverpeas-Components:kmelia/kmelia-war/src/main/webapp/kmelia/jsp/kmax_axisManager.jsp"
            },
            {
                "code": "return result.toString();",
                "file": "Silverpeas_Silverpeas-Components:kmelia/kmelia-war/src/main/webapp/kmelia/jsp/kmax_axisReport.jsp"
            },
            {
                "code": "String positionId = positionPath.substring(positionPath.lastIndexOf(\"/\")+1, positionPath.length());",
                "file": "Silverpeas_Silverpeas-Components:kmelia/kmelia-war/src/main/webapp/kmelia/jsp/kmax_axisManager.jsp"
            },
            {
                "code": "String positionPath = (String) request.getParameter(\"PositionId\");",
                "file": "Silverpeas_Silverpeas-Components:kmelia/kmelia-war/src/main/webapp/kmelia/jsp/kmax_axisManager.jsp"
            }
        ],
        "id": "AXZEAzVD-NnJaEJMI8WY"
    },
    {
        "taints": [
            {
                "code": "out.println(quizzPart);",
                "file": "Silverpeas_Silverpeas-Components:quizz/quizz-war/src/main/webapp/quizz/jsp/quizzQuestionsNew.jsp"
            },
            {
                "code": "quizzPart += \"<input type=\\\"hidden\\\" name=\\\"Page\\\" value=\\\"\"+origin+\"\\\">\";",
                "file": "Silverpeas_Silverpeas-Components:quizz/quizz-war/src/main/webapp/quizz/jsp/quizzQuestionsNew.jsp"
            },
            {
                "code": "quizzPart += \"<input type=\\\"hidden\\\" name=\\\"ParticipationId\\\" value=\\\"\"+participationId+\"\\\">\";",
                "file": "Silverpeas_Silverpeas-Components:quizz/quizz-war/src/main/webapp/quizz/jsp/quizzQuestionsNew.jsp"
            },
            {
                "code": "quizzPart += \"<input type=\\\"hidden\\\" name=\\\"UserId\\\" value=\\\"\"+userId+\"\\\">\";",
                "file": "Silverpeas_Silverpeas-Components:quizz/quizz-war/src/main/webapp/quizz/jsp/quizzQuestionsNew.jsp"
            },
            {
                "code": "String userId = request.getParameter(\"UserId\");",
                "file": "Silverpeas_Silverpeas-Components:quizz/quizz-war/src/main/webapp/quizz/jsp/quizzQuestionsNew.jsp"
            }
        ],
        "id": "AXZEAz5R-NnJaEJMI8W1"
    },
    {
        "taints": [
            {
                "code": "self.location=\"palmaresAdmin.jsp?quizz_id=<%=quizzId%>\";",
                "file": "Silverpeas_Silverpeas-Components:quizz/quizz-war/src/main/webapp/quizz/jsp/quizzQuestionsNew.jsp"
            },
            {
                "code": "String quizzId = request.getParameter(\"QuizzId\");",
                "file": "Silverpeas_Silverpeas-Components:quizz/quizz-war/src/main/webapp/quizz/jsp/quizzQuestionsNew.jsp"
            }
        ],
        "id": "AXZEAz5R-NnJaEJMI8W0"
    },
    {
        "taints": [
            {
                "code": "<input type=\"hidden\" name=\"QuizzId\" value=\"<%=quizzId%>\"/>",
                "file": "Silverpeas_Silverpeas-Components:quizz/quizz-war/src/main/webapp/quizz/jsp/quizzUpdate.jsp"
            },
            {
                "code": "String quizzId = request.getParameter(\"QuizzId\");",
                "file": "Silverpeas_Silverpeas-Components:quizz/quizz-war/src/main/webapp/quizz/jsp/quizzUpdate.jsp"
            }
        ],
        "id": "AXZEAz7a-NnJaEJMI8W2"
    },
    {
        "taints": [
            {
                "code": "<form name=\"surveysForm\" action=\"../../Rsurvey/jsp/surveyList.jsp?Space=<%=spaceId%>&Component=<%=componentId%>&Profile=<%=profile%>\" method=\"post\" target=\"MyMain\">",
                "file": "Silverpeas_Silverpeas-Components:survey/survey-war/src/main/webapp/survey/jsp/portlet.jsp"
            },
            {
                "code": "String profile = (String) request.getParameter(\"Profile\");",
                "file": "Silverpeas_Silverpeas-Components:survey/survey-war/src/main/webapp/survey/jsp/portlet.jsp"
            }
        ],
        "id": "AXZEA0Kv-NnJaEJMI8W5"
    },
    {
        "taints": [
            {
                "code": "<form name=\"newSurveyForm\" action=\"../../Rsurvey/jsp/surveyCreator.jsp?Space=<%=spaceId%>&Component=<%=componentId%>&Profile=<%=profile%>\" method=\"post\" target=\"MyMain\">",
                "file": "Silverpeas_Silverpeas-Components:survey/survey-war/src/main/webapp/survey/jsp/portlet.jsp"
            },
            {
                "code": "String profile = (String) request.getParameter(\"Profile\");",
                "file": "Silverpeas_Silverpeas-Components:survey/survey-war/src/main/webapp/survey/jsp/portlet.jsp"
            }
        ],
        "id": "AXZEA0Kv-NnJaEJMI8W4"
    },
    {
        "taints": [
            {
                "code": "<input type=\"hidden\" name=\"Path\" value=\"<%=path%>\">",
                "file": "Silverpeas_Silverpeas-Components:webSites/webSites-war/src/main/webapp/webSites/jsp/addPage.jsp"
            },
            {
                "code": "String path = (String) request.getParameter(\"Path\");",
                "file": "Silverpeas_Silverpeas-Components:webSites/webSites-war/src/main/webapp/webSites/jsp/addPage.jsp"
            }
        ],
        "id": "AXZEAztb-NnJaEJMI8Ws"
    },
    {
        "taints": [
            {
                "code": "<input type=\"hidden\" name=\"nameSite\" value=\"<%=nameSite%>\">",
                "file": "Silverpeas_Silverpeas-Components:webSites/webSites-war/src/main/webapp/webSites/jsp/addPage.jsp"
            },
            {
                "code": "String nameSite = (String) request.getParameter(\"nameSite\");",
                "file": "Silverpeas_Silverpeas-Components:webSites/webSites-war/src/main/webapp/webSites/jsp/addPage.jsp"
            }
        ],
        "id": "AXZEAztb-NnJaEJMI8Wp"
    },
    {
        "taints": [
            {
                "code": "<input type=\"hidden\" name=\"Path\" value=\"<%=path%>\">",
                "file": "Silverpeas_Silverpeas-Components:webSites/webSites-war/src/main/webapp/webSites/jsp/addPage.jsp"
            },
            {
                "code": "String path = (String) request.getParameter(\"Path\");",
                "file": "Silverpeas_Silverpeas-Components:webSites/webSites-war/src/main/webapp/webSites/jsp/addPage.jsp"
            }
        ],
        "id": "AXZEAztb-NnJaEJMI8Wq"
    },
    {
        "taints": [
            {
                "code": "<input type=\"hidden\" name=\"name\" value=\"<%=name%>\">",
                "file": "Silverpeas_Silverpeas-Components:webSites/webSites-war/src/main/webapp/webSites/jsp/addPage.jsp"
            },
            {
                "code": "String name = (String) request.getParameter(\"nomPage\"); //vient de verifAjoutPage",
                "file": "Silverpeas_Silverpeas-Components:webSites/webSites-war/src/main/webapp/webSites/jsp/addPage.jsp"
            }
        ],
        "id": "AXZEAztb-NnJaEJMI8Wv"
    },
    {
        "taints": [
            {
                "code": "<input type=\"hidden\" name=\"nameSite\" value=\"<%=nameSite%>\">",
                "file": "Silverpeas_Silverpeas-Components:webSites/webSites-war/src/main/webapp/webSites/jsp/addPage.jsp"
            },
            {
                "code": "String nameSite = (String) request.getParameter(\"nameSite\");",
                "file": "Silverpeas_Silverpeas-Components:webSites/webSites-war/src/main/webapp/webSites/jsp/addPage.jsp"
            }
        ],
        "id": "AXZEAztb-NnJaEJMI8Wt"
    },
    {
        "taints": [
            {
                "code": "<input type=\"hidden\" name=\"Path\" value=\"<%=path%>\"/>",
                "file": "Silverpeas_Silverpeas-Components:webSites/webSites-war/src/main/webapp/webSites/jsp/addRep.jsp"
            },
            {
                "code": "String path = request.getParameter(\"Path\");",
                "file": "Silverpeas_Silverpeas-Components:webSites/webSites-war/src/main/webapp/webSites/jsp/addRep.jsp"
            }
        ],
        "id": "AXZEAzrr-NnJaEJMI8Wi"
    },
    {
        "taints": [
            {
                "code": "<input type=\"hidden\" name=\"Path\" value=\"<%=path%>\">",
                "file": "Silverpeas_Silverpeas-Components:webSites/webSites-war/src/main/webapp/webSites/jsp/updateRep.jsp"
            },
            {
                "code": "String path = (String) request.getParameter(\"Path\");",
                "file": "Silverpeas_Silverpeas-Components:webSites/webSites-war/src/main/webapp/webSites/jsp/updateRep.jsp"
            }
        ],
        "id": "AXZEAztx-NnJaEJMI8Wx"
    },
    {
        "taints": [
            {
                "code": "<input type=\"hidden\" name=\"Name\" value=\"<%=name%>\">",
                "file": "Silverpeas_Silverpeas-Components:webSites/webSites-war/src/main/webapp/webSites/jsp/updateRep.jsp"
            },
            {
                "code": "String name = (String) request.getParameter(\"Name\"); //ancien nom",
                "file": "Silverpeas_Silverpeas-Components:webSites/webSites-war/src/main/webapp/webSites/jsp/updateRep.jsp"
            }
        ],
        "id": "AXZEAztx-NnJaEJMI8Ww"
    },
    {
        "taints": [
            {
                "code": "<td class=\"intfdcolor4\"><%=resources.getString(\"ConfirmationSuggestionMessage1\") + \"'<strong>\" +\nnomSite + \"</strong>' (\" + nomPage + \") \" +\nresources.getString(\"ConfirmationSuggestionMessage2\") + \"<BR><BR>\"%>",
                "file": "Silverpeas_Silverpeas-Components:webSites/webSites-war/src/main/webapp/webSites/jsp/suggestionConfirmation.jsp"
            },
            {
                "code": "String nomPage = request.getParameter(\"nomPage\");",
                "file": "Silverpeas_Silverpeas-Components:webSites/webSites-war/src/main/webapp/webSites/jsp/suggestionConfirmation.jsp"
            },
            {
                "code": "String nomSite = request.getParameter(\"nomSite\");",
                "file": "Silverpeas_Silverpeas-Components:webSites/webSites-war/src/main/webapp/webSites/jsp/suggestionConfirmation.jsp"
            }
        ],
        "id": "AXdtwAUTrdTvhTxX65jQ"
    },
    {
        "taints": [
            {
                "code": "<c:set var=\"notifyUserAction\">javaScript:onClick=sp.messager.open('<%= componentId %>', {<%=NotificationContext.CONTRIBUTION_ID%>: '<%=surveyId%>'});</c:set>",
                "file": "Silverpeas_Silverpeas-Components:survey/survey-war/src/main/webapp/survey/jsp/surveyDetail.jsp"
            },
            {
                "code": "String surveyId = request.getParameter(\"SurveyId\");",
                "file": "Silverpeas_Silverpeas-Components:survey/survey-war/src/main/webapp/survey/jsp/surveyDetail.jsp"
            }
        ],
        "id": "AXdtwAlBrdTvhTxX65oI"
    },
    {
        "taints": [
            {
                "code": "",
                "file": "concept-plus-sb_projet-semaine-bloquee:src/main/webapp/jsp/Connexion.jsp"
            }
        ],
        "id": "AXeCaehG7LGnGt-uKqTV"
    },
    {
        "taints": [
            {
                "code": "window.opener.document.getElementById(\"<%=targetElementIdHidden%>\").value = selectedComponentId+\"-\"+selectedNodeId;",
                "file": "Silverpeas_Silverpeas-Core:core-war/src/main/webapp/explorer/jsp/explorer.jsp"
            },
            {
                "code": "String targetElementIdHidden = request.getParameter(\"elementHidden\");",
                "file": "Silverpeas_Silverpeas-Core:core-war/src/main/webapp/explorer/jsp/explorer.jsp"
            }
        ],
        "id": "AXdtfPCC9QOveX66iyAW"
    },
    {
        "taints": [
            {
                "code": "initializeSilverpeasLayout(<%=frameBottomParams.append('}')%>);",
                "file": "Silverpeas_Silverpeas-Core:core-war/src/main/webapp/admin/jsp/silverpeas-main.jsp"
            },
            {
                "code": "spaceIdFromRedirect = request.getParameter(\"RedirectToSpaceId\");",
                "file": "Silverpeas_Silverpeas-Core:core-war/src/main/webapp/admin/jsp/silverpeas-main.jsp"
            }
        ],
        "id": "AXdtfO309QOveX66ixot"
    },
    {
        "taints": [
            {
                "code": "itemIdToSelect : '<%=componentId%>'",
                "file": "Silverpeas_Silverpeas-Core:core-war/src/main/webapp/admin/jsp/silverpeas-navigation-part.jsp"
            },
            {
                "code": "String componentId  = request.getParameter(\"component_id\");",
                "file": "Silverpeas_Silverpeas-Core:core-war/src/main/webapp/admin/jsp/silverpeas-navigation-part.jsp"
            }
        ],
        "id": "AXdtfO3d9QOveX66ixoM"
    },
    {
        "taints": [
            {
                "code": "<li class=\"nav-item mt-auto\"><a class=\"nav-link${param.currentPage == 'userManagement' ? ' font-weight-bold' : ''}\" data-target=\".navbar-collapse\"",
                "file": "fr.insee:arc:arc-web/src/main/webapp/WEB-INF/jsp/tiles/header.jsp"
            }
        ],
        "id": "AXcBhhl5rnflT8mBiUVJ"
    },
    {
        "taints": [
            {
                "code": "<li class=\"nav-item mt-auto\"><a class=\"nav-link${param.currentPage == 'userManagement' ? ' font-weight-bold' : ''}\" data-target=\".navbar-collapse\"",
                "file": "fr.insee:arc:arc-web/src/main/webapp/WEB-INF/jsp/tiles/header.jsp"
            }
        ],
        "id": "AXcBhhl5rnflT8mBiUVK"
    },
    {
        "taints": [
            {
                "code": "<li class=\"nav-item mt-auto\"><a class=\"nav-link${param.currentPage == 'home' ? ' font-weight-bold' : ''}\" data-target=\".navbar-collapse\" href=\"index\"><spring:message",
                "file": "fr.insee:arc:arc-web/src/main/webapp/WEB-INF/jsp/tiles/header.jsp"
            }
        ],
        "id": "AXYY8HDdU_2C8mDGK_Wd"
    },
    {
        "taints": [
            {
                "code": "<li class=\"nav-item mt-auto\"><a class=\"nav-link${param.currentPage == 'home' ? ' font-weight-bold' : ''}\" data-target=\".navbar-collapse\" href=\"index\"><spring:message",
                "file": "fr.insee:arc:arc-web/src/main/webapp/WEB-INF/jsp/tiles/header.jsp"
            }
        ],
        "id": "AXYY8HDdU_2C8mDGK_Wg"
    },
    {
        "taints": [
            {
                "code": "<li class=\"nav-item mt-auto\"><a class=\"nav-link${param.currentPage == 'familyManagement' ? ' font-weight-bold' : ''}\" data-target=\".navbar-collapse\"",
                "file": "fr.insee:arc:arc-web/src/main/webapp/WEB-INF/jsp/tiles/header.jsp"
            }
        ],
        "id": "AXYY8HDdU_2C8mDGK_Wj"
    },
    {
        "taints": [
            {
                "code": "<li class=\"nav-item mt-auto\"><a class=\"nav-link${param.currentPage == 'familyManagement' ? ' font-weight-bold' : ''}\" data-target=\".navbar-collapse\"",
                "file": "fr.insee:arc:arc-web/src/main/webapp/WEB-INF/jsp/tiles/header.jsp"
            }
        ],
        "id": "AXYY8HDdU_2C8mDGK_Wo"
    },
    {
        "taints": [
            {
                "code": "<li class=\"nav-item mt-auto\"><a class=\"nav-link${param.currentPage == 'normManagement' ? ' font-weight-bold' : ''}\" data-target=\".navbar-collapse\"",
                "file": "fr.insee:arc:arc-web/src/main/webapp/WEB-INF/jsp/tiles/header.jsp"
            }
        ],
        "id": "AXYY8HDdU_2C8mDGK_Wi"
    },
    {
        "taints": [
            {
                "code": "<li class=\"nav-item mt-auto\"><a class=\"nav-link${param.currentPage == 'normManagement' ? ' font-weight-bold' : ''}\" data-target=\".navbar-collapse\"",
                "file": "fr.insee:arc:arc-web/src/main/webapp/WEB-INF/jsp/tiles/header.jsp"
            }
        ],
        "id": "AXYY8HDdU_2C8mDGK_Wm"
    },
    {
        "taints": [
            {
                "code": "<li class=\"nav-item mt-auto\"><a class=\"nav-link${param.currentPage == 'externalFile' ? ' font-weight-bold' : ''}\" data-target=\".navbar-collapse\"",
                "file": "fr.insee:arc:arc-web/src/main/webapp/WEB-INF/jsp/tiles/header.jsp"
            }
        ],
        "id": "AXYY8HDdU_2C8mDGK_Wl"
    },
    {
        "taints": [
            {
                "code": "<li class=\"nav-item mt-auto\"><a class=\"nav-link${param.currentPage == 'externalFile' ? ' font-weight-bold' : ''}\" data-target=\".navbar-collapse\"",
                "file": "fr.insee:arc:arc-web/src/main/webapp/WEB-INF/jsp/tiles/header.jsp"
            }
        ],
        "id": "AXYY8HDdU_2C8mDGK_Wn"
    },
    {
        "taints": [
            {
                "code": "<li class=\"nav-item mt-auto\"><a class=\"nav-link${param.currentPage == 'webserviceManagement' ? ' font-weight-bold' : ''}\" data-target=\".navbar-collapse\"",
                "file": "fr.insee:arc:arc-web/src/main/webapp/WEB-INF/jsp/tiles/header.jsp"
            }
        ],
        "id": "AXYY8HDdU_2C8mDGK_Wf"
    },
    {
        "taints": [
            {
                "code": "<li class=\"nav-item mt-auto\"><a class=\"nav-link${param.currentPage == 'webserviceManagement' ? ' font-weight-bold' : ''}\" data-target=\".navbar-collapse\"",
                "file": "fr.insee:arc:arc-web/src/main/webapp/WEB-INF/jsp/tiles/header.jsp"
            }
        ],
        "id": "AXYY8HDdU_2C8mDGK_Wk"
    },
    {
        "taints": [
            {
                "code": "<li class=\"nav-item mt-auto\"><a class=\"nav-link${param.currentPage == 'envManagement' ? ' font-weight-bold' : ''}\" data-target=\".navbar-collapse\" href=\"enterPilotageBAS\"",
                "file": "fr.insee:arc:arc-web/src/main/webapp/WEB-INF/jsp/tiles/header.jsp"
            }
        ],
        "id": "AXYY8HDdU_2C8mDGK_We"
    },
    {
        "taints": [
            {
                "code": "<li class=\"nav-item mt-auto\"><a class=\"nav-link${param.currentPage == 'envManagement' ? ' font-weight-bold' : ''}\" data-target=\".navbar-collapse\" href=\"enterPilotageBAS\"",
                "file": "fr.insee:arc:arc-web/src/main/webapp/WEB-INF/jsp/tiles/header.jsp"
            }
        ],
        "id": "AXYY8HDdU_2C8mDGK_Wh"
    },
    {
        "taints": [
            {
                "code": "<li class=\"nav-item mt-auto\"><a class=\"nav-link${param.currentPage == 'export' ? ' font-weight-bold' : ''}\"\" data-target=\".navbar-collapse\" href=\"selectExport\"",
                "file": "fr.insee:arc:arc-web/src/main/webapp/WEB-INF/jsp/tiles/header.jsp"
            }
        ],
        "id": "AXYY8HDdU_2C8mDGK_Wc"
    },
    {
        "taints": [
            {
                "code": "<li class=\"nav-item mt-auto\"><a class=\"nav-link${param.currentPage == 'export' ? ' font-weight-bold' : ''}\"\" data-target=\".navbar-collapse\" href=\"selectExport\"",
                "file": "fr.insee:arc:arc-web/src/main/webapp/WEB-INF/jsp/tiles/header.jsp"
            }
        ],
        "id": "AXYY8HDdU_2C8mDGK_Wp"
    },
    {
        "taints": [
            {
                "code": "<a href=\"${URL_PREFIX}/person/${person.id}/account?year=${param.year}\" class=\"icon-link tw-px-1\" aria-hidden=\"true\" data-title=\"<spring:message code=\"action.edit\"/>\">",
                "file": "org.synyx:urlaubsverwaltung:src/main/webapp/WEB-INF/jsp/person/person_detail.jsp"
            }
        ],
        "id": "AXYY3AYPVEJUvx7Ddwy4"
    },
    {
        "taints": [
            {
                "code": "window.uv.params.person = \"${param.person}\";",
                "file": "org.synyx:urlaubsverwaltung:src/main/webapp/WEB-INF/jsp/sicknote/sick_note_form.jsp"
            }
        ],
        "id": "AXYY3AaMVEJUvx7Ddwy5"
    },
    {
        "taints": [
            {
                "code": "out.println( new WebResult( WebResult.STRING_ERROR, message ) );",
                "file": "apache_incubator-hop:engine/src/main/java/org/apache/hop/www/StartExecutionPipelineServlet.java"
            },
            {
                "code": "String pipelineName = request.getParameter( \"name\" );",
                "file": "apache_incubator-hop:engine/src/main/java/org/apache/hop/www/StartExecutionPipelineServlet.java"
            }
        ],
        "id": "AXXSUfwgHNgm4sakNViW"
    },
    {
        "taints": [
            {
                "code": "out.println(new WebResult(WebResult.STRING_ERROR, message, id));",
                "file": "apache_incubator-hop:engine/src/main/java/org/apache/hop/www/StartPipelineServlet.java"
            },
            {
                "code": "String id = request.getParameter(\"id\");",
                "file": "apache_incubator-hop:engine/src/main/java/org/apache/hop/www/StartPipelineServlet.java"
            }
        ],
        "id": "AXXSUfw-HNgm4sakNVjC"
    },
    {
        "taints": [
            {
                "code": "fw.write(jsonText);",
                "file": "sg.ncl:web-service:src/main/java/sg/ncl/MainController.java"
            },
            {
                "code": "private void analyzeJsonText(@RequestParam(\"jsonText\") String jsonText, StringBuilder nsBuilder, StringBuilder logBuilder) {",
                "file": "sg.ncl:web-service:src/main/java/sg/ncl/MainController.java"
            }
        ],
        "id": "AXIRy6C3jfqyTqkXl2Ca"
    },
    {
        "taints": [
            {
                "code": "os.print(req.getUserPrincipal().getName());",
                "file": "onap_aaf-authz:auth/auth-hello/src/main/java/org/onap/aaf/auth/hello/API_Hello.java"
            }
        ],
        "id": "AXOdOdf-GR10QreeQhOn"
    },
    {
        "taints": [
            {
                "code": "os.print(perm);",
                "file": "onap_aaf-authz:auth/auth-hello/src/main/java/org/onap/aaf/auth/hello/API_Hello.java"
            },
            {
                "code": "String perm = pathParam(req, \"perm\");",
                "file": "onap_aaf-authz:auth/auth-hello/src/main/java/org/onap/aaf/auth/hello/API_Hello.java"
            },
            {
                "code": "String rv = req.getParameter(key);",
                "file": "onap_aaf-authz:auth/auth-core/src/main/java/org/onap/aaf/auth/rserv/HttpCode.java"
            }
        ],
        "id": "AXOdOdf-GR10QreeQhOl"
    },
    {
        "taints": [
            {
                "code": "os.println(sb.toString());",
                "file": "onap_aaf-authz:auth/auth-hello/src/main/java/org/onap/aaf/auth/hello/API_Hello.java"
            },
            {
                "code": "String perm = pathParam(req, \"perm\");",
                "file": "onap_aaf-authz:auth/auth-hello/src/main/java/org/onap/aaf/auth/hello/API_Hello.java"
            },
            {
                "code": "String rv = req.getParameter(key);",
                "file": "onap_aaf-authz:auth/auth-core/src/main/java/org/onap/aaf/auth/rserv/HttpCode.java"
            },
            {
                "code": "sb.append(req.getUserPrincipal().getName());",
                "file": "onap_aaf-authz:auth/auth-hello/src/main/java/org/onap/aaf/auth/hello/API_Hello.java"
            }
        ],
        "id": "AXOdOdf-GR10QreeQhOm"
    },
    {
        "taints": [
            {
                "code": "<Image height=\"16\" width=\"16\" type=\"image/png\"><%= imgurl %></Image>",
                "file": "org.opengrok:opengrok-top:opengrok-web/src/main/webapp/opensearch.jsp"
            },
            {
                "code": "String ForwardedHost = request.getHeader(\"X-Forwarded-Host\");",
                "file": "org.opengrok:opengrok-top:opengrok-web/src/main/webapp/opensearch.jsp"
            }
        ],
        "id": "AXYdZ7TowLpyf3-045yn"
    },
    {
        "taints": [
            {
                "code": "<Url template=\"<%= url.toString() %>&amp;<%= QueryParameters.FULL_SEARCH_PARAM_EQ %>{searchTerms}\"",
                "file": "org.opengrok:opengrok-top:opengrok-web/src/main/webapp/opensearch.jsp"
            },
            {
                "code": "String ForwardedHost = request.getHeader(\"X-Forwarded-Host\");",
                "file": "org.opengrok:opengrok-top:opengrok-web/src/main/webapp/opensearch.jsp"
            }
        ],
        "id": "AXYdZ7TowLpyf3-045yo"
    },
    {
        "taints": [
            {
                "code": "%><%= Util.htmlize(requestURL) %></link>",
                "file": "org.opengrok:opengrok-top:opengrok-web/src/main/webapp/rss.jsp"
            },
            {
                "code": "requestURL += Prefix.HIST_L + cfg.getPath() + \"#\" + entry.getRevision();",
                "file": "org.opengrok:opengrok-top:opengrok-web/src/main/webapp/rss.jsp"
            },
            {
                "code": "String ForwardedHost = request.getHeader(\"X-Forwarded-Host\");",
                "file": "org.opengrok:opengrok-top:opengrok-web/src/main/webapp/rss.jsp"
            }
        ],
        "id": "AXYdZ7WBwLpyf3-045y8"
    },
    {
        "taints": [
            {
                "code": "pw.printf(\n\"<th class='ui-widget-header'>Request %s (%s %s) by %s - RequestProgressTracker Info</th>%n\",\nkey, ResponseUtil.escapeXml(info.getMethod()),\nResponseUtil.escapeXml(info.getPathInfo()), ResponseUtil.escapeXml(info.getUser()));",
                "file": "apache_sling-org-apache-sling-engine:src/main/java/org/apache/sling/engine/impl/console/RequestHistoryConsolePlugin.java"
            },
            {
                "code": "final String key = req.getParameter(INDEX);",
                "file": "apache_sling-org-apache-sling-engine:src/main/java/org/apache/sling/engine/impl/console/RequestHistoryConsolePlugin.java"
            }
        ],
        "id": "AW-tkLMDImHFfx4_w0Sf"
    },
    {
        "taints": [
            {
                "code": "",
                "file": "MegAtonBoom_EaTypical:WebContent/ConfirmMessage.jsp"
            },
            {
                "code": "}else if(b.getTypeModify() == 2){",
                "file": "MegAtonBoom_EaTypical:WebContent/ConfirmMessage.jsp"
            },
            {
                "code": "}",
                "file": "MegAtonBoom_EaTypical:WebContent/ConfirmMessage.jsp"
            },
            {
                "code": "BeanDeleteDish beanDeleteDish = new BeanDeleteDish(b.getRestaurant(),b.getDish(),2);",
                "file": "MegAtonBoom_EaTypical:WebContent/ConfirmMessage.jsp"
            },
            {
                "code": "<jsp:forward page=\"ModifyDishView.jsp\"></jsp:forward>",
                "file": "MegAtonBoom_EaTypical:WebContent/ConfirmMessage.jsp"
            },
            {
                "code": "<%",
                "file": "MegAtonBoom_EaTypical:WebContent/ConfirmMessage.jsp"
            },
            {
                "code": "%>",
                "file": "MegAtonBoom_EaTypical:WebContent/ConfirmMessage.jsp"
            }
        ],
        "id": "AXdE2oZMZ_Bhnj3RHnGT"
    },
    {
        "taints": [
            {
                "code": "<%-- remove button --%>",
                "file": "entando_entando-plugin-jacms:src/main/webapp/WEB-INF/plugins/jacms/apsadmin/jsp/content/modules/include/removeResourceSubmit.jsp"
            }
        ],
        "id": "AXYY3eQ4Ucr6lIZX45FL"
    },
    {
        "taints": [
            {
                "code": "try (BufferedWriter fileWriter = new BufferedWriter(new FileWriter(file))) {",
                "file": "eskimo-sh_eskimo:src/main/java/ch/niceideas/common/utils/FileUtils.java"
            },
            {
                "code": "",
                "file": "eskimo-sh_eskimo:src/main/java/ch/niceideas/common/utils/FileUtils.java"
            },
            {
                "code": "",
                "file": "eskimo-sh_eskimo:src/main/java/ch/niceideas/eskimo/services/ConfigurationService.java"
            },
            {
                "code": "return setupConfigJSON;",
                "file": "eskimo-sh_eskimo:src/main/java/ch/niceideas/eskimo/services/ConfigurationService.java"
            },
            {
                "code": "if (!privateKeyFile.setWritable(false, false)) {",
                "file": "eskimo-sh_eskimo:src/main/java/ch/niceideas/eskimo/services/SetupService.java"
            },
            {
                "code": "for (String service : packagesToBuild.split(\",\")) {",
                "file": "eskimo-sh_eskimo:src/main/java/ch/niceideas/eskimo/services/SetupService.java"
            },
            {
                "code": "return returnCommand (command);",
                "file": "eskimo-sh_eskimo:src/main/java/ch/niceideas/eskimo/controlers/SetupConfigController.java"
            },
            {
                "code": "",
                "file": "eskimo-sh_eskimo:src/main/java/ch/niceideas/eskimo/controlers/SetupConfigController.java"
            }
        ],
        "id": "AXGdrqu-XfLa3QRn9BRw"
    },
    {
        "taints": [
            {
                "code": "}",
                "file": "eskimo-sh_eskimo:src/main/java/ch/niceideas/eskimo/terminal/Session.java"
            },
            {
                "code": "",
                "file": "eskimo-sh_eskimo:src/main/java/ch/niceideas/eskimo/terminal/Session.java"
            },
            {
                "code": "}",
                "file": "eskimo-sh_eskimo:src/main/java/ch/niceideas/eskimo/terminal/Session.java"
            },
            {
                "code": "out.write(k);",
                "file": "eskimo-sh_eskimo:src/main/java/ch/niceideas/eskimo/terminal/Session.java"
            },
            {
                "code": "terminal.setCssClass(isAlive() ? \"\":\"dead\");\nreturn terminal.dumpHtml(color,clientTimestamp);\n}\n",
                "file": "eskimo-sh_eskimo:src/main/java/ch/niceideas/eskimo/terminal/Session.java"
            }
        ],
        "id": "AXGdrqopXfLa3QRn9BRv"
    },
    {
        "taints": [
            {
                "code": "<img src=\"${context}/seckill/Qrcode/${QRfilePath}\" id=\"Qrcode\" name=\"Qrcode\"/>",
                "file": "techa03_goodsKill:goodskill-web/src/main/webapp/WEB-INF/jsp/seckill/payByQrcode.jsp"
            },
            {
                "code": "return \"seckill/payByQrcode\";",
                "file": "techa03_goodsKill:goodskill-web/src/main/java/org/seckill/web/controller/SeckillController.java"
            },
            {
                "code": "public String payTransaction(@PathVariable(\"QRfilePath\") String QRfilePath, Model model) throws IOException {",
                "file": "techa03_goodsKill:goodskill-web/src/main/java/org/seckill/web/controller/SeckillController.java"
            }
        ],
        "id": "AXctpo9XPMMwbdX3HRx5"
    },
    {
        "taints": [
            {
                "code": "<img src=\"${context}/seckill/Qrcode/${QRfilePath}\" id=\"Qrcode\" name=\"Qrcode\"/>",
                "file": "techa03_goodsKill:goodskill-web/src/main/webapp/WEB-INF/jsp/seckill/payByQrcode.jsp"
            },
            {
                "code": "return \"seckill/payByQrcode\";",
                "file": "techa03_goodsKill:goodskill-web/src/main/java/org/seckill/web/controller/SeckillController.java"
            },
            {
                "code": "public String payTransaction(@PathVariable(\"QRfilePath\") String QRfilePath, Model model) throws IOException {",
                "file": "techa03_goodsKill:goodskill-web/src/main/java/org/seckill/web/controller/SeckillController.java"
            }
        ],
        "id": "AXctpo9XPMMwbdX3HRx6"
    },
    {
        "taints": [
            {
                "code": "<h2 th:if=\"${session.user_name}!=null\" class=\"text-uppercase text-white font-weight-bold\">Benvenuto <span class=\"text-success\" th:utext=\"${session.user_name}\"></span></h2>",
                "file": "analisi_drisk_demo:src/main/resources/templates/home.html"
            },
            {
                "code": "return modelAndView;",
                "file": "analisi_drisk_demo:src/main/java/com/webapp/drisk/controller/ApplicationController.java"
            },
            {
                "code": "public ModelAndView auth(@RequestParam String user_name, @RequestParam String password, HttpServletRequest richiesta){",
                "file": "analisi_drisk_demo:src/main/java/com/webapp/drisk/controller/ApplicationController.java"
            },
            {
                "code": "@RequestMapping(value=\"/login\", method = RequestMethod.POST)",
                "file": "analisi_drisk_demo:src/main/java/com/webapp/drisk/controller/ApplicationController.java"
            }
        ],
        "id": "AXdUSsfa7ZW8oBO85-B4"
    },
    {
        "taints": [
            {
                "code": "<input id=\"idStore\" type=\"hidden\" name=\"idStore\" value=\"<%= /*Encode.forHtml(*/request.getParameter(\"idStore\")/*)*/%>\"/>",
                "file": "UnimibSoftEngCourse2021_progetto-clup-1-gruppo-clup-1:src/main/webapp/customerAddBooking.jsp"
            }
        ],
        "id": "AXdLTpkYuQyWG2Z6umFD"
    },
    {
        "taints": [
            {
                "code": "<div class=\"page-wrap\">",
                "file": "UnimibSoftEngCourse2021_progetto-clup-1-gruppo-clup-1:src/main/webapp/modifyBooking.jsp"
            }
        ],
        "id": "AXdI_X72rTR52shOHIll"
    },
    {
        "taints": [
            {
                "code": "var todayDate = new Date();",
                "file": "UnimibSoftEngCourse2021_progetto-clup-1-gruppo-clup-1:src/main/webapp/customerAddBooking.jsp"
            }
        ],
        "id": "AXdC7pdoIodurz7aYzKs"
    },
    {
        "taints": [
            {
                "code": "</div>",
                "file": "UnimibSoftEngCourse2021_progetto-clup-1-gruppo-clup-1:src/main/webapp/navbarManager.jsp"
            },
            {
                "code": "",
                "file": "UnimibSoftEngCourse2021_progetto-clup-1-gruppo-clup-1:src/main/webapp/navbarManager.jsp"
            }
        ],
        "id": "AXc_Ow_raqMtq6Sz43gA"
    },
    {
        "taints": [
            {
                "code": "var userCheckBox = document.getElementById(\"editform\").elements[5];",
                "file": "UnimibSoftEngCourse2021_progetto-clup-1-gruppo-clup-1:src/main/webapp/customerAddBooking.jsp"
            }
        ],
        "id": "AXc5PSh-2kptFZcIwqmC"
    },
    {
        "taints": [
            {
                "code": "<jsp:include page=\"navbarManager.jsp\">",
                "file": "UnimibSoftEngCourse2021_progetto-clup-1-gruppo-clup-1:src/main/webapp/modifyBooking.jsp"
            }
        ],
        "id": "AXcwZep3Rtck0LdzByE1"
    },
    {
        "taints": [
            {
                "code": "</div>",
                "file": "UnimibSoftEngCourse2021_progetto-clup-1-gruppo-clup-1:src/main/webapp/modifyBooking.jsp"
            }
        ],
        "id": "AXcqjdb_rWTuIHEk3a4O"
    },
    {
        "taints": [
            {
                "code": "Welcome ${logged_in_username}! If you have Admin privileges you can <a",
                "file": "com.gokcan:springboot:src/main/webapp/homePage.jsp"
            },
            {
                "code": "return model;",
                "file": "com.gokcan:springboot:src/main/java/com/gokcan/springboot/Controller/PathController.java"
            },
            {
                "code": "String name = auth.getName(); //Get logged in username",
                "file": "com.gokcan:springboot:src/main/java/com/gokcan/springboot/Controller/PathController.java"
            }
        ],
        "id": "AXYmfN1cdJp5O0OENgGQ"
    },
    {
        "taints": [
            {
                "code": "<form id=\"logout\" action=\"${logoutUrl}\" method=\"post\">",
                "file": "com.gokcan:springboot:src/main/webapp/homePage.jsp"
            },
            {
                "code": "return model;",
                "file": "com.gokcan:springboot:src/main/java/com/gokcan/springboot/Controller/PathController.java"
            },
            {
                "code": "String name = auth.getName(); //Get logged in username",
                "file": "com.gokcan:springboot:src/main/java/com/gokcan/springboot/Controller/PathController.java"
            }
        ],
        "id": "AXYmfN1cdJp5O0OENgGN"
    },
    {
        "taints": [
            {
                "code": "<input type=\"hidden\" name=\"${_csrf.parameterName}\" value=\"${_csrf.token}\"/>",
                "file": "com.gokcan:springboot:src/main/webapp/homePage.jsp"
            },
            {
                "code": "return model;",
                "file": "com.gokcan:springboot:src/main/java/com/gokcan/springboot/Controller/PathController.java"
            },
            {
                "code": "String name = auth.getName(); //Get logged in username",
                "file": "com.gokcan:springboot:src/main/java/com/gokcan/springboot/Controller/PathController.java"
            }
        ],
        "id": "AXYmfN1cdJp5O0OENgGO"
    },
    {
        "taints": [
            {
                "code": "<input type=\"hidden\" name=\"${_csrf.parameterName}\" value=\"${_csrf.token}\"/>",
                "file": "com.gokcan:springboot:src/main/webapp/homePage.jsp"
            },
            {
                "code": "return model;",
                "file": "com.gokcan:springboot:src/main/java/com/gokcan/springboot/Controller/PathController.java"
            },
            {
                "code": "String name = auth.getName(); //Get logged in username",
                "file": "com.gokcan:springboot:src/main/java/com/gokcan/springboot/Controller/PathController.java"
            }
        ],
        "id": "AXYmfN1cdJp5O0OENgGP"
    },
    {
        "taints": [
            {
                "code": "<h3>${mailError}</h3>",
                "file": "prabhavagrawal08_discoveri-happytrip:src/main/webapp/registereduser/profile.jsp"
            },
            {
                "code": "return \"registereduser/profile\";",
                "file": "prabhavagrawal08_discoveri-happytrip:src/main/java/com/happytrip/controllers/ProfileController.java"
            },
            {
                "code": "model.addAttribute(\"UserProfile\", UserModelTransformer.transform(user));",
                "file": "prabhavagrawal08_discoveri-happytrip:src/main/java/com/happytrip/controllers/ProfileController.java"
            },
            {
                "code": "UserDto userDto = new UserDto();",
                "file": "prabhavagrawal08_discoveri-happytrip:src/main/java/com/happytrip/util/transformer/UserModelTransformer.java"
            },
            {
                "code": "String name = auth.getName();",
                "file": "prabhavagrawal08_discoveri-happytrip:src/main/java/com/happytrip/util/AuthenticatedUserUtil.java"
            }
        ],
        "id": "AXdDeKEfIodurz7abs4k"
    },
    {
        "taints": [
            {
                "code": "<h3>${fullNameError}</h3>",
                "file": "prabhavagrawal08_discoveri-happytrip:src/main/webapp/registereduser/profile.jsp"
            },
            {
                "code": "return \"registereduser/profile\";",
                "file": "prabhavagrawal08_discoveri-happytrip:src/main/java/com/happytrip/controllers/ProfileController.java"
            },
            {
                "code": "model.addAttribute(\"UserProfile\", UserModelTransformer.transform(user));",
                "file": "prabhavagrawal08_discoveri-happytrip:src/main/java/com/happytrip/controllers/ProfileController.java"
            },
            {
                "code": "UserDto userDto = new UserDto();",
                "file": "prabhavagrawal08_discoveri-happytrip:src/main/java/com/happytrip/util/transformer/UserModelTransformer.java"
            },
            {
                "code": "String name = auth.getName();",
                "file": "prabhavagrawal08_discoveri-happytrip:src/main/java/com/happytrip/util/AuthenticatedUserUtil.java"
            }
        ],
        "id": "AXdDeKEfIodurz7abs4j"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write( \"{\\\"success\\\": 1, \\\"message\\\":\\\"上传成功\\\",\\\"url\\\":\\\"\" + UPLOAD_IMAGE_PATH + File.separator + fileName + \"\\\"}\" );",
                "file": "epiphany20_lyonblog:src/main/java/com/flowingsun/article/controller/ArticleController.java"
            },
            {
                "code": "String fileName = attach.getOriginalFilename();",
                "file": "epiphany20_lyonblog:src/main/java/com/flowingsun/article/controller/ArticleController.java"
            }
        ],
        "id": "AXc-HdM3RHdMA4lG-9tw"
    },
    {
        "taints": [
            {
                "code": "writer.println(str);",
                "file": "mi1qw_job4j_dreamjob:src/main/java/ru/job4j/dream/servlet/CityServlet.java"
            },
            {
                "code": "private void out(final String str, final HttpServletResponse resp) {",
                "file": "mi1qw_job4j_dreamjob:src/main/java/ru/job4j/dream/servlet/CityServlet.java"
            },
            {
                "code": "out(city, resp);",
                "file": "mi1qw_job4j_dreamjob:src/main/java/ru/job4j/dream/servlet/CityServlet.java"
            },
            {
                "code": "city = \"<option selected id = \\\"selected\\\" value =\"\n+ cityid + \">\"\n+ city\n+ \"</option>\";",
                "file": "mi1qw_job4j_dreamjob:src/main/java/ru/job4j/dream/servlet/CityServlet.java"
            },
            {
                "code": "String cityid = req.getParameter(\"cityid\");",
                "file": "mi1qw_job4j_dreamjob:src/main/java/ru/job4j/dream/servlet/CityServlet.java"
            }
        ],
        "id": "AXcwH_ZBaWPU926rfXtM"
    },
    {
        "taints": [
            {
                "code": "out.print(ristorante+piatto+ricetta+prezzo+vegano+celiaco);",
                "file": "Fanfarillo_SonarEaTypical2:WebContent/ConfirmMessage.jsp"
            },
            {
                "code": "String celiaco=(String)request.getParameter(\"celiaco\");",
                "file": "Fanfarillo_SonarEaTypical2:WebContent/ConfirmMessage.jsp"
            },
            {
                "code": "String vegano=(String)request.getParameter(\"vegano\");",
                "file": "Fanfarillo_SonarEaTypical2:WebContent/ConfirmMessage.jsp"
            },
            {
                "code": "String prezzo=(String)request.getParameter(\"prezzo\");",
                "file": "Fanfarillo_SonarEaTypical2:WebContent/ConfirmMessage.jsp"
            },
            {
                "code": "String ricetta = (String)request.getParameter(\"ricetta\");",
                "file": "Fanfarillo_SonarEaTypical2:WebContent/ConfirmMessage.jsp"
            },
            {
                "code": "String piatto = (String)request.getParameter(\"piatto\");",
                "file": "Fanfarillo_SonarEaTypical2:WebContent/ConfirmMessage.jsp"
            },
            {
                "code": "String ristorante = (String)request.getParameter(\"ristorante\");",
                "file": "Fanfarillo_SonarEaTypical2:WebContent/ConfirmMessage.jsp"
            }
        ],
        "id": "AXcu22qpU8jwciIgHKd9"
    },
    {
        "taints": [
            {
                "code": "out.print(imageUrl);",
                "file": "watchdogoblivion_ERS:src/main/java/com/revature/ers/servlets/api/UserAccountServlet.java"
            },
            {
                "code": "imageUrl = imageUrl.substring(imageUrl.indexOf(FileManager.staticPath));",
                "file": "watchdogoblivion_ERS:src/main/java/com/revature/ers/servlets/api/UserAccountServlet.java"
            },
            {
                "code": "imageUrl = FileManager.fileSystemStorageSimulation + '\\\\' + newFileName;",
                "file": "watchdogoblivion_ERS:src/main/java/com/revature/ers/servlets/api/UserAccountServlet.java"
            },
            {
                "code": "String filename = filePart.getName();",
                "file": "watchdogoblivion_ERS:src/main/java/com/revature/ers/servlets/api/UserAccountServlet.java"
            },
            {
                "code": "String newFileName = userAccount.getEmail() + \"_\" +  filename +\"_ProfilePicture.jpg\";",
                "file": "watchdogoblivion_ERS:src/main/java/com/revature/ers/servlets/api/UserAccountServlet.java"
            },
            {
                "code": "String email = request.getParameter(\"email\");",
                "file": "watchdogoblivion_ERS:src/main/java/com/revature/ers/servicesimpl/UserAccountServiceImpl.java"
            }
        ],
        "id": "AW1kbZLF5xeZCv8magMi"
    },
    {
        "taints": [
            {
                "code": "out.print(ristorante+piatto+ricetta+prezzo+vegano+celiaco);",
                "file": "Fanfarillo_SonarEaTypical1:WebContent/ConfirmMessage.jsp"
            },
            {
                "code": "String celiaco=(String)request.getParameter(\"celiaco\");",
                "file": "Fanfarillo_SonarEaTypical1:WebContent/ConfirmMessage.jsp"
            },
            {
                "code": "String vegano=(String)request.getParameter(\"vegano\");",
                "file": "Fanfarillo_SonarEaTypical1:WebContent/ConfirmMessage.jsp"
            },
            {
                "code": "String prezzo=(String)request.getParameter(\"prezzo\");",
                "file": "Fanfarillo_SonarEaTypical1:WebContent/ConfirmMessage.jsp"
            },
            {
                "code": "String ricetta = (String)request.getParameter(\"ricetta\");",
                "file": "Fanfarillo_SonarEaTypical1:WebContent/ConfirmMessage.jsp"
            },
            {
                "code": "String piatto = (String)request.getParameter(\"piatto\");",
                "file": "Fanfarillo_SonarEaTypical1:WebContent/ConfirmMessage.jsp"
            },
            {
                "code": "String ristorante = (String)request.getParameter(\"ristorante\");",
                "file": "Fanfarillo_SonarEaTypical1:WebContent/ConfirmMessage.jsp"
            }
        ],
        "id": "AXccZdFy_1kzdpHN-seg"
    },
    {
        "taints": [
            {
                "code": "return \"no existe ciecode con ese id \";",
                "file": "compsust-utec_VINCI-ROCHE-Backend:src/main/java/vinchi/roche/controllers/Form1Controller.java"
            },
            {
                "code": "return \"no existe ciecode con ese id \";",
                "file": "compsust-utec_VINCI-ROCHE-Backend:src/main/java/vinchi/roche/controllers/Form1Controller.java"
            },
            {
                "code": "for (Comorbid comorbid:form1.getComorbidList()){",
                "file": "compsust-utec_VINCI-ROCHE-Backend:src/main/java/vinchi/roche/controllers/Form1Controller.java"
            },
            {
                "code": "public Object update(@RequestBody Form1 form1){",
                "file": "compsust-utec_VINCI-ROCHE-Backend:src/main/java/vinchi/roche/controllers/Form1Controller.java"
            }
        ],
        "id": "AXcHPBYgD7elb69AYKlc"
    },
    {
        "taints": [
            {
                "code": "return principal.getName();",
                "file": "sin-net-reports:web-server/src/main/java/sinnet/HelloController.java"
            }
        ],
        "id": "AXVgMPx2LacUGvFZz-eZ"
    },
    {
        "taints": [
            {
                "code": "<div><a href=\"./competitionSpeedChart.jsp?competitionId=<%=request.getParameter(\"competitionId\")%>\">График скоростей игроков по заездам</a></div>",
                "file": "dievri_kgparser:kgparserWeb/src/main/webapp/competition.jsp"
            }
        ],
        "id": "AXbKnORk_mcy25Db8Vd5"
    },
    {
        "taints": [
            {
                "code": "<div><a href=\"./competitionErrorsCountChart.jsp?competitionId=<%=request.getParameter(\"competitionId\")%>\">График количеств ошибок игроков по заездам</a></div>",
                "file": "dievri_kgparser:kgparserWeb/src/main/webapp/competition.jsp"
            }
        ],
        "id": "AXbKnORk_mcy25Db8Vd1"
    },
    {
        "taints": [
            {
                "code": "<div><a href=\"./competitionPlayersSummary.jsp?competitionId=<%=request.getParameter(\"competitionId\")%>\">Сводная таблица результатов игроков</a></div>",
                "file": "dievri_kgparser:kgparserWeb/src/main/webapp/competition.jsp"
            }
        ],
        "id": "AXbKnORk_mcy25Db8Vd3"
    },
    {
        "taints": [
            {
                "code": "<div><a href=\"./supermanOrderResults.jsp?competitionId=<%=request.getParameter(\"competitionId\")%>\">Расчет результатов по Ордену Суперменов</a></div>",
                "file": "dievri_kgparser:kgparserWeb/src/main/webapp/competition.jsp"
            }
        ],
        "id": "AXbKnORk_mcy25Db8Vd2"
    },
    {
        "taints": [
            {
                "code": "var competitionId = '<%=request.getParameter(\"competitionId\")%>';",
                "file": "dievri_kgparser:kgparserWeb/src/main/webapp/competition.jsp"
            }
        ],
        "id": "AXbKnORk_mcy25Db8Vd4"
    },
    {
        "taints": [
            {
                "code": "<a href=\"./competition.jsp?competitionId=<%=request.getParameter(\"competitionId\")%>\">Вернуться к странице соревнования</a>",
                "file": "dievri_kgparser:kgparserWeb/src/main/webapp/competitionErrorsCountChart.jsp"
            }
        ],
        "id": "AXbKnORv_mcy25Db8Vd8"
    },
    {
        "taints": [
            {
                "code": "var competitionId = '<%=request.getParameter(\"competitionId\")%>';",
                "file": "dievri_kgparser:kgparserWeb/src/main/webapp/competitionErrorsCountChart.jsp"
            }
        ],
        "id": "AXbKnORv_mcy25Db8Vd9"
    },
    {
        "taints": [
            {
                "code": "<a href=\"./playerResultsTableXlsGet?competitionId=<%=request.getParameter(\"competitionId\")%>\">Выгрузить в Excel</a>",
                "file": "dievri_kgparser:kgparserWeb/src/main/webapp/competitionPlayersSummary.jsp"
            }
        ],
        "id": "AXbKnOQn_mcy25Db8VdV"
    },
    {
        "taints": [
            {
                "code": "<a href=\"./competition.jsp?competitionId=<%=request.getParameter(\"competitionId\")%>\">Вернуться к странице соревнования</a>",
                "file": "dievri_kgparser:kgparserWeb/src/main/webapp/competitionPlayersSummary.jsp"
            }
        ],
        "id": "AXbKnOQn_mcy25Db8VdW"
    },
    {
        "taints": [
            {
                "code": "var competitionId = '<%=request.getParameter(\"competitionId\")%>';",
                "file": "dievri_kgparser:kgparserWeb/src/main/webapp/competitionPlayersSummary.jsp"
            }
        ],
        "id": "AXbKnOQn_mcy25Db8VdU"
    },
    {
        "taints": [
            {
                "code": "<a href=\"./competition.jsp?competitionId=<%=request.getParameter(\"competitionId\")%>\">Вернуться к странице соревнования</a>",
                "file": "dievri_kgparser:kgparserWeb/src/main/webapp/competitionSpeedChart.jsp"
            }
        ],
        "id": "AXbKnOZU_mcy25Db8VkU"
    },
    {
        "taints": [
            {
                "code": "var competitionId = '<%=request.getParameter(\"competitionId\")%>';",
                "file": "dievri_kgparser:kgparserWeb/src/main/webapp/competitionSpeedChart.jsp"
            }
        ],
        "id": "AXbKnOZU_mcy25Db8VkT"
    },
    {
        "taints": [
            {
                "code": "Вы можете перейти <a href=\"./competitionsList.jsp\">к списку соревнований</a> либо <a href=\"./competition.jsp?competitionId=<%=request.getParameter(\"competitionId\")%>\">на страницу соревнования</a>.",
                "file": "dievri_kgparser:kgparserWeb/src/main/webapp/competitionUploadSuccess.jsp"
            }
        ],
        "id": "AXbKnOQO_mcy25Db8VdE"
    },
    {
        "taints": [
            {
                "code": "<a href=\"./competition.jsp?competitionId=<%=request.getParameter(\"competitionId\")%>\">Вернуться к странице соревнования</a>",
                "file": "dievri_kgparser:kgparserWeb/src/main/webapp/round.jsp"
            }
        ],
        "id": "AXbKnOKZ_mcy25Db8VYF"
    },
    {
        "taints": [
            {
                "code": "var competitionId = '<%=request.getParameter(\"competitionId\")%>';",
                "file": "dievri_kgparser:kgparserWeb/src/main/webapp/round.jsp"
            }
        ],
        "id": "AXbKnOKZ_mcy25Db8VYG"
    },
    {
        "taints": [
            {
                "code": "var roundNumber = '<%=request.getParameter(\"roundNumber\")%>';",
                "file": "dievri_kgparser:kgparserWeb/src/main/webapp/round.jsp"
            }
        ],
        "id": "AXbKnOKZ_mcy25Db8VYH"
    },
    {
        "taints": [
            {
                "code": "out.print(ristorante+piatto+ricetta+prezzo+vegano+celiaco);",
                "file": "luca-capotombolo_sonarTest22_02:WebContent/ConfirmMessage.jsp"
            },
            {
                "code": "String celiaco=(String)request.getParameter(\"celiaco\");",
                "file": "luca-capotombolo_sonarTest22_02:WebContent/ConfirmMessage.jsp"
            },
            {
                "code": "String vegano=(String)request.getParameter(\"vegano\");",
                "file": "luca-capotombolo_sonarTest22_02:WebContent/ConfirmMessage.jsp"
            },
            {
                "code": "String prezzo=(String)request.getParameter(\"prezzo\");",
                "file": "luca-capotombolo_sonarTest22_02:WebContent/ConfirmMessage.jsp"
            },
            {
                "code": "String ricetta = (String)request.getParameter(\"ricetta\");",
                "file": "luca-capotombolo_sonarTest22_02:WebContent/ConfirmMessage.jsp"
            },
            {
                "code": "String piatto = (String)request.getParameter(\"piatto\");",
                "file": "luca-capotombolo_sonarTest22_02:WebContent/ConfirmMessage.jsp"
            },
            {
                "code": "String ristorante = (String)request.getParameter(\"ristorante\");",
                "file": "luca-capotombolo_sonarTest22_02:WebContent/ConfirmMessage.jsp"
            }
        ],
        "id": "AXcDHqS1rSZyO3DFZFF4"
    },
    {
        "taints": [
            {
                "code": "",
                "file": "Team13se2_PULSeBS:src/main/java/team13/pulsbes/controllers/SupportOfficerController.java"
            },
            {
                "code": "throw new IOException(ERROR_CLOSING_FILE);",
                "file": "Team13se2_PULSeBS:src/main/java/team13/pulsbes/controllers/SupportOfficerController.java"
            }
        ],
        "id": "AXZwTowINyfZLy5zYLfp"
    },
    {
        "taints": [
            {
                "code": "try  {",
                "file": "Team13se2_PULSeBS:src/main/java/team13/pulsbes/controllers/SupportOfficerController.java"
            },
            {
                "code": "",
                "file": "Team13se2_PULSeBS:src/main/java/team13/pulsbes/controllers/SupportOfficerController.java"
            }
        ],
        "id": "AXZrZnpQb3in8zAWyWwe"
    },
    {
        "taints": [
            {
                "code": "@PostMapping(value = Constants.ENROLL_STUDENTS)",
                "file": "Team13se2_PULSeBS:src/main/java/team13/pulsbes/controllers/SupportOfficerController.java"
            },
            {
                "code": "}",
                "file": "Team13se2_PULSeBS:src/main/java/team13/pulsbes/controllers/SupportOfficerController.java"
            }
        ],
        "id": "AXZrZnpQb3in8zAWyWwf"
    },
    {
        "taints": [
            {
                "code": "File f = new File(\"Teachers.csv\");",
                "file": "Team13se2_PULSeBS:src/main/java/team13/pulsbes/controllers/SupportOfficerController.java"
            },
            {
                "code": "}",
                "file": "Team13se2_PULSeBS:src/main/java/team13/pulsbes/controllers/SupportOfficerController.java"
            }
        ],
        "id": "AXZrZnpQb3in8zAWyWwg"
    },
    {
        "taints": [
            {
                "code": "public void addCourses(@RequestBody String file, @CookieValue(value = \"username\") String username, @CookieValue(value = \"type\") String type) throws InvalidUserException, IOException {",
                "file": "Team13se2_PULSeBS:src/main/java/team13/pulsbes/controllers/SupportOfficerController.java"
            },
            {
                "code": "throw new InvalidUserException(INVALID_USER);",
                "file": "Team13se2_PULSeBS:src/main/java/team13/pulsbes/controllers/SupportOfficerController.java"
            }
        ],
        "id": "AXZrZnpQb3in8zAWyWwh"
    },
    {
        "taints": [
            {
                "code": "id : '<%= datasetID %>',",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/dataset/linkDataset.jsp"
            },
            {
                "code": "datasetID = request.getParameter(\"id\");",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/dataset/linkDataset.jsp"
            }
        ],
        "id": "AXbxDNfsQ3_vRcH2YEW8"
    },
    {
        "taints": [
            {
                "code": "label: '<%= datasetLabel %>'",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/dataset/linkDataset.jsp"
            },
            {
                "code": "datasetLabel = request.getParameter(\"label\");",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/dataset/linkDataset.jsp"
            }
        ],
        "id": "AXbxDNfsQ3_vRcH2YEW9"
    },
    {
        "taints": [
            {
                "code": "ng-click=\"saveRelation(<%= datasetID %>)\" ng-disabled=\"checkSave()\">{{translate.load('sbi.generic.save')}}",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/dataset/linkDataset.jsp"
            },
            {
                "code": "datasetID = request.getParameter(\"id\");",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/dataset/linkDataset.jsp"
            }
        ],
        "id": "AXbxDNfsQ3_vRcH2YEW7"
    },
    {
        "taints": [
            {
                "code": "id : '<%= documentID %>',",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/documentbrowser/templates/linkDocument.jsp"
            },
            {
                "code": "documentID = request.getParameter(\"OBJECT_ID\");",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/documentbrowser/templates/linkDocument.jsp"
            }
        ],
        "id": "AXbxDNeYQ3_vRcH2YEW1"
    },
    {
        "taints": [
            {
                "code": "label: '<%= documentLabel %>',",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/documentbrowser/templates/linkDocument.jsp"
            },
            {
                "code": "documentLabel = request.getParameter(\"OBJECT_LABEL\");",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/documentbrowser/templates/linkDocument.jsp"
            }
        ],
        "id": "AXbxDNeYQ3_vRcH2YEW0"
    },
    {
        "taints": [
            {
                "code": "$scope.oldEncMethodMessage = <%= oldEncMethodMessage %>;",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/wapp/changePwd.jsp"
            },
            {
                "code": "String oldEncMethodMessage = (request.getParameter(\"old_enc_method_message\") == null) ? \"\" : request.getParameter(\"old_enc_method_message\");",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/wapp/changePwd.jsp"
            }
        ],
        "id": "AXbxDNg5Q3_vRcH2YEXX"
    },
    {
        "taints": [
            {
                "code": "writer.println(\"Translated Path = [\" + request.getPathTranslated() + \"]\");// not decoded",
                "file": "marcomarcucci30_openjpa:openjpa-jest/src/main/java/org/apache/openjpa/persistence/jest/AbstractCommand.java"
            },
            {
                "code": "writer.println(\"Translated Path = [\" + request.getPathTranslated() + \"]\");// not decoded",
                "file": "marcomarcucci30_openjpa:openjpa-jest/src/main/java/org/apache/openjpa/persistence/jest/AbstractCommand.java"
            }
        ],
        "id": "AXaqatyyeoMj3fyeEojL"
    },
    {
        "taints": [
            {
                "code": "writer.println(\"Query           = [\" + query + \"]\"); // and this one",
                "file": "marcomarcucci30_openjpa:openjpa-jest/src/main/java/org/apache/openjpa/persistence/jest/AbstractCommand.java"
            },
            {
                "code": "query = URLDecoder.decode(request.getQueryString(),\"UTF-8\");",
                "file": "marcomarcucci30_openjpa:openjpa-jest/src/main/java/org/apache/openjpa/persistence/jest/AbstractCommand.java"
            },
            {
                "code": "query = URLDecoder.decode(request.getQueryString(),\"UTF-8\");",
                "file": "marcomarcucci30_openjpa:openjpa-jest/src/main/java/org/apache/openjpa/persistence/jest/AbstractCommand.java"
            }
        ],
        "id": "AXaqatyyeoMj3fyeEojK"
    },
    {
        "taints": [
            {
                "code": "var execFrom = '<%=request.getParameter(\"EXEC_FROM\")%>';",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/documentexecution/documentExecutionMaster.jsp"
            }
        ],
        "id": "AXbxDNgNQ3_vRcH2YEXR"
    },
    {
        "taints": [
            {
                "code": "<input type=\"hidden\"  name=\"listenertype\" value=\"<%=listenerType%>\" />",
                "file": "it.eng.knowage:knowagecockpitengine:src/main/webapp/jamon/mondetail.jsp"
            },
            {
                "code": "listenerType=(String)request.getParameter(\"listenertype\");",
                "file": "it.eng.knowage:knowagecockpitengine:src/main/webapp/jamon/mondetail.jsp"
            }
        ],
        "id": "AXbxEDB4gOfTNNPH-Tvs"
    },
    {
        "taints": [
            {
                "code": "FOLDER_ID: \"<%=folderId%>\",",
                "file": "it.eng.knowage:knowagecockpitengine:src/main/webapp/WEB-INF/jsp/ngCockpit.jsp"
            },
            {
                "code": "String folderId = (request.getParameter(SpagoBIConstants.FUNCTIONALITY_ID)==null)?\"\":request.getParameter(SpagoBIConstants.FUNCTIONALITY_ID);",
                "file": "it.eng.knowage:knowagecockpitengine:src/main/webapp/WEB-INF/jsp/commons/angular/angularResource.jsp"
            }
        ],
        "id": "AXbxEDEbgOfTNNPH-Tv3"
    },
    {
        "taints": [
            {
                "code": "user.isTechnicalUser = <%=request.getParameter(\"isTechnicalUser\")%>;",
                "file": "it.eng.knowage:knowageqbeengine:src/main/webapp/WEB-INF/jsp/commons/angular/sbiModule/sbiModuleUser.jspf"
            }
        ],
        "id": "AXbxGUHrIcXb5H7pvJE-"
    },
    {
        "taints": [
            {
                "code": "user.isTechnicalUser = <%=request.getParameter(\"isTechnicalUser\")%>;",
                "file": "it.eng.knowage:knowageqbeengine:src/main/webapp/WEB-INF/jsp/commons/angular/sbiModule/sbiModuleUser.jspf"
            }
        ],
        "id": "AXbxGUHrIcXb5H7pvJE9"
    },
    {
        "taints": [
            {
                "code": "user.isTechnicalUser = <%=request.getParameter(\"isTechnicalUser\")%>;",
                "file": "it.eng.knowage:knowageqbeengine:src/main/webapp/WEB-INF/jsp/commons/angular/sbiModule/sbiModuleUser.jspf"
            }
        ],
        "id": "AXbxGUHrIcXb5H7pvJE_"
    },
    {
        "taints": [
            {
                "code": "user.isTechnicalUser = <%=request.getParameter(\"isTechnicalUser\")%>;",
                "file": "it.eng.knowage:knowageqbeengine:src/main/webapp/WEB-INF/jsp/commons/angular/sbiModule/sbiModuleUser.jspf"
            }
        ],
        "id": "AXbxGUHrIcXb5H7pvJFA"
    },
    {
        "taints": [
            {
                "code": "user.isTechnicalUser = <%=request.getParameter(\"isTechnicalUser\")%>;",
                "file": "it.eng.knowage:knowageqbeengine:src/main/webapp/WEB-INF/jsp/commons/angular/sbiModule/sbiModuleUser.jspf"
            }
        ],
        "id": "AXbxGUHrIcXb5H7pvJFB"
    },
    {
        "taints": [
            {
                "code": "dataSourceForWritingLabel:'<%=request.getParameter(\"DEFAULT_DATASOURCE_FOR_WRITING_LABEL\")%>',",
                "file": "it.eng.knowage:knowageqbeengine:src/main/webapp/WEB-INF/jsp/commons/angular/sbiModule/sbiModuleInputParams.jspf"
            }
        ],
        "id": "AXbxGUIRIcXb5H7pvJFH"
    },
    {
        "taints": [
            {
                "code": "dataSourceForWritingLabel:'<%=request.getParameter(\"DEFAULT_DATASOURCE_FOR_WRITING_LABEL\")%>',",
                "file": "it.eng.knowage:knowageqbeengine:src/main/webapp/WEB-INF/jsp/commons/angular/sbiModule/sbiModuleInputParams.jspf"
            }
        ],
        "id": "AXbxGUIRIcXb5H7pvJFI"
    },
    {
        "taints": [
            {
                "code": "dataSourceForWritingLabel:'<%=request.getParameter(\"DEFAULT_DATASOURCE_FOR_WRITING_LABEL\")%>',",
                "file": "it.eng.knowage:knowageqbeengine:src/main/webapp/WEB-INF/jsp/commons/angular/sbiModule/sbiModuleInputParams.jspf"
            }
        ],
        "id": "AXbxGUIRIcXb5H7pvJFK"
    },
    {
        "taints": [
            {
                "code": "dataSourceForWritingLabel:'<%=request.getParameter(\"DEFAULT_DATASOURCE_FOR_WRITING_LABEL\")%>',",
                "file": "it.eng.knowage:knowageqbeengine:src/main/webapp/WEB-INF/jsp/commons/angular/sbiModule/sbiModuleInputParams.jspf"
            }
        ],
        "id": "AXbxGUIRIcXb5H7pvJFL"
    },
    {
        "taints": [
            {
                "code": "dataSourceForWritingLabel:'<%=request.getParameter(\"DEFAULT_DATASOURCE_FOR_WRITING_LABEL\")%>',",
                "file": "it.eng.knowage:knowageqbeengine:src/main/webapp/WEB-INF/jsp/commons/angular/sbiModule/sbiModuleInputParams.jspf"
            }
        ],
        "id": "AXbxGUIRIcXb5H7pvJFM"
    },
    {
        "taints": [
            {
                "code": "var dataSourceId = <%= datasourceId%>;",
                "file": "it.eng.knowage:knowageqbeengine:src/main/webapp/WEB-INF/jsp/commons/angular/formulas/formulaService.jspf"
            },
            {
                "code": "String datasourceId= request.getParameter(\"DATA_SOURCE_ID\");",
                "file": "it.eng.knowage:knowageqbeengine:src/main/webapp/WEB-INF/jsp/commons/angular/angularResource.jspf"
            }
        ],
        "id": "AXbxGUIhIcXb5H7pvJFR"
    },
    {
        "taints": [
            {
                "code": "var dataSourceId = <%= datasourceId%>;",
                "file": "it.eng.knowage:knowageqbeengine:src/main/webapp/WEB-INF/jsp/commons/angular/formulas/formulaService.jspf"
            },
            {
                "code": "String datasourceId= request.getParameter(\"DATA_SOURCE_ID\");",
                "file": "it.eng.knowage:knowageqbeengine:src/main/webapp/WEB-INF/jsp/commons/angular/angularResource.jspf"
            }
        ],
        "id": "AXbxGUIhIcXb5H7pvJFS"
    },
    {
        "taints": [
            {
                "code": "var cockpitSelections = JSON.parse('<%=initialSelections%>');",
                "file": "it.eng.knowage:knowagecockpitengine:src/main/webapp/WEB-INF/jsp/ngCockpit.jsp"
            },
            {
                "code": "String initialSelections = (request.getParameter(\"COCKPIT_SELECTIONS\")==null) ? \"{}\" : request.getParameter(\"COCKPIT_SELECTIONS\");",
                "file": "it.eng.knowage:knowagecockpitengine:src/main/webapp/WEB-INF/jsp/commons/angular/angularResource.jsp"
            }
        ],
        "id": "AXbxEDEbgOfTNNPH-Tv2"
    },
    {
        "taints": [
            {
                "code": "var JSsbiExecutionID = '<%= sbiExecutionID %>'",
                "file": "it.eng.knowage:knowagewhatifengine:src/main/webapp/WEB-INF/jsp/edit.jsp"
            },
            {
                "code": "sbiExecutionID = request.getParameter(\"SBI_EXECUTION_ID\" );",
                "file": "it.eng.knowage:knowagewhatifengine:src/main/webapp/WEB-INF/jsp/commons/angular/angularResource.jspf"
            }
        ],
        "id": "AXbxIRSgnRf8_vxcpLoA"
    },
    {
        "taints": [
            {
                "code": "var mode = '<%= mode %>'",
                "file": "it.eng.knowage:knowagewhatifengine:src/main/webapp/WEB-INF/jsp/edit.jsp"
            },
            {
                "code": "mode = request.getParameter(\"mode\");",
                "file": "it.eng.knowage:knowagewhatifengine:src/main/webapp/WEB-INF/jsp/commons/angular/angularResource.jspf"
            }
        ],
        "id": "AXbxIRSgnRf8_vxcpLoB"
    },
    {
        "taints": [
            {
                "code": "var engineName = '<%= engine %>'",
                "file": "it.eng.knowage:knowagewhatifengine:src/main/webapp/WEB-INF/jsp/edit.jsp"
            },
            {
                "code": "engine = request.getParameter(\"ENGINE\");",
                "file": "it.eng.knowage:knowagewhatifengine:src/main/webapp/WEB-INF/jsp/commons/angular/angularResource.jspf"
            }
        ],
        "id": "AXbxIRSfnRf8_vxcpLn_"
    },
    {
        "taints": [
            {
                "code": "var JSsbiExecutionID = '<%= sbiExecutionID %>'",
                "file": "it.eng.knowage:knowagewhatifengine:src/main/webapp/WEB-INF/jsp/whatIf2.jsp"
            },
            {
                "code": "sbiExecutionID = request.getParameter(\"SBI_EXECUTION_ID\" );",
                "file": "it.eng.knowage:knowagewhatifengine:src/main/webapp/WEB-INF/jsp/commons/angular/angularResource.jspf"
            }
        ],
        "id": "AXbxIRSInRf8_vxcpLn6"
    },
    {
        "taints": [
            {
                "code": "var mode = '<%= mode %>'",
                "file": "it.eng.knowage:knowagewhatifengine:src/main/webapp/WEB-INF/jsp/whatIf2.jsp"
            },
            {
                "code": "mode = request.getParameter(\"mode\");",
                "file": "it.eng.knowage:knowagewhatifengine:src/main/webapp/WEB-INF/jsp/commons/angular/angularResource.jspf"
            }
        ],
        "id": "AXbxIRSInRf8_vxcpLn5"
    },
    {
        "taints": [
            {
                "code": "var engineName = '<%= engine %>'",
                "file": "it.eng.knowage:knowagewhatifengine:src/main/webapp/WEB-INF/jsp/whatIf2.jsp"
            },
            {
                "code": "engine = request.getParameter(\"ENGINE\");",
                "file": "it.eng.knowage:knowagewhatifengine:src/main/webapp/WEB-INF/jsp/commons/angular/angularResource.jspf"
            }
        ],
        "id": "AXbxIRSInRf8_vxcpLn3"
    },
    {
        "taints": [
            {
                "code": "var schemaID = '<%= schemaID %>'",
                "file": "it.eng.knowage:knowagewhatifengine:src/main/webapp/WEB-INF/jsp/whatIf2.jsp"
            },
            {
                "code": "schemaID = request.getParameter(\"schemaID\");",
                "file": "it.eng.knowage:knowagewhatifengine:src/main/webapp/WEB-INF/jsp/commons/angular/angularResource.jspf"
            }
        ],
        "id": "AXbxIRSInRf8_vxcpLn-"
    },
    {
        "taints": [
            {
                "code": "var schemaName = '<%= schemaName %>'",
                "file": "it.eng.knowage:knowagewhatifengine:src/main/webapp/WEB-INF/jsp/whatIf2.jsp"
            },
            {
                "code": "schemaName = request.getParameter(\"schemaName\");",
                "file": "it.eng.knowage:knowagewhatifengine:src/main/webapp/WEB-INF/jsp/commons/angular/angularResource.jspf"
            }
        ],
        "id": "AXbxIRSInRf8_vxcpLn7"
    },
    {
        "taints": [
            {
                "code": "var cubeName = '<%= cubeName %>'",
                "file": "it.eng.knowage:knowagewhatifengine:src/main/webapp/WEB-INF/jsp/whatIf2.jsp"
            },
            {
                "code": "cubeName = request.getParameter(\"cubeName\");",
                "file": "it.eng.knowage:knowagewhatifengine:src/main/webapp/WEB-INF/jsp/commons/angular/angularResource.jspf"
            }
        ],
        "id": "AXbxIRSInRf8_vxcpLn4"
    },
    {
        "taints": [
            {
                "code": "var currentContentId = '<%= currentContentId %>'",
                "file": "it.eng.knowage:knowagewhatifengine:src/main/webapp/WEB-INF/jsp/whatIf2.jsp"
            },
            {
                "code": "currentContentId = request.getParameter(\"currentContentId\");",
                "file": "it.eng.knowage:knowagewhatifengine:src/main/webapp/WEB-INF/jsp/commons/angular/angularResource.jspf"
            }
        ],
        "id": "AXbxIRSInRf8_vxcpLn9"
    },
    {
        "taints": [
            {
                "code": "var editModeCurrentContentId = '<%= editModeCurrentContentId %>'",
                "file": "it.eng.knowage:knowagewhatifengine:src/main/webapp/WEB-INF/jsp/whatIf2.jsp"
            },
            {
                "code": "editModeCurrentContentId = request.getParameter(\"SBI_ARTIFACT_VERSION_ID\");",
                "file": "it.eng.knowage:knowagewhatifengine:src/main/webapp/WEB-INF/jsp/commons/angular/angularResource.jspf"
            }
        ],
        "id": "AXbxIRSInRf8_vxcpLn8"
    },
    {
        "taints": [
            {
                "code": "<th><input type='text' name='ArraySQL' value=\"<%=arraySQL%>\" size=\"45\"></th>",
                "file": "it.eng.knowage:knowagewhatifengine:src/main/webapp/jamon/mondetail.jsp"
            },
            {
                "code": "int textSize     = getNum(request.getParameter(\"TextSize\"), \"0\");",
                "file": "it.eng.knowage:knowagewhatifengine:src/main/webapp/jamon/mondetail.jsp"
            }
        ],
        "id": "AXbxIRTonRf8_vxcpLoD"
    },
    {
        "taints": [
            {
                "code": "<th><input type='text' name='ArraySQL' value=\"<%=arraySQL%>\" size=\"45\"></th>",
                "file": "it.eng.knowage:knowagesvgviewerengine:src/main/webapp/jamon/mondetail.jsp"
            },
            {
                "code": "int textSize     = getNum(request.getParameter(\"TextSize\"), \"0\");",
                "file": "it.eng.knowage:knowagesvgviewerengine:src/main/webapp/jamon/mondetail.jsp"
            }
        ],
        "id": "AXbxGtK2zjh7vi1yjoMu"
    },
    {
        "taints": [
            {
                "code": "sbiExecutionID:'<%=request.getParameter(SpagoBIConstants.SBI_EXECUTION_ID)%>',",
                "file": "it.eng.knowage:knowageqbeengine:src/main/webapp/WEB-INF/jsp/commons/angular/sbiModule/sbiModuleConfig.jspf"
            }
        ],
        "id": "AXbxGUH_IcXb5H7pvJFC"
    },
    {
        "taints": [
            {
                "code": "sbiExecutionID:'<%=request.getParameter(SpagoBIConstants.SBI_EXECUTION_ID)%>',",
                "file": "it.eng.knowage:knowageqbeengine:src/main/webapp/WEB-INF/jsp/commons/angular/sbiModule/sbiModuleConfig.jspf"
            }
        ],
        "id": "AXbxGUH_IcXb5H7pvJFD"
    },
    {
        "taints": [
            {
                "code": "sbiExecutionID:'<%=request.getParameter(SpagoBIConstants.SBI_EXECUTION_ID)%>',",
                "file": "it.eng.knowage:knowageqbeengine:src/main/webapp/WEB-INF/jsp/commons/angular/sbiModule/sbiModuleConfig.jspf"
            }
        ],
        "id": "AXbxGUH_IcXb5H7pvJFE"
    },
    {
        "taints": [
            {
                "code": "sbiExecutionID:'<%=request.getParameter(SpagoBIConstants.SBI_EXECUTION_ID)%>',",
                "file": "it.eng.knowage:knowageqbeengine:src/main/webapp/WEB-INF/jsp/commons/angular/sbiModule/sbiModuleConfig.jspf"
            }
        ],
        "id": "AXbxGUH_IcXb5H7pvJFF"
    },
    {
        "taints": [
            {
                "code": "sbiExecutionID:'<%=request.getParameter(SpagoBIConstants.SBI_EXECUTION_ID)%>',",
                "file": "it.eng.knowage:knowageqbeengine:src/main/webapp/WEB-INF/jsp/commons/angular/sbiModule/sbiModuleConfig.jspf"
            }
        ],
        "id": "AXbxGUH_IcXb5H7pvJFG"
    },
    {
        "taints": [
            {
                "code": "dataSourceLabel:'<%=request.getParameter(\"DATA_SOURCE_LABEL\")%>',",
                "file": "it.eng.knowage:knowageqbeengine:src/main/webapp/WEB-INF/jsp/commons/angular/sbiModule/sbiModuleInputParams.jspf"
            }
        ],
        "id": "AXbxGUIRIcXb5H7pvJFJ"
    },
    {
        "taints": [
            {
                "code": "dataSourceLabel:'<%=request.getParameter(\"DATA_SOURCE_LABEL\")%>',",
                "file": "it.eng.knowage:knowageqbeengine:src/main/webapp/WEB-INF/jsp/commons/angular/sbiModule/sbiModuleInputParams.jspf"
            }
        ],
        "id": "AXbxGUIRIcXb5H7pvJFN"
    },
    {
        "taints": [
            {
                "code": "dataSourceLabel:'<%=request.getParameter(\"DATA_SOURCE_LABEL\")%>',",
                "file": "it.eng.knowage:knowageqbeengine:src/main/webapp/WEB-INF/jsp/commons/angular/sbiModule/sbiModuleInputParams.jspf"
            }
        ],
        "id": "AXbxGUIRIcXb5H7pvJFO"
    },
    {
        "taints": [
            {
                "code": "dataSourceLabel:'<%=request.getParameter(\"DATA_SOURCE_LABEL\")%>',",
                "file": "it.eng.knowage:knowageqbeengine:src/main/webapp/WEB-INF/jsp/commons/angular/sbiModule/sbiModuleInputParams.jspf"
            }
        ],
        "id": "AXbxGUIRIcXb5H7pvJFP"
    },
    {
        "taints": [
            {
                "code": "dataSourceLabel:'<%=request.getParameter(\"DATA_SOURCE_LABEL\")%>',",
                "file": "it.eng.knowage:knowageqbeengine:src/main/webapp/WEB-INF/jsp/commons/angular/sbiModule/sbiModuleInputParams.jspf"
            }
        ],
        "id": "AXbxGUIRIcXb5H7pvJFQ"
    },
    {
        "taints": [
            {
                "code": "<th><input type='text' name='ArraySQL' value=\"<%=arraySQL%>\" size=\"45\"></th>",
                "file": "it.eng.knowage:knowageqbeengine:src/main/webapp/jamon/mondetail.jsp"
            },
            {
                "code": "int textSize     = getNum(request.getParameter(\"TextSize\"), \"0\");",
                "file": "it.eng.knowage:knowageqbeengine:src/main/webapp/jamon/mondetail.jsp"
            }
        ],
        "id": "AXbxGUKXIcXb5H7pvJFT"
    },
    {
        "taints": [
            {
                "code": "var datasourceId='<%= datasourceId%>';",
                "file": "it.eng.knowage:knowagemeta:src/main/webapp/WEB-INF/jsp/metaWeb.jsp"
            },
            {
                "code": "String datasourceId= request.getParameter(\"datasourceId\");",
                "file": "it.eng.knowage:knowagemeta:src/main/webapp/WEB-INF/jsp/metaWeb.jsp"
            }
        ],
        "id": "AXbxF5KiDHJ7sfJFnVAg"
    },
    {
        "taints": [
            {
                "code": "var bmId='<%= bmId%>';",
                "file": "it.eng.knowage:knowagemeta:src/main/webapp/WEB-INF/jsp/metaWeb.jsp"
            },
            {
                "code": "String bmId= request.getParameter(\"bmId\");",
                "file": "it.eng.knowage:knowagemeta:src/main/webapp/WEB-INF/jsp/metaWeb.jsp"
            }
        ],
        "id": "AXbxF5KiDHJ7sfJFnVAf"
    },
    {
        "taints": [
            {
                "code": "sbiEnviroment:\"<%=request.getParameter(SpagoBIConstants.SBI_ENVIRONMENT)%>\"",
                "file": "it.eng.knowage:knowagekpiengine:src/main/webapp/WEB-INF/jsp/commons/angular/sbiModule.jsp"
            }
        ],
        "id": "AXbxFdnSwwFzqNVTy3Nr"
    },
    {
        "taints": [
            {
                "code": "sbiEnviroment:\"<%=request.getParameter(SpagoBIConstants.SBI_ENVIRONMENT)%>\"",
                "file": "it.eng.knowage:knowagekpiengine:src/main/webapp/WEB-INF/jsp/commons/angular/sbiModule.jsp"
            }
        ],
        "id": "AXbxFdnSwwFzqNVTy3Ns"
    },
    {
        "taints": [
            {
                "code": "sbiEnviroment:\"<%=request.getParameter(SpagoBIConstants.SBI_ENVIRONMENT)%>\"",
                "file": "it.eng.knowage:knowagekpiengine:src/main/webapp/WEB-INF/jsp/commons/angular/sbiModule.jsp"
            }
        ],
        "id": "AXbxFdnSwwFzqNVTy3Nt"
    },
    {
        "taints": [
            {
                "code": "sbiEnviroment:\"<%=request.getParameter(SpagoBIConstants.SBI_ENVIRONMENT)%>\"",
                "file": "it.eng.knowage:knowagekpiengine:src/main/webapp/WEB-INF/jsp/commons/angular/sbiModule.jsp"
            }
        ],
        "id": "AXbxFdnSwwFzqNVTy3Nu"
    },
    {
        "taints": [
            {
                "code": "var sbiExecutionId = <%=request.getParameter(\"SBI_EXECUTION_ID\")!=null? \"'\"+request.getParameter(\"SBI_EXECUTION_ID\")+\"'\" : \"null\"%>;",
                "file": "it.eng.knowage:knowagekpiengine:src/main/webapp/WEB-INF/jsp/kpiVisualization.jsp"
            }
        ],
        "id": "AXbxFdpDwwFzqNVTy3Nv"
    },
    {
        "taints": [
            {
                "code": "var userId = '<%=request.getParameter(\"user_id\")%>';",
                "file": "it.eng.knowage:knowagekpiengine:src/main/webapp/WEB-INF/jsp/kpiVisualization.jsp"
            }
        ],
        "id": "AXbxFdpDwwFzqNVTy3Nw"
    },
    {
        "taints": [
            {
                "code": "<th><input type='text' name='ArraySQL' value=\"<%=arraySQL%>\" size=\"45\"></th>",
                "file": "it.eng.knowage:knowagejasperreportengine:src/main/webapp/jamon/mondetail.jsp"
            },
            {
                "code": "int textSize     = getNum(request.getParameter(\"TextSize\"), \"0\");",
                "file": "it.eng.knowage:knowagejasperreportengine:src/main/webapp/jamon/mondetail.jsp"
            }
        ],
        "id": "AXbxFTPkDHJ7sfJFnQIR"
    },
    {
        "taints": [
            {
                "code": "var isTechnicalUser = '<%=isUserTechnical%>';",
                "file": "it.eng.knowage:knowagegeoreportengine:src/main/webapp/WEB-INF/jsp/geoEdit.jsp"
            },
            {
                "code": "String isUserTechnical = request.getParameter(\"IS_TECHNICAL_USER\");",
                "file": "it.eng.knowage:knowagegeoreportengine:src/main/webapp/WEB-INF/jsp/commons/angular/angularResource.jspf"
            }
        ],
        "id": "AXbxFIVAI19oIQLNoGk6"
    },
    {
        "taints": [
            {
                "code": "var datasetLabel='<%=datasetLabel%>';",
                "file": "it.eng.knowage:knowagegeoreportengine:src/main/webapp/WEB-INF/jsp/geoEdit.jsp"
            },
            {
                "code": "String datasetLabel = request.getParameter(\"DATASET_LABEL\");",
                "file": "it.eng.knowage:knowagegeoreportengine:src/main/webapp/WEB-INF/jsp/commons/angular/angularResource.jspf"
            }
        ],
        "id": "AXbxFIVAI19oIQLNoGk7"
    },
    {
        "taints": [
            {
                "code": "SBI_EXECUTION_ID: <%= request.getParameter(\"SBI_EXECUTION_ID\")!=null?\"'\" + request.getParameter(\"SBI_EXECUTION_ID\") +\"'\": \"null\" %> ,",
                "file": "it.eng.knowage:knowagedataminingengine:src/main/webapp/WEB-INF/jsp/commons/angular/dataminingModule.jsp"
            }
        ],
        "id": "AXbxE7L4Q3_vRcH2YKHR"
    },
    {
        "taints": [
            {
                "code": "SBI_EXECUTION_ID: <%= request.getParameter(\"SBI_EXECUTION_ID\")!=null?\"'\" + request.getParameter(\"SBI_EXECUTION_ID\") +\"'\": \"null\" %> ,",
                "file": "it.eng.knowage:knowagedataminingengine:src/main/webapp/WEB-INF/jsp/commons/angular/dataminingModule.jsp"
            }
        ],
        "id": "AXbxE7L4Q3_vRcH2YKHS"
    },
    {
        "taints": [
            {
                "code": "ng-init=\"jobCtrl.initValues('<%=docId%>', '<%=parametersString%>');\">",
                "file": "it.eng.knowage:knowagecommonjengine:src/main/webapp/WEB-INF/jsp/manageWork.jsp"
            },
            {
                "code": "docId = request.getParameter(\"document\");",
                "file": "it.eng.knowage:knowagecommonjengine:src/main/webapp/WEB-INF/jsp/manageWork.jsp"
            }
        ],
        "id": "AXbxEOPa5ry7bdFFS-qy"
    },
    {
        "taints": [
            {
                "code": "var sbiExecutionId = <%=request.getParameter(\"SBI_EXECUTION_ID\")!=null? \"'\"+request.getParameter(\"SBI_EXECUTION_ID\")+\"'\" : \"null\"%>;",
                "file": "it.eng.knowage:knowagecockpitengine:src/main/webapp/WEB-INF/jsp/chart/chartAngular.jsp"
            }
        ],
        "id": "AXbxEDDdgOfTNNPH-Tvx"
    },
    {
        "taints": [
            {
                "code": "var currentDocumentLabel = '<%=docLabelComositeDoc%>'; <%-- label of the document --%>",
                "file": "it.eng.knowage:knowagecockpitengine:src/main/webapp/WEB-INF/jsp/chart/chartAngular.jsp"
            },
            {
                "code": "docLabelComositeDoc = request.getParameter(EngineConstants.DOC_LABEL);",
                "file": "it.eng.knowage:knowagecockpitengine:src/main/webapp/WEB-INF/jsp/chart/commons/angular/angularResource.jspf"
            }
        ],
        "id": "AXbxEDDdgOfTNNPH-Tvw"
    },
    {
        "taints": [
            {
                "code": "config.params.SBI_EXECUTION_ID=<%=request.getParameter(\"SBI_EXECUTION_ID\")!=null? \"'\"+request.getParameter(\"SBI_EXECUTION_ID\")+\"'\" : \"null\"%>;",
                "file": "it.eng.knowage:knowagecockpitengine:src/main/webapp/WEB-INF/jsp/chart/commons/angular/sbiModule.jspf"
            }
        ],
        "id": "AXbxEDDHgOfTNNPH-Tvt"
    },
    {
        "taints": [
            {
                "code": "config.params.SBI_EXECUTION_ID=<%=request.getParameter(\"SBI_EXECUTION_ID\")!=null? \"'\"+request.getParameter(\"SBI_EXECUTION_ID\")+\"'\" : \"null\"%>;",
                "file": "it.eng.knowage:knowagecockpitengine:src/main/webapp/WEB-INF/jsp/chart/commons/angular/sbiModule.jspf"
            }
        ],
        "id": "AXbxEDDHgOfTNNPH-Tvu"
    },
    {
        "taints": [
            {
                "code": "config.params.SBI_EXECUTION_ID=<%=request.getParameter(\"SBI_EXECUTION_ID\")!=null? \"'\"+request.getParameter(\"SBI_EXECUTION_ID\")+\"'\" : \"null\"%>;",
                "file": "it.eng.knowage:knowagecockpitengine:src/main/webapp/WEB-INF/jsp/chart/commons/angular/sbiModule.jspf"
            }
        ],
        "id": "AXbxEDDHgOfTNNPH-Tvv"
    },
    {
        "taints": [
            {
                "code": "<th><input type='text' name='ArraySQL' value=\"<%=arraySQL%>\" size=\"45\"></th>",
                "file": "it.eng.knowage:knowagebirtreportengine:src/main/webapp/jamon/mondetail.jsp"
            },
            {
                "code": "int textSize     = getNum(request.getParameter(\"TextSize\"), \"0\");",
                "file": "it.eng.knowage:knowagebirtreportengine:src/main/webapp/jamon/mondetail.jsp"
            }
        ],
        "id": "AXbxDh4pcVuveqdRSPQU"
    },
    {
        "taints": [
            {
                "code": "documentAndInfo.folderId = <%= folderId %>",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/analiticalmodel/document/documentDetailsImport.jsp"
            },
            {
                "code": "String folderId = request.getParameter(SpagoBIConstants.FUNCTIONALITY_ID);",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/analiticalmodel/document/documentDetailsImport.jsp"
            }
        ],
        "id": "AXbxDNiVQ3_vRcH2YEXb"
    },
    {
        "taints": [
            {
                "code": "documentAndInfo.folderId = <%= folderId %>",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/analiticalmodel/document/documentDetailsImport.jsp"
            },
            {
                "code": "String folderId = request.getParameter(SpagoBIConstants.FUNCTIONALITY_ID);",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/analiticalmodel/document/documentDetailsImport.jsp"
            }
        ],
        "id": "AXbxDNiVQ3_vRcH2YEXc"
    },
    {
        "taints": [
            {
                "code": "ng-init=\"setLayerConf('<%=selectedLayer%>', '<%=selectedLayerProp%>', '<%=selectedPropData%>', <%=multivalueFlag%>)\">",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/behaviouralmodel/analyticaldriver/mapFilter/geoMapFilter.jsp"
            },
            {
                "code": "selectedLayerProp = request.getParameter(\"SELECTEDLAYERPROP\");",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/behaviouralmodel/analyticaldriver/mapFilter/geoMapFilter.jsp"
            }
        ],
        "id": "AXbxDNitQ3_vRcH2YEXe"
    },
    {
        "taints": [
            {
                "code": "ng-init=\"setLayerConf('<%=selectedLayer%>', '<%=selectedLayerProp%>', '<%=selectedPropData%>', <%=multivalueFlag%>)\">",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/behaviouralmodel/analyticaldriver/mapFilter/geoMapFilter.jsp"
            },
            {
                "code": "selectedLayer = request.getParameter(\"SELECTEDLAYER\");",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/behaviouralmodel/analyticaldriver/mapFilter/geoMapFilter.jsp"
            }
        ],
        "id": "AXbxDNitQ3_vRcH2YEXf"
    },
    {
        "taints": [
            {
                "code": "ng-init=\"setLayerConf('<%=selectedLayer%>', '<%=selectedLayerProp%>', '<%=selectedPropData%>', <%=multivalueFlag%>)\">",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/behaviouralmodel/analyticaldriver/mapFilter/geoMapFilter.jsp"
            },
            {
                "code": "multivalueFlag = request.getParameter(\"MULTIVALUE\");",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/behaviouralmodel/analyticaldriver/mapFilter/geoMapFilter.jsp"
            }
        ],
        "id": "AXbxDNitQ3_vRcH2YEXg"
    },
    {
        "taints": [
            {
                "code": "var objectId = <%=objectId%>;",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/cross/outPars/manageOutputParameters.jsp"
            },
            {
                "code": "String objectId = request.getParameter(ObjectsTreeConstants.OBJECT_ID);",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/cross/outPars/manageOutputParameters.jsp"
            }
        ],
        "id": "AXbxDNf0Q3_vRcH2YEW-"
    },
    {
        "taints": [
            {
                "code": "var defaultFoldersId = '<%=defaultFoldersId != null ? defaultFoldersId : \"\"%>';",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/documentbrowser/documentBrowserManagement.jsp"
            },
            {
                "code": "String defaultFoldersId = request.getParameter(\"defaultFoldersId\");",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/documentbrowser/documentBrowserManagement.jsp"
            }
        ],
        "id": "AXbxDNelQ3_vRcH2YEW4"
    },
    {
        "taints": [
            {
                "code": "'OBJECT_ID' : \t\t\t'<%=request.getParameter(\"OBJECT_ID\") != null\n? request.getParameter(\"OBJECT_ID\")\n: aRequestContainer.getServiceRequest().getAttribute(\"OBJECT_ID\")%>',",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/documentexecution/documentExecutionMaster.jsp"
            }
        ],
        "id": "AXbxDNgNQ3_vRcH2YEXV"
    },
    {
        "taints": [
            {
                "code": "'OBJECT_LABEL' : \t\t'<%=request.getParameter(\"OBJECT_LABEL\") != null\n? request.getParameter(\"OBJECT_LABEL\")\n: aRequestContainer.getServiceRequest().getAttribute(\"OBJECT_LABEL\")%>',",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/documentexecution/documentExecutionMaster.jsp"
            }
        ],
        "id": "AXbxDNgNQ3_vRcH2YEXU"
    },
    {
        "taints": [
            {
                "code": "'isSourceDocument' : \t'<%=request.getParameter(\"IS_SOURCE_DOCUMENT\") != null\n? request.getParameter(\"IS_SOURCE_DOCUMENT\")\n: aRequestContainer.getServiceRequest().getAttribute(\"IS_SOURCE_DOCUMENT\")%>',",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/documentexecution/documentExecutionMaster.jsp"
            }
        ],
        "id": "AXbxDNgNQ3_vRcH2YEXP"
    },
    {
        "taints": [
            {
                "code": "'EDIT_MODE': '<%=request.getParameter(\"EDIT_MODE\") != null\n? request.getParameter(\"EDIT_MODE\")\n: aRequestContainer.getServiceRequest().getAttribute(\"EDIT_MODE\")%>',",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/documentexecution/documentExecutionMaster.jsp"
            }
        ],
        "id": "AXbxDNgNQ3_vRcH2YEXQ"
    },
    {
        "taints": [
            {
                "code": "'IS_FROM_DOCUMENT_WIDGET' : '<%=request.getParameter(\"IS_FROM_DOCUMENT_WIDGET\")%>',",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/documentexecution/documentExecutionMaster.jsp"
            }
        ],
        "id": "AXbxDNgNQ3_vRcH2YEXN"
    },
    {
        "taints": [
            {
                "code": "'TOOLBAR_VISIBLE' : '<%=request.getParameter(\"TOOLBAR_VISIBLE\")%>',",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/documentexecution/documentExecutionMaster.jsp"
            }
        ],
        "id": "AXbxDNgNQ3_vRcH2YEXM"
    },
    {
        "taints": [
            {
                "code": "'CAN_RESET_PARAMETERS' : '<%=request.getParameter(\"CAN_RESET_PARAMETERS\")%>',",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/documentexecution/documentExecutionMaster.jsp"
            }
        ],
        "id": "AXbxDNgNQ3_vRcH2YEXT"
    },
    {
        "taints": [
            {
                "code": "obj.SELECTED_ROLE = '<%=request.getParameter(\"SELECTED_ROLE\")%>';",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/documentexecution/documentExecutionMaster.jsp"
            }
        ],
        "id": "AXbxDNgNQ3_vRcH2YEXO"
    },
    {
        "taints": [
            {
                "code": "obj.SELECTED_ROLE = '<%=request.getParameter(\"ROLE\")%>';",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/documentexecution/documentExecutionMaster.jsp"
            }
        ],
        "id": "AXbxDNgNQ3_vRcH2YEXS"
    },
    {
        "taints": [
            {
                "code": "var selRole= '<%= request.getParameter(\"SELECTED_ROLE\") %>'=='null' ? '' : '<%= request.getParameter(\"SELECTED_ROLE\") %>';",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/documentexecution/documentExecutionNg.jsp"
            }
        ],
        "id": "AXbxDNgGQ3_vRcH2YEXA"
    },
    {
        "taints": [
            {
                "code": "var selRole= '<%= request.getParameter(\"SELECTED_ROLE\") %>'=='null' ? '' : '<%= request.getParameter(\"SELECTED_ROLE\") %>';",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/documentexecution/documentExecutionNg.jsp"
            }
        ],
        "id": "AXbxDNgGQ3_vRcH2YEXG"
    },
    {
        "taints": [
            {
                "code": "var crossParams= <%= request.getParameter(\"CROSS_PARAMETER\") %>==null ? {} : <%= request.getParameter(\"CROSS_PARAMETER\") %>;",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/documentexecution/documentExecutionNg.jsp"
            }
        ],
        "id": "AXbxDNgGQ3_vRcH2YEXB"
    },
    {
        "taints": [
            {
                "code": "var crossParams= <%= request.getParameter(\"CROSS_PARAMETER\") %>==null ? {} : <%= request.getParameter(\"CROSS_PARAMETER\") %>;",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/documentexecution/documentExecutionNg.jsp"
            }
        ],
        "id": "AXbxDNgGQ3_vRcH2YEXH"
    },
    {
        "taints": [
            {
                "code": "var menuParams= <%= request.getParameter(\"MENU_PARAMETERS\") %>==null ? {} : <%= request.getParameter(\"MENU_PARAMETERS\") %>;",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/documentexecution/documentExecutionNg.jsp"
            }
        ],
        "id": "AXbxDNgGQ3_vRcH2YEXI"
    },
    {
        "taints": [
            {
                "code": "var menuParams= <%= request.getParameter(\"MENU_PARAMETERS\") %>==null ? {} : <%= request.getParameter(\"MENU_PARAMETERS\") %>;",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/documentexecution/documentExecutionNg.jsp"
            }
        ],
        "id": "AXbxDNgGQ3_vRcH2YEXJ"
    },
    {
        "taints": [
            {
                "code": "var toolbarVisible= <%= request.getParameter(\"TOOLBAR_VISIBLE\") %>==null ? '' : <%= request.getParameter(\"TOOLBAR_VISIBLE\") %>;",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/documentexecution/documentExecutionNg.jsp"
            }
        ],
        "id": "AXbxDNgGQ3_vRcH2YEXF"
    },
    {
        "taints": [
            {
                "code": "var toolbarVisible= <%= request.getParameter(\"TOOLBAR_VISIBLE\") %>==null ? '' : <%= request.getParameter(\"TOOLBAR_VISIBLE\") %>;",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/documentexecution/documentExecutionNg.jsp"
            }
        ],
        "id": "AXbxDNgGQ3_vRcH2YEXK"
    },
    {
        "taints": [
            {
                "code": "var canResetParameters= <%= request.getParameter(\"CAN_RESET_PARAMETERS\") %>==null ? '' : <%= request.getParameter(\"CAN_RESET_PARAMETERS\") %>;",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/documentexecution/documentExecutionNg.jsp"
            }
        ],
        "id": "AXbxDNgGQ3_vRcH2YEW_"
    },
    {
        "taints": [
            {
                "code": "var canResetParameters= <%= request.getParameter(\"CAN_RESET_PARAMETERS\") %>==null ? '' : <%= request.getParameter(\"CAN_RESET_PARAMETERS\") %>;",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/documentexecution/documentExecutionNg.jsp"
            }
        ],
        "id": "AXbxDNgGQ3_vRcH2YEXL"
    },
    {
        "taints": [
            {
                "code": "'EDIT_MODE' : '<%= request.getParameter(\"EDIT_MODE\") %>',",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/documentexecution/documentExecutionNg.jsp"
            }
        ],
        "id": "AXbxDNgGQ3_vRcH2YEXE"
    },
    {
        "taints": [
            {
                "code": "'IS_FOR_EXPORT' : <%= isForExport %>",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/documentexecution/documentExecutionNg.jsp"
            },
            {
                "code": "isForExport = (String)(request.getParameter(SpagoBIConstants.IS_FOR_EXPORT));",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/documentexecution/documentExecutionNg.jsp"
            }
        ],
        "id": "AXbxDNgGQ3_vRcH2YEXC"
    },
    {
        "taints": [
            {
                "code": ", 'SELECTED_ROLE' : '<%=request.getParameter(\"SELECTED_ROLE\") %>'",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/documentexecution/documentExecutionNg.jsp"
            }
        ],
        "id": "AXbxDNgGQ3_vRcH2YEXD"
    },
    {
        "taints": [
            {
                "code": "var federation_id = '<%=federationID %>';",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/federateddataset/federatedDatasetBusiness.jsp"
            },
            {
                "code": "federationID = request.getParameter(\"id\");",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/federateddataset/federatedDatasetBusiness.jsp"
            }
        ],
        "id": "AXbxDNgTQ3_vRcH2YEXW"
    },
    {
        "taints": [
            {
                "code": "var value='<%= value%>';",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/glossary/finaluser/glossaryHelpOnline.jsp"
            },
            {
                "code": "value=request.getParameter(\"DOCUMENT\");",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/glossary/finaluser/glossaryHelpOnline.jsp"
            }
        ],
        "id": "AXbxDNYzQ3_vRcH2YEWt"
    },
    {
        "taints": [
            {
                "code": "var label='<%= label%>';",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/glossary/finaluser/glossaryHelpOnline.jsp"
            },
            {
                "code": "label=request.getParameter(\"LABEL\");",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/glossary/finaluser/glossaryHelpOnline.jsp"
            }
        ],
        "id": "AXbxDNYzQ3_vRcH2YEWv"
    },
    {
        "taints": [
            {
                "code": "var parameter1='<%= parameter1 %>';",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/glossary/finaluser/glossaryHelpOnline.jsp"
            },
            {
                "code": "parameter1=request.getParameter(\"DATASET\");",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/glossary/finaluser/glossaryHelpOnline.jsp"
            }
        ],
        "id": "AXbxDNYzQ3_vRcH2YEWu"
    },
    {
        "taints": [
            {
                "code": "ng-init=\"activityEventCtrl.initJobsValues('<%=jobName%>', '<%=jobGroup%>', '<%=triggerName%>', '<%=triggerGroup%>');\">",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/scheduler/EventDefinition.jsp"
            },
            {
                "code": "jobGroup = request.getParameter(\"JOB_GROUP\");",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/scheduler/EventDefinition.jsp"
            }
        ],
        "id": "AXbxDNb1Q3_vRcH2YEWw"
    },
    {
        "taints": [
            {
                "code": "ng-init=\"activityEventCtrl.initJobsValues('<%=jobName%>', '<%=jobGroup%>', '<%=triggerName%>', '<%=triggerGroup%>');\">",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/scheduler/EventDefinition.jsp"
            },
            {
                "code": "triggerGroup = request.getParameter(\"TRIGGER_GROUP\");",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/scheduler/EventDefinition.jsp"
            }
        ],
        "id": "AXbxDNb1Q3_vRcH2YEWx"
    },
    {
        "taints": [
            {
                "code": "ng-init=\"activityEventCtrl.initJobsValues('<%=jobName%>', '<%=jobGroup%>', '<%=triggerName%>', '<%=triggerGroup%>');\">",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/scheduler/EventDefinition.jsp"
            },
            {
                "code": "jobName = request.getParameter(\"JOB_NAME\");",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/scheduler/EventDefinition.jsp"
            }
        ],
        "id": "AXbxDNb1Q3_vRcH2YEWy"
    },
    {
        "taints": [
            {
                "code": "ng-init=\"activityEventCtrl.initJobsValues('<%=jobName%>', '<%=jobGroup%>', '<%=triggerName%>', '<%=triggerGroup%>');\">",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/scheduler/EventDefinition.jsp"
            },
            {
                "code": "triggerName = request.getParameter(\"TRIGGER_NAME\");",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/scheduler/EventDefinition.jsp"
            }
        ],
        "id": "AXbxDNb1Q3_vRcH2YEWz"
    },
    {
        "taints": [
            {
                "code": "var whereAreWeComingFrom = <%=request.getParameter(\"comingFrom\")%>;",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/workspace/workspaceManagement.jsp"
            }
        ],
        "id": "AXbxDNfjQ3_vRcH2YEW5"
    },
    {
        "taints": [
            {
                "code": "var initialOptionMainMenu = '<%=initialOptionMainMenu != null ? initialOptionMainMenu : \"\"%>';",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/workspace/workspaceManagement.jsp"
            },
            {
                "code": "String initialOptionMainMenu = request.getParameter(\"currentOptionMainMenu\");",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/tools/workspace/workspaceManagement.jsp"
            }
        ],
        "id": "AXbxDNfjQ3_vRcH2YEW6"
    },
    {
        "taints": [
            {
                "code": "<input type=\"hidden\" id=\"user_id\" name=\"user_id\" value=\"<%=userId%>\" />",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/wapp/changePwd.jsp"
            },
            {
                "code": "String userId = (request.getParameter(\"user_id\") == null) ? \"\" : request.getParameter(\"user_id\");",
                "file": "it.eng.knowage:knowage:src/main/webapp/WEB-INF/jsp/wapp/changePwd.jsp"
            }
        ],
        "id": "AXbxDNg5Q3_vRcH2YEXY"
    },
    {
        "taints": [
            {
                "code": "<input type=\"hidden\"  name=\"listenertype\" value=\"<%=listenerType%>\" />",
                "file": "it.eng.knowage:knowage:src/main/webapp/jamon/mondetail.jsp"
            },
            {
                "code": "listenerType=(String)request.getParameter(\"listenertype\");",
                "file": "it.eng.knowage:knowage:src/main/webapp/jamon/mondetail.jsp"
            }
        ],
        "id": "AXbxDN8PQ3_vRcH2YEZR"
    },
    {
        "taints": [
            {
                "code": "out.write(content);",
                "file": "onap_aai-search-data-service:search-data-service-app/src/main/java/org/onap/aai/sa/searchdbabstraction/elasticsearch/dao/ElasticSearchHttpController.java"
            },
            {
                "code": "private void attachContent(HttpURLConnection conn, String content) throws DocumentStoreOperationException {",
                "file": "onap_aai-search-data-service:search-data-service-app/src/main/java/org/onap/aai/sa/searchdbabstraction/elasticsearch/dao/ElasticSearchHttpController.java"
            },
            {
                "code": "attachContent(conn, doc.getContentInJson());",
                "file": "onap_aai-search-data-service:search-data-service-app/src/main/java/org/onap/aai/sa/searchdbabstraction/elasticsearch/dao/ElasticSearchHttpController.java"
            },
            {
                "code": "private void attachDocument(HttpURLConnection conn, DocumentStoreDataEntity doc)",
                "file": "onap_aai-search-data-service:search-data-service-app/src/main/java/org/onap/aai/sa/searchdbabstraction/elasticsearch/dao/ElasticSearchHttpController.java"
            },
            {
                "code": "attachDocument(conn, document);",
                "file": "onap_aai-search-data-service:search-data-service-app/src/main/java/org/onap/aai/sa/searchdbabstraction/elasticsearch/dao/ElasticSearchHttpController.java"
            },
            {
                "code": "private DocumentOperationResult createDocumentWithId(String indexName, DocumentStoreDataEntity document)",
                "file": "onap_aai-search-data-service:search-data-service-app/src/main/java/org/onap/aai/sa/searchdbabstraction/elasticsearch/dao/ElasticSearchHttpController.java"
            },
            {
                "code": "return createDocumentWithId(indexName, document);",
                "file": "onap_aai-search-data-service:search-data-service-app/src/main/java/org/onap/aai/sa/searchdbabstraction/elasticsearch/dao/ElasticSearchHttpController.java"
            },
            {
                "code": "public DocumentOperationResult createDocument(String indexName, DocumentStoreDataEntity document,",
                "file": "onap_aai-search-data-service:search-data-service-app/src/main/java/org/onap/aai/sa/searchdbabstraction/elasticsearch/dao/ElasticSearchHttpController.java"
            },
            {
                "code": "documentStore.createDocument(index, document, implicitlyCreateIndex(headers));",
                "file": "onap_aai-search-data-service:search-data-service-app/src/main/java/org/onap/aai/sa/rest/DocumentApi.java"
            },
            {
                "code": "public ResponseEntity<String> processPost(String content, HttpServletRequest request, HttpHeaders headers,",
                "file": "onap_aai-search-data-service:search-data-service-app/src/main/java/org/onap/aai/sa/rest/DocumentApi.java"
            },
            {
                "code": "return documentApi.processPost(requestBody, request, headers, httpResponse, index, documentStore);",
                "file": "onap_aai-search-data-service:search-data-service-app/src/main/java/org/onap/aai/sa/rest/SearchServiceApi.java"
            },
            {
                "code": "public ResponseEntity<String> processCreateDocWithoutId(@RequestBody String requestBody, HttpServletRequest request,",
                "file": "onap_aai-search-data-service:search-data-service-app/src/main/java/org/onap/aai/sa/rest/SearchServiceApi.java"
            }
        ],
        "id": "AXGfly3lqwu6yuMdgcWN"
    },
    {
        "taints": [
            {
                "code": "Listing products with <strong>search query: </strong> <%= request.getParameter(\"searchQuery\") %>",
                "file": "xhunault_vulnapp:src/main/webapp/WEB-INF/dvja/ProductList.jsp"
            }
        ],
        "id": "AXbyMnmVFBBWxU1WkZtW"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(deleted + \" cache elements belonging to '\" + identifier + \"' deleted.\");",
                "file": "intranda_goobi-viewer-core:src/main/java/io/goobi/viewer/servlets/ToolServlet.java"
            },
            {
                "code": "identifier = values[0];",
                "file": "intranda_goobi-viewer-core:src/main/java/io/goobi/viewer/servlets/ToolServlet.java"
            },
            {
                "code": "String[] values = request.getParameterMap().get(s);",
                "file": "intranda_goobi-viewer-core:src/main/java/io/goobi/viewer/servlets/ToolServlet.java"
            },
            {
                "code": "String[] values = request.getParameterMap().get(s);",
                "file": "intranda_goobi-viewer-core:src/main/java/io/goobi/viewer/servlets/ToolServlet.java"
            }
        ],
        "id": "AXOrTPhX5Ht-VZcMze0K"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().println(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00390.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00390.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00390.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest00390\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00390.java"
            }
        ],
        "id": "AXbioeFwzjh7vi1yWvHB"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(bar,obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00473.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00473.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00473.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00473.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest00473\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00473.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00473.java"
            }
        ],
        "id": "AXbioeDVzjh7vi1yWvG-"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(bar.toCharArray());",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00478.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00478.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00478.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00478.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest00478\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00478.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00478.java"
            }
        ],
        "id": "AXbiod-2zjh7vi1yWvG4"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().format(java.util.Locale.US,bar,obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00541.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00541.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00541.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00541.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00541.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00541.java"
            }
        ],
        "id": "AXbioeBXzjh7vi1yWvG9"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().print(bar.toCharArray());",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00802.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00802.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00802.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00802.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00802.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00802.java"
            }
        ],
        "id": "AXbioeAVzjh7vi1yWvG5"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(bar.toCharArray());",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01181.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01181.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01181.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01181.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01181.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01181.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01181.java"
            }
        ],
        "id": "AXbioeE7zjh7vi1yWvHA"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(java.util.Locale.US,\"Formatted like: %1$s and %2$s.\",obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01258.java"
            },
            {
                "code": "Object[] obj = { \"a\", bar};",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01258.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest01258\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01258.java"
            }
        ],
        "id": "AXbioeGIzjh7vi1yWvHC"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().format(java.util.Locale.US,bar,obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01418.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01418.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01418.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01418.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01418.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01418.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01418.java"
            }
        ],
        "id": "AXbioeAvzjh7vi1yWvG7"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(\"Formatted like: %1$s and %2$s.\",obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01662.java"
            },
            {
                "code": "Object[] obj = { bar, \"b\"};",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01662.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01662.java"
            }
        ],
        "id": "AXbioeEmzjh7vi1yWvG_"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01927.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01927.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01927.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01927.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01927.java"
            },
            {
                "code": "param = request.getHeader(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01927.java"
            }
        ],
        "id": "AXbioeAizjh7vi1yWvG6"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(bar.toCharArray());",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02326.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02326.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02326.java"
            },
            {
                "code": "bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(\norg.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02326.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02326.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02326.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02326.java"
            }
        ],
        "id": "AXbioeBDzjh7vi1yWvG8"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().format(java.util.Locale.US,param,obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00013.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00013.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00013.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00013.java"
            }
        ],
        "id": "AWyvhtM1dg2jiL0y7d2F"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().format(param,obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00014.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00014.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00014.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00014.java"
            }
        ],
        "id": "AWyvhtRjdg2jiL0y7d20"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(param,obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00030.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00030.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest00030\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00030.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00030.java"
            }
        ],
        "id": "AWyvhta5dg2jiL0y7d4Q"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(param.toCharArray(),0,length);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00036.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00036.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00036.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00036.java"
            }
        ],
        "id": "AWyvhtZ9dg2jiL0y7d4H"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(param, 0, length);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00041.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest00041\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00041.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AWyvhtIPdg2jiL0y7d1Y"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().format(param,obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00047.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00047.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00047.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00047.java"
            }
        ],
        "id": "AWyvhtLzdg2jiL0y7d17"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().print(param.toCharArray());",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00048.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00048.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00048.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00048.java"
            }
        ],
        "id": "AWyvhtIudg2jiL0y7d1d"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(\"Parameter value: \" + param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00049.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00049.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00049.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00049.java"
            }
        ],
        "id": "AWyvhtZCdg2jiL0y7d39"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().format(java.util.Locale.US,bar,obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00144.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00144.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00144.java"
            },
            {
                "code": "param = request.getHeader(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00144.java"
            }
        ],
        "id": "AWyvhtMddg2jiL0y7d2B"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().format(java.util.Locale.US,bar,obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00145.java"
            },
            {
                "code": "bar = (String)map17589.get(\"keyB-17589\"); // get it back out",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00145.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00145.java"
            },
            {
                "code": "param = request.getHeader(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00145.java"
            }
        ],
        "id": "AWyvhtLadg2jiL0y7d13"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().format(java.util.Locale.US,bar,obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00146.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00146.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00146.java"
            },
            {
                "code": "param = request.getHeader(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00146.java"
            }
        ],
        "id": "AWyvhtXJdg2jiL0y7d3r"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().format(\"Formatted like: %1$s and %2$s.\",obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00148.java"
            },
            {
                "code": "Object[] obj = { \"a\", bar };",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00148.java"
            },
            {
                "code": "param = request.getHeader(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00148.java"
            }
        ],
        "id": "AWyvhtLtdg2jiL0y7d16"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(java.util.Locale.US,\"Formatted like: %1$s and %2$s.\",obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00149.java"
            },
            {
                "code": "Object[] obj = { \"a\", bar};",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00149.java"
            },
            {
                "code": "param = request.getHeader(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00149.java"
            }
        ],
        "id": "AWyvhtNcdg2jiL0y7d2L"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(java.util.Locale.US,\"Formatted like: %1$s and %2$s.\",obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00150.java"
            },
            {
                "code": "Object[] obj = { \"a\", bar};",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00150.java"
            },
            {
                "code": "param = request.getHeader(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00150.java"
            }
        ],
        "id": "AWyvhtScdg2jiL0y7d29"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().println(bar.toCharArray());",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00152.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00152.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00152.java"
            },
            {
                "code": "param = request.getHeader(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00152.java"
            }
        ],
        "id": "AWyvhtIJdg2jiL0y7d1X"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().println(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00153.java"
            },
            {
                "code": "bar = (String)map96050.get(\"keyB-96050\"); // get it back out",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00153.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00153.java"
            },
            {
                "code": "param = request.getHeader(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00153.java"
            }
        ],
        "id": "AWyvhtXmdg2jiL0y7d3w"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().println(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00154.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00154.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00154.java"
            },
            {
                "code": "param = request.getHeader(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00154.java"
            }
        ],
        "id": "AWyvhtZ3dg2jiL0y7d4G"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().println(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00155.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00155.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00155.java"
            },
            {
                "code": "param = request.getHeader(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00155.java"
            }
        ],
        "id": "AWyvhtKHdg2jiL0y7d1r"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(bar.toCharArray());",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00156.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00156.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00156.java"
            },
            {
                "code": "param = request.getHeader(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00156.java"
            }
        ],
        "id": "AWyvhtO_dg2jiL0y7d2b"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00157.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00157.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00157.java"
            },
            {
                "code": "param = request.getHeader(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00157.java"
            }
        ],
        "id": "AWyvhtPddg2jiL0y7d2g"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().print(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00276.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00276.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00276.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00276.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00276.java"
            }
        ],
        "id": "AWyvhtVSdg2jiL0y7d3b"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().print(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00279.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00279.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00279.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00279.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00279.java"
            }
        ],
        "id": "AWyvhtUadg2jiL0y7d3S"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().print(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00280.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00280.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00280.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00280.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00280.java"
            }
        ],
        "id": "AWyvhtW9dg2jiL0y7d3p"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().println(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00284.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00284.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00284.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00284.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00284.java"
            }
        ],
        "id": "AWyvhtWudg2jiL0y7d3n"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(bar.toCharArray(),0,length);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00287.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00287.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00287.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00287.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00287.java"
            }
        ],
        "id": "AWyvhtN3dg2jiL0y7d2P"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00290.java"
            },
            {
                "code": "String bar = sbxyz73567.append(\"_SafeStuff\").toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00290.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00290.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00290.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00290.java"
            }
        ],
        "id": "AWyvhtRRdg2jiL0y7d2x"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00291.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00291.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00291.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00291.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00291.java"
            }
        ],
        "id": "AWyvhtWFdg2jiL0y7d3h"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(bar, 0, length);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00292.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00292.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00292.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00292.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00292.java"
            }
        ],
        "id": "AWyvhtaLdg2jiL0y7d4J"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(\"Parameter value: \" + bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00301.java"
            },
            {
                "code": "bar = (String)map16074.get(\"keyB-16074\"); // get it back out",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00301.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00301.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00301.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00301.java"
            }
        ],
        "id": "AWyvhtVHdg2jiL0y7d3Z"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().format(\"Formatted like: %1$s and %2$s.\",obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00376.java"
            },
            {
                "code": "Object[] obj = { \"a\", bar };",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00376.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest00376\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00376.java"
            }
        ],
        "id": "AWyvhtS6dg2jiL0y7d3C"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().format(bar,obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00378.java"
            },
            {
                "code": "String bar = sbxyz85125.append(\"_SafeStuff\").toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00378.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest00378\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00378.java"
            }
        ],
        "id": "AWyvhtHOdg2jiL0y7d1O"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().print(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00380.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00380.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest00380\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00380.java"
            }
        ],
        "id": "AWyvhtQYdg2jiL0y7d2o"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(java.util.Locale.US,bar,obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00382.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00382.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest00382\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00382.java"
            }
        ],
        "id": "AWyvhtJmdg2jiL0y7d1m"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(java.util.Locale.US,bar,obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00384.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00384.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest00384\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00384.java"
            }
        ],
        "id": "AWyvhtUzdg2jiL0y7d3W"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().println(bar.toCharArray());",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00387.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00387.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest00387\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00387.java"
            }
        ],
        "id": "AWyvhtQ_dg2jiL0y7d2u"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().println(bar.toCharArray());",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00388.java"
            },
            {
                "code": "String bar = sbxyz30382.append(\"_SafeStuff\").toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00388.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest00388\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00388.java"
            }
        ],
        "id": "AWyvhtWndg2jiL0y7d3m"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(bar.toCharArray(),0,length);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00392.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00392.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest00392\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00392.java"
            }
        ],
        "id": "AWyvhtJUdg2jiL0y7d1j"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().format(java.util.Locale.US,bar,obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00467.java"
            },
            {
                "code": "bar = (String)map88136.get(\"keyB-88136\"); // get it back out",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00467.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00467.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest00467\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00467.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00467.java"
            }
        ],
        "id": "AWyvhtYOdg2jiL0y7d32"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(\"Formatted like: %1$s and %2$s.\",obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00472.java"
            },
            {
                "code": "Object[] obj = { bar, \"b\"};",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00472.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00472.java"
            }
        ],
        "id": "AWyvhtJ8dg2jiL0y7d1p"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().println(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00475.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00475.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00475.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest00475\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00475.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00475.java"
            }
        ],
        "id": "AWyvhtMHdg2jiL0y7d1-"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().println(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00477.java"
            },
            {
                "code": "String bar = sbxyz54686.append(\"_SafeStuff\").toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00477.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00477.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest00477\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00477.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00477.java"
            }
        ],
        "id": "AWyvhtTUdg2jiL0y7d3G"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(\"Parameter value: \" + bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00492.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00492.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00492.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest00492\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00492.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00492.java"
            }
        ],
        "id": "AWyvhtMjdg2jiL0y7d2C"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().format(java.util.Locale.US,bar,obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00542.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00542.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00542.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00542.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00542.java"
            }
        ],
        "id": "AWyvhtTAdg2jiL0y7d3D"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().format(bar,obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00543.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00543.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00543.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00543.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00543.java"
            }
        ],
        "id": "AWyvhtKCdg2jiL0y7d1q"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().println(bar.toCharArray());",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00549.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00549.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00549.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00549.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00549.java"
            }
        ],
        "id": "AWyvhtSWdg2jiL0y7d28"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().println(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00551.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00551.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00551.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00551.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00551.java"
            }
        ],
        "id": "AWyvhtZIdg2jiL0y7d3-"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().println(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00552.java"
            },
            {
                "code": "bar = (String)map63597.get(\"keyB-63597\"); // get it back out",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00552.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00552.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00552.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00552.java"
            }
        ],
        "id": "AWyvhtYwdg2jiL0y7d36"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().println(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00554.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00554.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00554.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00554.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00554.java"
            }
        ],
        "id": "AWyvhtQEdg2jiL0y7d2m"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(bar.toCharArray());",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00555.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00555.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00555.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00555.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00555.java"
            }
        ],
        "id": "AWyvhtOmdg2jiL0y7d2X"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().print(bar.toCharArray());",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00642.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00642.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest00642\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00642.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AWyvhtZNdg2jiL0y7d3_"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().print(bar.toCharArray());",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00643.java"
            },
            {
                "code": "String bar = sbxyz31207.append(\"_SafeStuff\").toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00643.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest00643\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00643.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AWyvhtX6dg2jiL0y7d3z"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(java.util.Locale.US,bar,obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00645.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00645.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest00645\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00645.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AWyvhtQkdg2jiL0y7d2q"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(bar, 0, length);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00651.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00651.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest00651\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00651.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AWyvhtLSdg2jiL0y7d12"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(\"Parameter value: \" + bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00656.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00656.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest00656\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00656.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AWyvhtTxdg2jiL0y7d3L"
    },
    {
        "taints": [
            {
                "code": "out.format(java.util.Locale.US,\"Formatted like: %1$s and %2$s.\",obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00711.java"
            },
            {
                "code": "Object[] obj = { \"a\", bar };",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00711.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest00711\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00711.java"
            }
        ],
        "id": "AWyvhtSudg2jiL0y7d3A"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(java.util.Locale.US,bar,obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00719.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00719.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00719.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest00719\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00719.java"
            }
        ],
        "id": "AWyvhtY2dg2jiL0y7d37"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(java.util.Locale.US,bar,obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00720.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00720.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00720.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest00720\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00720.java"
            }
        ],
        "id": "AWyvhtY8dg2jiL0y7d38"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(\"Formatted like: %1$s and %2$s.\",obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00721.java"
            },
            {
                "code": "Object[] obj = { bar, \"b\"};",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00721.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest00721\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00721.java"
            }
        ],
        "id": "AWyvhtTadg2jiL0y7d3H"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().println(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00724.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00724.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00724.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest00724\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00724.java"
            }
        ],
        "id": "AWyvhtNDdg2jiL0y7d2H"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().println(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00727.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00727.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00727.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest00727\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00727.java"
            }
        ],
        "id": "AWyvhtKjdg2jiL0y7d1v"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().println(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00728.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00728.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00728.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest00728\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00728.java"
            }
        ],
        "id": "AWyvhtOxdg2jiL0y7d2Z"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(bar.toCharArray());",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00729.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00729.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00729.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest00729\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00729.java"
            }
        ],
        "id": "AWyvhtPLdg2jiL0y7d2d"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().format(\"Formatted like: %1$s and %2$s.\",obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00800.java"
            },
            {
                "code": "Object[] obj = { \"a\", bar };",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00800.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00800.java"
            }
        ],
        "id": "AWyvhtUOdg2jiL0y7d3Q"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().format(bar,obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00801.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00801.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00801.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00801.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00801.java"
            }
        ],
        "id": "AWyvhtQydg2jiL0y7d2s"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().print(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00803.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00803.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00803.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00803.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00803.java"
            }
        ],
        "id": "AWyvhtW3dg2jiL0y7d3o"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().print(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00804.java"
            },
            {
                "code": "String bar = sbxyz12823.append(\"_SafeStuff\").toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00804.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00804.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00804.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00804.java"
            }
        ],
        "id": "AWyvhtaidg2jiL0y7d4M"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(java.util.Locale.US,bar,obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00806.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00806.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00806.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00806.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00806.java"
            }
        ],
        "id": "AWyvhtJCdg2jiL0y7d1g"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(bar,obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00809.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00809.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00809.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00809.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00809.java"
            }
        ],
        "id": "AWyvhtYodg2jiL0y7d35"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().println(bar.toCharArray());",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00810.java"
            },
            {
                "code": "String bar = sbxyz36624.append(\"_SafeStuff\").toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00810.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00810.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00810.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00810.java"
            }
        ],
        "id": "AWyvhtK1dg2jiL0y7d1y"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().println(bar.toCharArray());",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00811.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00811.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00811.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00811.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00811.java"
            }
        ],
        "id": "AWyvhta_dg2jiL0y7d4R"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(\"Parameter value: \" + bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00822.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00822.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00822.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00822.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest00822.java"
            }
        ],
        "id": "AWyvhtQ5dg2jiL0y7d2t"
    },
    {
        "taints": [
            {
                "code": "out.format(java.util.Locale.US,\"Formatted like: %1$s and %2$s.\",obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01046.java"
            },
            {
                "code": "Object[] obj = { \"a\", bar };",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01046.java"
            },
            {
                "code": "param = request.getHeader(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01046.java"
            }
        ],
        "id": "AWyvhtPFdg2jiL0y7d2c"
    },
    {
        "taints": [
            {
                "code": "out.format(java.util.Locale.US,\"Formatted like: %1$s and %2$s.\",obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01047.java"
            },
            {
                "code": "Object[] obj = { \"a\", bar };",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01047.java"
            },
            {
                "code": "param = request.getHeader(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01047.java"
            }
        ],
        "id": "AWyvhtJydg2jiL0y7d1o"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().format(\"Formatted like: %1$s and %2$s.\",obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01049.java"
            },
            {
                "code": "Object[] obj = { \"a\", bar };",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01049.java"
            },
            {
                "code": "param = request.getHeader(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01049.java"
            }
        ],
        "id": "AWyvhtRFdg2jiL0y7d2v"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().print(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01050.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01050.java"
            },
            {
                "code": "String bar = sbxyz75528.append(\"_SafeStuff\").toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01050.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01050.java"
            },
            {
                "code": "param = request.getHeader(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01050.java"
            }
        ],
        "id": "AWyvhtVcdg2jiL0y7d3c"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().println(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01055.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01055.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01055.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01055.java"
            },
            {
                "code": "param = request.getHeader(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01055.java"
            }
        ],
        "id": "AWyvhtMBdg2jiL0y7d19"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(bar.toCharArray(),0,length);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01056.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01056.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01056.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01056.java"
            },
            {
                "code": "param = request.getHeader(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01056.java"
            }
        ],
        "id": "AWyvhtSKdg2jiL0y7d26"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01057.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01057.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01057.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01057.java"
            },
            {
                "code": "param = request.getHeader(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01057.java"
            }
        ],
        "id": "AWyvhtYCdg2jiL0y7d30"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().format(java.util.Locale.US,bar,obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01171.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01171.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01171.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01171.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01171.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01171.java"
            }
        ],
        "id": "AWyvhtRudg2jiL0y7d22"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().format(\"Formatted like: %1$s and %2$s.\",obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01172.java"
            },
            {
                "code": "Object[] obj = { \"a\", bar };",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01172.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01172.java"
            }
        ],
        "id": "AWyvhtNLdg2jiL0y7d2I"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().print(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01173.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01173.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01173.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01173.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01173.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01173.java"
            }
        ],
        "id": "AWyvhtMPdg2jiL0y7d1_"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().print(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01174.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01174.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01174.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01174.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01174.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01174.java"
            }
        ],
        "id": "AWyvhtZfdg2jiL0y7d4C"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(java.util.Locale.US,\"Formatted like: %1$s and %2$s.\",obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01177.java"
            },
            {
                "code": "Object[] obj = { \"a\", bar};",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01177.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01177.java"
            }
        ],
        "id": "AWyvhtP5dg2jiL0y7d2k"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().println(bar.toCharArray());",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01178.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01178.java"
            },
            {
                "code": "String bar = sbxyz69428.append(\"_SafeStuff\").toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01178.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01178.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01178.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01178.java"
            }
        ],
        "id": "AWyvhtTOdg2jiL0y7d3F"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().format(bar,obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01253.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01253.java"
            },
            {
                "code": "bar = (String)map15481.get(\"keyB-15481\"); // get it back out",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01253.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest01253\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01253.java"
            }
        ],
        "id": "AWyvhtX0dg2jiL0y7d3y"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().print(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01257.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01257.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01257.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest01257\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01257.java"
            }
        ],
        "id": "AWyvhtSidg2jiL0y7d2-"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(\"Formatted like: %1$s and %2$s.\",obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01259.java"
            },
            {
                "code": "Object[] obj = { bar, \"b\"};",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01259.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest01259\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01259.java"
            }
        ],
        "id": "AWyvhtHIdg2jiL0y7d1N"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().println(bar.toCharArray());",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01262.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01262.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01262.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest01262\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01262.java"
            }
        ],
        "id": "AWyvhtNidg2jiL0y7d2M"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().println(bar.toCharArray());",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01263.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01263.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01263.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest01263\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01263.java"
            }
        ],
        "id": "AWyvhtJPdg2jiL0y7d1i"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01267.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01267.java"
            },
            {
                "code": "bar = (String)map53210.get(\"keyB-53210\"); // get it back out",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01267.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest01267\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01267.java"
            }
        ],
        "id": "AWyvhtNRdg2jiL0y7d2J"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(\"Parameter value: \" + bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01284.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01284.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01284.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest01284\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01284.java"
            }
        ],
        "id": "AWyvhtHjdg2jiL0y7d1R"
    },
    {
        "taints": [
            {
                "code": "out.format(java.util.Locale.US,\"Formatted like: %1$s and %2$s.\",obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01335.java"
            },
            {
                "code": "Object[] obj = { \"a\", bar };",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01335.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01335.java"
            }
        ],
        "id": "AWyvhtKZdg2jiL0y7d1u"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().format(bar,obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01337.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01337.java"
            },
            {
                "code": "String bar = sbxyz24804.append(\"_SafeStuff\").toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01337.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01337.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest01337\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01337.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01337.java"
            }
        ],
        "id": "AWyvhtUUdg2jiL0y7d3R"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().println(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01346.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01346.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01346.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01346.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest01346\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01346.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01346.java"
            }
        ],
        "id": "AWyvhtPzdg2jiL0y7d2j"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().println(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01349.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01349.java"
            },
            {
                "code": "String bar = sbxyz63030.append(\"_SafeStuff\").toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01349.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01349.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest01349\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01349.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01349.java"
            }
        ],
        "id": "AWyvhtacdg2jiL0y7d4L"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(bar.toCharArray(),0,length);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01350.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01350.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01350.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01350.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest01350\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01350.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01350.java"
            }
        ],
        "id": "AWyvhtWLdg2jiL0y7d3i"
    },
    {
        "taints": [
            {
                "code": "out.format(java.util.Locale.US,\"Formatted like: %1$s and %2$s.\",obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01417.java"
            },
            {
                "code": "Object[] obj = { \"a\", bar };",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01417.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01417.java"
            }
        ],
        "id": "AWyvhtPRdg2jiL0y7d2e"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(\"Formatted like: %1$s and %2$s.\",obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01423.java"
            },
            {
                "code": "Object[] obj = { bar, \"b\"};",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01423.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01423.java"
            }
        ],
        "id": "AWyvhtS0dg2jiL0y7d3B"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(\"Formatted like: %1$s and %2$s.\",obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01424.java"
            },
            {
                "code": "Object[] obj = { bar, \"b\"};",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01424.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01424.java"
            }
        ],
        "id": "AWyvhtQqdg2jiL0y7d2r"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().println(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01426.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01426.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01426.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01426.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01426.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01426.java"
            }
        ],
        "id": "AWyvhtSodg2jiL0y7d2_"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().println(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01427.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01427.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01427.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01427.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01427.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01427.java"
            }
        ],
        "id": "AWyvhtWRdg2jiL0y7d3j"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(bar.toCharArray());",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01428.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01428.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01428.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01428.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01428.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01428.java"
            }
        ],
        "id": "AWyvhtHudg2jiL0y7d1T"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(bar.toCharArray());",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01429.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01429.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01429.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01429.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01429.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01429.java"
            }
        ],
        "id": "AWyvhtOUdg2jiL0y7d2U"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(\"Parameter value: \" + bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01437.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01437.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01437.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01437.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01437.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01437.java"
            }
        ],
        "id": "AWyvhtRXdg2jiL0y7d2y"
    },
    {
        "taints": [
            {
                "code": "out.format(java.util.Locale.US,\"Formatted like: %1$s and %2$s.\",obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01505.java"
            },
            {
                "code": "Object[] obj = { \"a\", bar };",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01505.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AWyvhtYgdg2jiL0y7d34"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().format(bar,obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01506.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01506.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01506.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest01506\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01506.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AWyvhtUtdg2jiL0y7d3V"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().format(bar,obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01507.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01507.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01507.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest01507\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01507.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AWyvhtIXdg2jiL0y7d1Z"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(\"Formatted like: %1$s and %2$s.\",obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01510.java"
            },
            {
                "code": "Object[] obj = { bar, \"b\"};",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01510.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AWyvhtM6dg2jiL0y7d2G"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(\"Formatted like: %1$s and %2$s.\",obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01511.java"
            },
            {
                "code": "Object[] obj = { bar, \"b\"};",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01511.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AWyvhtIddg2jiL0y7d1a"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(bar,obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01512.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01512.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01512.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest01512\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01512.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AWyvhtaudg2jiL0y7d4O"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(\"Parameter value: \" + bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01525.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01525.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01525.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest01525\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01525.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AWyvhtHddg2jiL0y7d1Q"
    },
    {
        "taints": [
            {
                "code": "out.format(java.util.Locale.US,\"Formatted like: %1$s and %2$s.\",obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01583.java"
            },
            {
                "code": "Object[] obj = { \"a\", bar };",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01583.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest01583\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01583.java"
            }
        ],
        "id": "AWyvhtMpdg2jiL0y7d2D"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().format(java.util.Locale.US,bar,obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01584.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01584.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01584.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01584.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest01584\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01584.java"
            }
        ],
        "id": "AWyvhtRLdg2jiL0y7d2w"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(java.util.Locale.US,bar,obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01587.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01587.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01587.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01587.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest01587\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01587.java"
            }
        ],
        "id": "AWyvhtOadg2jiL0y7d2V"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(\"Formatted like: %1$s and %2$s.\",obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01589.java"
            },
            {
                "code": "Object[] obj = { bar, \"b\"};",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01589.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest01589\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01589.java"
            }
        ],
        "id": "AWyvhtLndg2jiL0y7d15"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(bar,obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01590.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01590.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01590.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01590.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest01590\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01590.java"
            }
        ],
        "id": "AWyvhtOgdg2jiL0y7d2W"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().println(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01592.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01592.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01592.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01592.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest01592\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01592.java"
            }
        ],
        "id": "AWyvhtV3dg2jiL0y7d3f"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().println(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01594.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01594.java"
            },
            {
                "code": "String bar = sbxyz51154.append(\"_SafeStuff\").toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01594.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01594.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest01594\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01594.java"
            }
        ],
        "id": "AWyvhtNXdg2jiL0y7d2K"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(bar.toCharArray(),0,length);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01597.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01597.java"
            },
            {
                "code": "String bar = sbxyz81751.append(\"_SafeStuff\").toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01597.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01597.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest01597\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01597.java"
            }
        ],
        "id": "AWyvhtXudg2jiL0y7d3x"
    },
    {
        "taints": [
            {
                "code": "out.format(java.util.Locale.US,\"Formatted like: %1$s and %2$s.\",obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01657.java"
            },
            {
                "code": "Object[] obj = { \"a\", bar };",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01657.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01657.java"
            }
        ],
        "id": "AWyvhtLGdg2jiL0y7d10"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().format(\"Formatted like: %1$s and %2$s.\",obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01658.java"
            },
            {
                "code": "Object[] obj = { \"a\", bar };",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01658.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01658.java"
            }
        ],
        "id": "AWyvhtI2dg2jiL0y7d1e"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().print(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01660.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01660.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01660.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01660.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01660.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01660.java"
            }
        ],
        "id": "AWyvhtO6dg2jiL0y7d2a"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().println(bar.toCharArray());",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01665.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01665.java"
            },
            {
                "code": "String bar = sbxyz55941.append(\"_SafeStuff\").toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01665.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01665.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01665.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01665.java"
            }
        ],
        "id": "AWyvhtJadg2jiL0y7d1k"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().println(bar.toCharArray());",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01666.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01666.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01666.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01666.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01666.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01666.java"
            }
        ],
        "id": "AWyvhtP-dg2jiL0y7d2l"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().println(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01667.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01667.java"
            },
            {
                "code": "bar = (String)map96771.get(\"keyB-96771\"); // get it back out",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01667.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01667.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01667.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01667.java"
            }
        ],
        "id": "AWyvhtTldg2jiL0y7d3J"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(bar.toCharArray());",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01670.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01670.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01670.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01670.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01670.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01670.java"
            }
        ],
        "id": "AWyvhtaTdg2jiL0y7d4K"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(java.util.Locale.US,bar,obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01919.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01919.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01919.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01919.java"
            },
            {
                "code": "param = request.getHeader(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01919.java"
            }
        ],
        "id": "AWyvhtOIdg2jiL0y7d2S"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(\"Formatted like: %1$s and %2$s.\",obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01920.java"
            },
            {
                "code": "Object[] obj = { bar, \"b\"};",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01920.java"
            },
            {
                "code": "param = request.getHeader(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01920.java"
            }
        ],
        "id": "AWyvhtIDdg2jiL0y7d1W"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(\"Formatted like: %1$s and %2$s.\",obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01921.java"
            },
            {
                "code": "Object[] obj = { bar, \"b\"};",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01921.java"
            },
            {
                "code": "param = request.getHeader(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01921.java"
            }
        ],
        "id": "AWyvhtL7dg2jiL0y7d18"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(bar,obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01922.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01922.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01922.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01922.java"
            },
            {
                "code": "param = request.getHeader(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01922.java"
            }
        ],
        "id": "AWyvhtRddg2jiL0y7d2z"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(bar,obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01923.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01923.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01923.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01923.java"
            },
            {
                "code": "param = request.getHeader(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01923.java"
            }
        ],
        "id": "AWyvhtXDdg2jiL0y7d3q"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().println(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01925.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01925.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01925.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01925.java"
            },
            {
                "code": "param = request.getHeader(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01925.java"
            }
        ],
        "id": "AWyvhtPjdg2jiL0y7d2h"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().println(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01926.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01926.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01926.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01926.java"
            },
            {
                "code": "param = request.getHeader(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest01926.java"
            }
        ],
        "id": "AWyvhtOsdg2jiL0y7d2Y"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().print(bar.toCharArray());",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02046.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02046.java"
            },
            {
                "code": "bar = (String)map81510.get(\"keyB-81510\"); // get it back out",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02046.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02046.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02046.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02046.java"
            }
        ],
        "id": "AWyvhtN9dg2jiL0y7d2Q"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().print(bar.toCharArray());",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02047.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02047.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02047.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02047.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02047.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02047.java"
            }
        ],
        "id": "AWyvhtQedg2jiL0y7d2p"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(java.util.Locale.US,\"Formatted like: %1$s and %2$s.\",obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02050.java"
            },
            {
                "code": "Object[] obj = { \"a\", bar};",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02050.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02050.java"
            }
        ],
        "id": "AWyvhtLfdg2jiL0y7d14"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(\"Formatted like: %1$s and %2$s.\",obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02051.java"
            },
            {
                "code": "Object[] obj = { bar, \"b\"};",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02051.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02051.java"
            }
        ],
        "id": "AWyvhtaFdg2jiL0y7d4I"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().println(bar.toCharArray());",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02055.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02055.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02055.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02055.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02055.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02055.java"
            }
        ],
        "id": "AWyvhtNudg2jiL0y7d2O"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().println(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02056.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02056.java"
            },
            {
                "code": "bar = (String)map88820.get(\"keyB-88820\"); // get it back out",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02056.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02056.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02056.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02056.java"
            }
        ],
        "id": "AWyvhtTrdg2jiL0y7d3K"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(bar, 0, length);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02057.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02057.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02057.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02057.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02057.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02057.java"
            }
        ],
        "id": "AWyvhta0dg2jiL0y7d4P"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().format(\"Formatted like: %1$s and %2$s.\",obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02123.java"
            },
            {
                "code": "Object[] obj = { \"a\", bar };",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02123.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest02123\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02123.java"
            }
        ],
        "id": "AWyvhtWfdg2jiL0y7d3l"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().print(bar.toCharArray());",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02124.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02124.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02124.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest02124\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02124.java"
            }
        ],
        "id": "AWyvhtRodg2jiL0y7d21"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().print(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02127.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02127.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02127.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest02127\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02127.java"
            }
        ],
        "id": "AWyvhtXbdg2jiL0y7d3u"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().print(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02128.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02128.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02128.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest02128\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02128.java"
            }
        ],
        "id": "AWyvhtZrdg2jiL0y7d4E"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(java.util.Locale.US,\"Formatted like: %1$s and %2$s.\",obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02130.java"
            },
            {
                "code": "Object[] obj = { \"a\", bar};",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02130.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest02130\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02130.java"
            }
        ],
        "id": "AWyvhtXhdg2jiL0y7d3v"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(java.util.Locale.US,bar,obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02131.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02131.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02131.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest02131\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02131.java"
            }
        ],
        "id": "AWyvhtSQdg2jiL0y7d27"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().println(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02133.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02133.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02133.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest02133\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02133.java"
            }
        ],
        "id": "AWyvhtHUdg2jiL0y7d1P"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(bar.toCharArray());",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02134.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02134.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02134.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest02134\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02134.java"
            }
        ],
        "id": "AWyvhtXVdg2jiL0y7d3t"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(bar, 0, length);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02136.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02136.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02136.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest02136\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02136.java"
            }
        ],
        "id": "AWyvhtKpdg2jiL0y7d1w"
    },
    {
        "taints": [
            {
                "code": "out.format(java.util.Locale.US,\"Formatted like: %1$s and %2$s.\",obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02221.java"
            },
            {
                "code": "Object[] obj = { \"a\", bar };",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02221.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02221.java"
            }
        ],
        "id": "AWyvhtR_dg2jiL0y7d24"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().format(\"Formatted like: %1$s and %2$s.\",obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02223.java"
            },
            {
                "code": "Object[] obj = { \"a\", bar };",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02223.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02223.java"
            }
        ],
        "id": "AWyvhtQOdg2jiL0y7d2n"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().format(\"Formatted like: %1$s and %2$s.\",obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02224.java"
            },
            {
                "code": "Object[] obj = { \"a\", bar };",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02224.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02224.java"
            }
        ],
        "id": "AWyvhtUCdg2jiL0y7d3O"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().format(bar,obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02225.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02225.java"
            },
            {
                "code": "bar = (String)map73885.get(\"keyB-73885\"); // get it back out",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02225.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02225.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest02225\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02225.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02225.java"
            }
        ],
        "id": "AWyvhtYadg2jiL0y7d33"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().print(bar.toCharArray());",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02227.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02227.java"
            },
            {
                "code": "String bar = sbxyz39187.append(\"_SafeStuff\").toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02227.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02227.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest02227\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02227.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02227.java"
            }
        ],
        "id": "AWyvhtK7dg2jiL0y7d1z"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().print(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02228.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02228.java"
            },
            {
                "code": "String bar = sbxyz60124.append(\"_SafeStuff\").toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02228.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02228.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest02228\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02228.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02228.java"
            }
        ],
        "id": "AWyvhtR3dg2jiL0y7d23"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(java.util.Locale.US,\"Formatted like: %1$s and %2$s.\",obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02230.java"
            },
            {
                "code": "Object[] obj = { \"a\", bar};",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02230.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02230.java"
            }
        ],
        "id": "AWyvhtHCdg2jiL0y7d1M"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(bar,obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02232.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02232.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02232.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02232.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest02232\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02232.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02232.java"
            }
        ],
        "id": "AWyvhtTIdg2jiL0y7d3E"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(bar,obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02234.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02234.java"
            },
            {
                "code": "String bar = sbxyz86132.append(\"_SafeStuff\").toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02234.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02234.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest02234\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02234.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02234.java"
            }
        ],
        "id": "AWyvhtKvdg2jiL0y7d1x"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02241.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02241.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02241.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02241.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest02241\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02241.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02241.java"
            }
        ],
        "id": "AWyvhtIpdg2jiL0y7d1c"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().format(java.util.Locale.US,bar,obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02314.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02314.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02314.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02314.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02314.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02314.java"
            }
        ],
        "id": "AWyvhtPrdg2jiL0y7d2i"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().format(\"Formatted like: %1$s and %2$s.\",obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02315.java"
            },
            {
                "code": "Object[] obj = { \"a\", bar };",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02315.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02315.java"
            }
        ],
        "id": "AWyvhtVBdg2jiL0y7d3Y"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().format(bar,obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02316.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02316.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02316.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02316.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02316.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02316.java"
            }
        ],
        "id": "AWyvhtIjdg2jiL0y7d1b"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().format(bar,obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02317.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02317.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02317.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02317.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02317.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02317.java"
            }
        ],
        "id": "AWyvhtV-dg2jiL0y7d3g"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(\"Formatted like: %1$s and %2$s.\",obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02322.java"
            },
            {
                "code": "Object[] obj = { bar, \"b\"};",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02322.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02322.java"
            }
        ],
        "id": "AWyvhtUIdg2jiL0y7d3P"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(\"Formatted like: %1$s and %2$s.\",obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02323.java"
            },
            {
                "code": "Object[] obj = { bar, \"b\"};",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02323.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02323.java"
            }
        ],
        "id": "AWyvhtJgdg2jiL0y7d1l"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(\"Formatted like: %1$s and %2$s.\",obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02324.java"
            },
            {
                "code": "Object[] obj = { bar, \"b\"};",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02324.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02324.java"
            }
        ],
        "id": "AWyvhtZldg2jiL0y7d4D"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(bar.toCharArray(),0,length);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02327.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02327.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02327.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02327.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02327.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02327.java"
            }
        ],
        "id": "AWyvhtH1dg2jiL0y7d1U"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(bar.toCharArray(),0,length);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02328.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02328.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02328.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02328.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02328.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02328.java"
            }
        ],
        "id": "AWyvhtUgdg2jiL0y7d3T"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02332.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02332.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02332.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02332.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02332.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02332.java"
            }
        ],
        "id": "AWyvhtT9dg2jiL0y7d3N"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().format(\"Formatted like: %1$s and %2$s.\",obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02395.java"
            },
            {
                "code": "Object[] obj = { \"a\", bar };",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02395.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AWyvhtLMdg2jiL0y7d11"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().format(bar,obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02397.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02397.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02397.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest02397\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02397.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AWyvhtZTdg2jiL0y7d4A"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().print(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02399.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02399.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02399.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest02399\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02399.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AWyvhtOCdg2jiL0y7d2R"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(java.util.Locale.US,bar,obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02402.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02402.java"
            },
            {
                "code": "bar = (String)map55396.get(\"keyB-55396\"); // get it back out",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02402.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest02402\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02402.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AWyvhtZxdg2jiL0y7d4F"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().println(bar.toCharArray());",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02405.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02405.java"
            },
            {
                "code": "String bar = thing.doSomething(param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02405.java"
            },
            {
                "code": "String r = new StringBuilder(i).toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "public String doSomething(String i) {",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "@Override",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/Thing2.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest02405\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02405.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AWyvhtOOdg2jiL0y7d2T"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().println(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02407.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02407.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02407.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest02407\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02407.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AWyvhtWYdg2jiL0y7d3k"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(bar, 0, length);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02409.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02409.java"
            },
            {
                "code": "bar = valuesList.get(0); // get the param value",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02409.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest02409\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02409.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AWyvhtKNdg2jiL0y7d1s"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(bar, 0, length);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02410.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02410.java"
            },
            {
                "code": "String bar = sbxyz69687.append(\"_SafeStuff\").toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02410.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest02410\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02410.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AWyvhtKTdg2jiL0y7d1t"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().print(bar.toCharArray());",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02480.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02480.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02480.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02480.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest02480\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02480.java"
            }
        ],
        "id": "AWyvhtNodg2jiL0y7d2N"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().print(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02483.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02483.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02483.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02483.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest02483\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02483.java"
            }
        ],
        "id": "AWyvhtSEdg2jiL0y7d25"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(java.util.Locale.US,\"Formatted like: %1$s and %2$s.\",obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02486.java"
            },
            {
                "code": "Object[] obj = { \"a\", bar};",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02486.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest02486\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02486.java"
            }
        ],
        "id": "AWyvhtU7dg2jiL0y7d3X"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(\"Formatted like: %1$s and %2$s.\",obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02487.java"
            },
            {
                "code": "Object[] obj = { bar, \"b\"};",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02487.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest02487\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02487.java"
            }
        ],
        "id": "AWyvhtXPdg2jiL0y7d3s"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(bar,obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02489.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02489.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02489.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02489.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest02489\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02489.java"
            }
        ],
        "id": "AWyvhtMXdg2jiL0y7d2A"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(bar.toCharArray(),0,length);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02493.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02493.java"
            },
            {
                "code": "bar = (String)map4720.get(\"keyB-4720\"); // get it back out",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02493.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02493.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest02493\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02493.java"
            }
        ],
        "id": "AWyvhtT3dg2jiL0y7d3M"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02494.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02494.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02494.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02494.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest02494\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02494.java"
            }
        ],
        "id": "AWyvhtYIdg2jiL0y7d31"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().format(java.util.Locale.US,bar,obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02578.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02578.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02578.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02578.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02578.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02578.java"
            }
        ],
        "id": "AWyvhtH7dg2jiL0y7d1V"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().format(bar,obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02580.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02580.java"
            },
            {
                "code": "String bar = sbxyz1658.append(\"_SafeStuff\").toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02580.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02580.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02580.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02580.java"
            }
        ],
        "id": "AWyvhtaodg2jiL0y7d4N"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().print(bar.toCharArray());",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02582.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02582.java"
            },
            {
                "code": "String bar = sbxyz18070.append(\"_SafeStuff\").toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02582.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02582.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02582.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02582.java"
            }
        ],
        "id": "AWyvhtJsdg2jiL0y7d1n"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().print(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02583.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02583.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02583.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02583.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02583.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02583.java"
            }
        ],
        "id": "AWyvhtPXdg2jiL0y7d2f"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().print(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02584.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02584.java"
            },
            {
                "code": "String bar = sbxyz36210.append(\"_SafeStuff\").toString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02584.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02584.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02584.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02584.java"
            }
        ],
        "id": "AWyvhtUldg2jiL0y7d3U"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().print(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02585.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02585.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02585.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02585.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02585.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02585.java"
            }
        ],
        "id": "AWyvhtI8dg2jiL0y7d1f"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().print(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02586.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02586.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02586.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02586.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02586.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02586.java"
            }
        ],
        "id": "AWyvhtVldg2jiL0y7d3d"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(\"Formatted like: %1$s and %2$s.\",obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02591.java"
            },
            {
                "code": "Object[] obj = { bar, \"b\"};",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02591.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02591.java"
            }
        ],
        "id": "AWyvhtTgdg2jiL0y7d3I"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(\"Formatted like: %1$s and %2$s.\",obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02592.java"
            },
            {
                "code": "Object[] obj = { bar, \"b\"};",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02592.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02592.java"
            }
        ],
        "id": "AWyvhtJJdg2jiL0y7d1h"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().println(bar.toCharArray());",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02595.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02595.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02595.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02595.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02595.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02595.java"
            }
        ],
        "id": "AWyvhtMvdg2jiL0y7d2E"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().println(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02597.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02597.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02597.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02597.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02597.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02597.java"
            }
        ],
        "id": "AWyvhtVMdg2jiL0y7d3a"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().println(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02598.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02598.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02598.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02598.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02598.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02598.java"
            }
        ],
        "id": "AWyvhtZZdg2jiL0y7d4B"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(bar.toCharArray(),0,length);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02600.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02600.java"
            },
            {
                "code": "bar = (7*42) - num > 200 ? \"This should never happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02600.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02600.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02600.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02600.java"
            }
        ],
        "id": "AWyvhtHpdg2jiL0y7d1S"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(\"Parameter value: \" + bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02608.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02608.java"
            },
            {
                "code": "String bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02608.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02608.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02608.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/issueexpected/BenchmarkTest02608.java"
            }
        ],
        "id": "AWyvhtVqdg2jiL0y7d3e"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(java.util.Locale.US,bar,obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest00281.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest00281.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest00281.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest00281.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest00281.java"
            }
        ],
        "id": "AWyvhtiKdg2jiL0y7d4n"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest00393.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest00393.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest00393\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest00393.java"
            }
        ],
        "id": "AWyvhtj-dg2jiL0y7d46"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().format(bar,obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest00469.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest00469.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest00469.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest00469\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest00469.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest00469.java"
            }
        ],
        "id": "AWyvhtkPdg2jiL0y7d49"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().println(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest00476.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest00476.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest00476.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest00476\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest00476.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest00476.java"
            }
        ],
        "id": "AWyvhtjtdg2jiL0y7d43"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().println(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest00553.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest00553.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest00553.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest00553.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest00553.java"
            }
        ],
        "id": "AWyvhtkEdg2jiL0y7d47"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest00556.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest00556.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest00556.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest00556.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest00556.java"
            }
        ],
        "id": "AWyvhtk-dg2jiL0y7d5F"
    },
    {
        "taints": [
            {
                "code": "out.format(java.util.Locale.US,\"Formatted like: %1$s and %2$s.\",obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest00712.java"
            },
            {
                "code": "Object[] obj = { \"a\", bar };",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest00712.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest00712\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest00712.java"
            }
        ],
        "id": "AWyvhtl_dg2jiL0y7d5Q"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(bar,obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest00723.java"
            },
            {
                "code": "else bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest00723.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest00723.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest00723\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest00723.java"
            }
        ],
        "id": "AWyvhti-dg2jiL0y7d4v"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().println(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest00812.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest00812.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest00812.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest00812.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest00812.java"
            }
        ],
        "id": "AWyvhtc2dg2jiL0y7d4V"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(bar, 0, length);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest00813.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest00813.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest00813.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest00813.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest00813.java"
            }
        ],
        "id": "AWyvhte-dg2jiL0y7d4c"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(\"Formatted like: %1$s and %2$s.\",obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01051.java"
            },
            {
                "code": "Object[] obj = { bar, \"b\"};",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01051.java"
            },
            {
                "code": "param = request.getHeader(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01051.java"
            }
        ],
        "id": "AWyvhtisdg2jiL0y7d4s"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().println(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01053.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01053.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01053.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01053.java"
            },
            {
                "code": "param = request.getHeader(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01053.java"
            }
        ],
        "id": "AWyvhtkKdg2jiL0y7d48"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(java.util.Locale.US,\"Formatted like: %1$s and %2$s.\",obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01176.java"
            },
            {
                "code": "Object[] obj = { \"a\", bar};",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01176.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01176.java"
            }
        ],
        "id": "AWyvhtiydg2jiL0y7d4t"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().println(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01180.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01180.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01180.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01180.java"
            },
            {
                "code": "param = headers.nextElement(); // just grab first element",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01180.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01180.java"
            }
        ],
        "id": "AWyvhtiWdg2jiL0y7d4p"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().format(java.util.Locale.US,bar,obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01252.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01252.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01252.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest01252\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01252.java"
            }
        ],
        "id": "AWyvhtiddg2jiL0y7d4q"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().print(bar.toCharArray());",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01256.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01256.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01256.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest01256\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01256.java"
            }
        ],
        "id": "AWyvhtjPdg2jiL0y7d4y"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(bar.toCharArray(),0,length);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01265.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01265.java"
            },
            {
                "code": "else bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01265.java"
            },
            {
                "code": "String param = request.getParameter(\"BenchmarkTest01265\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01265.java"
            }
        ],
        "id": "AWyvhtlndg2jiL0y7d5M"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().format(java.util.Locale.US,bar,obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01336.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01336.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01336.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01336.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest01336\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01336.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01336.java"
            }
        ],
        "id": "AWyvhtlKdg2jiL0y7d5H"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(java.util.Locale.US,bar,obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01344.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01344.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01344.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01344.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest01344\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01344.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01344.java"
            }
        ],
        "id": "AWyvhtlhdg2jiL0y7d5L"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().println(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01345.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01345.java"
            },
            {
                "code": "else bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01345.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01345.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest01345\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01345.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01345.java"
            }
        ],
        "id": "AWyvhtkVdg2jiL0y7d4-"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().format(\"Formatted like: %1$s and %2$s.\",obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01419.java"
            },
            {
                "code": "Object[] obj = { \"a\", bar };",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01419.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01419.java"
            }
        ],
        "id": "AWyvhtkzdg2jiL0y7d5D"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(java.util.Locale.US,\"Formatted like: %1$s and %2$s.\",obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01421.java"
            },
            {
                "code": "Object[] obj = { \"a\", bar};",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01421.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01421.java"
            }
        ],
        "id": "AWyvhtiQdg2jiL0y7d4o"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().println(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01425.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01425.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01425.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01425.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01425.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01425.java"
            }
        ],
        "id": "AWyvhtjKdg2jiL0y7d4x"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().print(bar.toCharArray());",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01508.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01508.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01508.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest01508\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01508.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AWyvhtjydg2jiL0y7d44"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(bar.toCharArray());",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01513.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01513.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01513.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest01513\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01513.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AWyvhtlQdg2jiL0y7d5I"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(java.util.Locale.US,bar,obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01588.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01588.java"
            },
            {
                "code": "else bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01588.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01588.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest01588\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01588.java"
            }
        ],
        "id": "AWyvhtj4dg2jiL0y7d45"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().println(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01593.java"
            },
            {
                "code": "String bar = new Test().doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01593.java"
            },
            {
                "code": "else bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01593.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01593.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest01593\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01593.java"
            }
        ],
        "id": "AWyvhtjVdg2jiL0y7d4z"
    },
    {
        "taints": [
            {
                "code": "out.format(java.util.Locale.US,\"Formatted like: %1$s and %2$s.\",obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01914.java"
            },
            {
                "code": "Object[] obj = { \"a\", bar };",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01914.java"
            },
            {
                "code": "param = request.getHeader(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01914.java"
            }
        ],
        "id": "AWyvhtl4dg2jiL0y7d5P"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().format(\"Formatted like: %1$s and %2$s.\",obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01915.java"
            },
            {
                "code": "Object[] obj = { \"a\", bar };",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01915.java"
            },
            {
                "code": "param = request.getHeader(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01915.java"
            }
        ],
        "id": "AWyvhtmSdg2jiL0y7d5T"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(java.util.Locale.US,\"Formatted like: %1$s and %2$s.\",obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01918.java"
            },
            {
                "code": "Object[] obj = { \"a\", bar};",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01918.java"
            },
            {
                "code": "param = request.getHeader(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest01918.java"
            }
        ],
        "id": "AWyvhtlEdg2jiL0y7d5G"
    },
    {
        "taints": [
            {
                "code": "out.format(java.util.Locale.US,\"Formatted like: %1$s and %2$s.\",obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02045.java"
            },
            {
                "code": "Object[] obj = { \"a\", bar };",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02045.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02045.java"
            }
        ],
        "id": "AWyvhtlVdg2jiL0y7d5J"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(\"Formatted like: %1$s and %2$s.\",obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02053.java"
            },
            {
                "code": "Object[] obj = { bar, \"b\"};",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02053.java"
            },
            {
                "code": "java.util.Enumeration<String> headers = request.getHeaders(\"Referer\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02053.java"
            }
        ],
        "id": "AWyvhtjndg2jiL0y7d42"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().format(java.util.Locale.US,bar,obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02222.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02222.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02222.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02222.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest02222\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02222.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02222.java"
            }
        ],
        "id": "AWyvhtjhdg2jiL0y7d41"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().print(bar.toCharArray());",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02226.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02226.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02226.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02226.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest02226\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02226.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02226.java"
            }
        ],
        "id": "AWyvhti4dg2jiL0y7d4u"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().println(bar.toCharArray());",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02235.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02235.java"
            },
            {
                "code": "else bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02235.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02235.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest02235\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02235.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02235.java"
            }
        ],
        "id": "AWyvhtkndg2jiL0y7d5B"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().println(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02236.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02236.java"
            },
            {
                "code": "else bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02236.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02236.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest02236\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02236.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02236.java"
            }
        ],
        "id": "AWyvhtjbdg2jiL0y7d40"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02240.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02240.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02240.java"
            },
            {
                "code": "if (values != null) param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02240.java"
            },
            {
                "code": "String[] values = map.get(\"BenchmarkTest02240\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02240.java"
            },
            {
                "code": "java.util.Map<String,String[]> map = request.getParameterMap();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02240.java"
            }
        ],
        "id": "AWyvhtltdg2jiL0y7d5N"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().print(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02319.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02319.java"
            },
            {
                "code": "else bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02319.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02319.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02319.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02319.java"
            }
        ],
        "id": "AWyvhtkhdg2jiL0y7d5A"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().println(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02325.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02325.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02325.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02325.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02325.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02325.java"
            }
        ],
        "id": "AWyvhtk5dg2jiL0y7d5E"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(bar.toCharArray(),0,length);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02329.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02329.java"
            },
            {
                "code": "else bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02329.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02329.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02329.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02329.java"
            }
        ],
        "id": "AWyvhtmFdg2jiL0y7d5R"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(bar.toCharArray(),0,length);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02330.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02330.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02330.java"
            },
            {
                "code": "param = name;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02330.java"
            },
            {
                "code": "String name = (String) names.nextElement();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02330.java"
            },
            {
                "code": "java.util.Enumeration<String> names = request.getParameterNames();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02330.java"
            }
        ],
        "id": "AWyvhtmLdg2jiL0y7d5S"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(java.util.Locale.US,bar,obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02404.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02404.java"
            },
            {
                "code": "else bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02404.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest02404\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02404.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AWyvhtkbdg2jiL0y7d4_"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().println(bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02406.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02406.java"
            },
            {
                "code": "else bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02406.java"
            },
            {
                "code": "String param = scr.getTheParameter(\"BenchmarkTest02406\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02406.java"
            },
            {
                "code": "return request.getParameter(p);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"
            }
        ],
        "id": "AWyvhtjEdg2jiL0y7d4w"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().print(bar.toCharArray());",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02482.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02482.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02482.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02482.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest02482\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02482.java"
            }
        ],
        "id": "AWyvhtlzdg2jiL0y7d5O"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(bar, 0, length);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02495.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02495.java"
            },
            {
                "code": "bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02495.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02495.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest02495\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02495.java"
            }
        ],
        "id": "AWyvhtijdg2jiL0y7d4r"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(\"Parameter value: \" + bar);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02509.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02509.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02509.java"
            },
            {
                "code": "param = values[0];",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02509.java"
            },
            {
                "code": "String[] values = request.getParameterValues(\"BenchmarkTest02509\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02509.java"
            }
        ],
        "id": "AWyvhtlbdg2jiL0y7d5K"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().printf(bar,obj);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02593.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02593.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02593.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02593.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02593.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02593.java"
            }
        ],
        "id": "AWyvhtdDdg2jiL0y7d4W"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().println(bar.toCharArray());",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02594.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02594.java"
            },
            {
                "code": "bar = (7*18) + num > 200 ? \"This_should_always_happen\" : param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02594.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02594.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02594.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02594.java"
            }
        ],
        "id": "AWyvhtcUdg2jiL0y7d4U"
    },
    {
        "taints": [
            {
                "code": "response.getWriter().write(bar.toCharArray());",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02599.java"
            },
            {
                "code": "String bar = doSomething(request, param);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02599.java"
            },
            {
                "code": "else bar = param;",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02599.java"
            },
            {
                "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\");",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02599.java"
            },
            {
                "code": "param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02599.java"
            },
            {
                "code": "String queryString = request.getQueryString();",
                "file": "org.owasp:benchmark:agigleux:src/main/java/org/owasp/benchmark/testcode/xss/noissueexpected_discarded/pathsensitivity/BenchmarkTest02599.java"
            }
        ],
        "id": "AWyvhtfndg2jiL0y7d4g"
    }
]